{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":1028,\"strength\":1,\"defense\":1,\"dexterity\":43,\"agility\":37,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":97452237.36115997,\"strength\":0,\"defense\":0,\"dexterity\":541.0814078151798,\"agility\":628.9192986942676,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.7347219640873006,\"hacking_speed\":1.726058249374342,\"hacking_money\":2.898650399009886,\"hacking_grow\":1.7359266972151675,\"hacking\":2.6476341394430727,\"strength\":1.5970525614379538,\"defense\":1.388741357772134,\"dexterity\":1.8445957084608362,\"agility\":1.4581784256607397,\"charisma\":1.388741357772134,\"hacking_exp\":3.4954535296620333,\"strength_exp\":1.7567578175817493,\"defense_exp\":1.7567578175817493,\"dexterity_exp\":1.7567578175817493,\"agility_exp\":1.7567578175817493,\"charisma_exp\":1.7567578175817493,\"company_rep\":1.388741357772134,\"faction_rep\":1.388741357772134,\"crime_money\":1.388741357772134,\"crime_success\":1.388741357772134,\"hacknet_node_money\":3.502535898803612,\"hacknet_node_purchase_cost\":0.5508585135156041,\"hacknet_node_ram_cost\":0.7200764882556915,\"hacknet_node_core_cost\":0.7200764882556915,\"hacknet_node_level_cost\":0.6120650150173378,\"work_money\":1.388741357772134,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":33,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"The Black Hand\"}],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Neural Accelerator\"}],\"city\":\"Sector-12\",\"bitNodeN\":1,\"corporation\":null,\"gang\":null,\"bladeburner\":null,\"currentServer\":\"home\",\"factions\":[\"BitRunners\",\"Netburners\"],\"factionInvitations\":[\"Sector-12\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":32122.83975641496,\"onlineTimeSeconds\":2094.0000000002865,\"ram\":64,\"totalMoneyGenerated\":66721039.27662915,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1928.0000000003013,\"ram\":1,\"totalMoneyGenerated\":10129.333819340141,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1927.8000000003012,\"ram\":1,\"totalMoneyGenerated\":10128.2830585705,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1927.6000000003012,\"ram\":1,\"totalMoneyGenerated\":10127.232297800858,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1927.6000000003012,\"ram\":1,\"totalMoneyGenerated\":10127.232297800858,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1927.4000000003011,\"ram\":1,\"totalMoneyGenerated\":10126.181537031216,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1927.200000000301,\"ram\":1,\"totalMoneyGenerated\":10125.130776261574,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1927.000000000301,\"ram\":1,\"totalMoneyGenerated\":10124.080015491932,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1927.000000000301,\"ram\":1,\"totalMoneyGenerated\":10124.080015491932,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1926.800000000301,\"ram\":1,\"totalMoneyGenerated\":10123.02925472229,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1926.600000000301,\"ram\":1,\"totalMoneyGenerated\":10121.978493952649,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1926.400000000301,\"ram\":1,\"totalMoneyGenerated\":10120.927733183007,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1926.2000000003009,\"ram\":1,\"totalMoneyGenerated\":10119.876972413365,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1926.0000000003008,\"ram\":1,\"totalMoneyGenerated\":10118.826211643724,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1925.8000000003008,\"ram\":1,\"totalMoneyGenerated\":10117.775450874082,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1925.6000000003007,\"ram\":1,\"totalMoneyGenerated\":10116.72469010444,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1925.2000000003006,\"ram\":1,\"totalMoneyGenerated\":10114.623168565156,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1924.8000000003005,\"ram\":1,\"totalMoneyGenerated\":10112.521647025873,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1924.6000000003005,\"ram\":1,\"totalMoneyGenerated\":10111.470886256231,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1924.6000000003005,\"ram\":1,\"totalMoneyGenerated\":10111.470886256231,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1924.4000000003005,\"ram\":1,\"totalMoneyGenerated\":10110.42012548659,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1791.8000000002703,\"ram\":1,\"totalMoneyGenerated\":9413.765735214087,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1505.4000000002052,\"ram\":1,\"totalMoneyGenerated\":7909.076313087297,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":1280.000000000154,\"ram\":1,\"totalMoneyGenerated\":6724.868925702032,\"name\":\"hacknet-node-23\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":28.99999999999993,\"ram\":1,\"totalMoneyGenerated\":152.3603115979572,\"name\":\"hacknet-node-24\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":28.79999999999993,\"ram\":1,\"totalMoneyGenerated\":151.30955082831613,\"name\":\"hacknet-node-25\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":28.39999999999993,\"ram\":1,\"totalMoneyGenerated\":149.208029289034,\"name\":\"hacknet-node-26\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":27.999999999999932,\"ram\":1,\"totalMoneyGenerated\":147.10650774975184,\"name\":\"hacknet-node-27\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":27.599999999999934,\"ram\":1,\"totalMoneyGenerated\":145.0049862104697,\"name\":\"hacknet-node-28\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":1,\"moneyGainRatePerSecond\":5.253803848205418,\"onlineTimeSeconds\":27.199999999999935,\"ram\":1,\"totalMoneyGenerated\":142.90346467118755,\"name\":\"hacknet-node-29\"}}],\"has4SData\":true,\"has4SDataTixApi\":true,\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0,\"Company Favor\":0}}},\"hasTixApiAccess\":true,\"hasWseAccount\":true,\"jobs\":{},\"karma\":-633.2400000000482,\"numPeopleKilled\":0,\"location\":\"Travel Agency\",\"money\":308601032241.34955,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-116448,\"codingcontract\":0,\"corporation\":0,\"crime\":2402522.548945792,\"gang\":0,\"hacking\":95955063241.06082,\"hacknet\":66948386.07957419,\"hacknet_expenses\":-67398994024.94473,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":293955751462.8717,\"total\":308600032241.34955,\"work\":0,\"servers\":-101822898.40824321,\"other\":-286700000,\"augmentations\":-13592500000}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":-5733728,\"codingcontract\":0,\"corporation\":0,\"crime\":188678473.06421748,\"gang\":0,\"hacking\":150363421946.95483,\"hacknet\":803949249.4951044,\"hacknet_expenses\":-67451288061.58034,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":276059200489.4308,\"total\":310951160756.7141,\"work\":0,\"servers\":-7568203432.915763,\"other\":-409999998.5300865,\"augmentations\":-41028864181.34888}},\"playtimeSinceLastAug\":87854000,\"playtimeSinceLastBitnode\":598221200,\"lastAugReset\":1698653891650,\"lastNodeReset\":-1,\"purchasedServers\":[\"vps-absol\",\"vps-arcanine\",\"vps-buneary\",\"vps-charmander\",\"vps-clefairy\",\"vps-cubone\",\"vps-dartrix\",\"vps-dragonite\",\"vps-eevee\",\"vps-ekans\",\"vps-gengar\",\"vps-latios\",\"vps-marowak\",\"vps-meowth\",\"vps-nuzleaf\",\"vps-pikachu\",\"vps-rattata\",\"vps-scorbunny\",\"vps-treecko\",\"vps-vulpix\",\"vps-zigzagoon\",\"vps-arbok\",\"vps-bonsly\",\"vps-diglet\",\"vps-poochyena\"],\"scriptProdSinceLastAug\":312516216326.868,\"sleeves\":[],\"sleevesFromCovenant\":0,\"sourceFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1698143775838},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1698145455843},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1698146115849},{\"ID\":\"WORKOUT\",\"unlockedOn\":1698148695843},{\"ID\":\"TOR\",\"unlockedOn\":1698149535854},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1698151095842},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1698151335842},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1698151635846},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1698154575844},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1698154815845},{\"ID\":\"FROZE\",\"unlockedOn\":1698308283591},{\"ID\":\"NITESEC\",\"unlockedOn\":1698315243602},{\"ID\":\"TRAVEL\",\"unlockedOn\":1698325803591},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1698455311823},{\"ID\":\"DONATION\",\"unlockedOn\":1698538080066},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1698541620050},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1698566851474},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1698571351468},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1698571471475},{\"ID\":\"4S\",\"unlockedOn\":1698575311467},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1698739718915},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1698739838909}],\"terminalCommandHistory\":[\"biotic 4\",\"buy -l\",\"buy FTPCrack.exe \",\"cls\",\"./bubble-rider.js \",\"./bubble-rider.js trade\",\"ps\",\"traceroute run4theh111z\",\"home; connect sigma-cosmetics; connect nectar-net; connect silver-helix; connect the-hub; connect syscore; connect lexo-corp; connect snap-fitness; connect deltaone; connect icarus; connect nova-med; connect run4theh111z\",\"analyse\",\"home\",\"buy -l\",\"buy relaySMTP.exe \",\"cls\",\"buy -l\",\"cls\",\"ps\",\"kill 1\",\"biotic 4 --no-vps-upgrade\",\"cls\",\"home; connect sigma-cosmetics; connect nectar-net; connect silver-helix; connect the-hub; connect syscore; connect lexo-corp; connect snap-fitness; connect deltaone; connect icarus; connect nova-med; connect run4theh111z\",\"analyse\",\"backdoor\",\"home\",\"buy -l\",\"buy HTTPWorm.exe \",\"home; connect sigma-cosmetics; connect nectar-net; connect silver-helix; connect the-hub; connect syscore; connect lexo-corp; connect snap-fitness; connect deltaone; connect icarus; connect nova-med; connect run4theh111z\",\"backdoor\",\"cls\",\"backdoor\",\"home\",\"nano ./bubble-rider.js \",\"./bubble-rider.js \",\"./bubble-rider.js trade\",\"nano bubble-rider.js \",\"./bubble-rider.js trade\",\"cls\",\"buy -l\",\"cls\",\"./bubble-rider.js trade\",\"cls\",\"biotic 4 --no-vps-upgrade\",\"buy -l\",\"buy SQLInject.exe \",\"buy -l\",\"cls\",\"ps\",\"./bubble-rider.js sell\",\"kill 1\",\"ps\"],\"lastUpdate\":1698741745700,\"lastSave\":1698741686904,\"totalPlaytime\":598221200,\"currentWork\":null,\"focus\":false,\"entropy\":0,\"identifier\":\"1780e40f4efd62\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"27.2.2.5\",\"isConnectedTo\":true,\"maxRam\":64,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"BruteSSH.exe\",\"fl1ght.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\"],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"home\"}}],[\"crawler.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach } from \\\"utils.js\\\";\\n\\nexport function Crawler(ns, options){\\n  \\n  var resultLimit = options.resultLimit;\\n  var rootHost = options.rootHost;\\n  \\n  // These host names have already been scanned.\\n  var completeHosts = [];\\n  \\n  // These host names are recently discovered and\\n  // may not have been scanned.\\n  var discoveredHosts = [];\\n  \\n  // Returns false when there is no more work to do.\\n  async function step(){\\n    \\n    // Run out\\n    if(discoveredHosts.length == 0){\\n      return false;\\n    }\\n    \\n    // Result limit reached\\n    if(discoveredHosts.length >= resultLimit){\\n      return false;\\n    }\\n    \\n    // Processing\\n    var hostname = discoveredHosts.pop();\\n    var alreadyScanned = completeHosts.indexOf(hostname) >= 0;\\n    if (!alreadyScanned){\\n      completeHosts.push(hostname);\\n      var siblings = await ns.scan(hostname);\\n      forEach(siblings, function(i, e){\\n        discoveredHosts.push(e);\\n      });\\n    }\\n    return true;\\n    \\n  }\\n  \\n  async function crawl(){\\n    completeHosts = [];\\n    discoveredHosts = [rootHost];\\n    while(await step()){\\n      await ns.sleep(10);\\n    }\\n    return completeHosts;\\n  }\\n  \\n  return {\\n    crawl\\n  };\\n  \\n}\\n\",\"filename\":\"crawler.js\",\"server\":\"home\"}}],[\"traceroute.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach, pushAll } from \\\"./utils.js\\\";\\n\\nfunction HostCollection(hostnames){\\n  \\n  var items = [...hostnames];\\n  \\n  function addAll(newHostnames){\\n    pushAll(items, newHostnames);\\n  }\\n  \\n  function notContains(hostname){\\n    return items.indexOf(hostname) < 0;\\n  }\\n  \\n  return {\\n    addAll,\\n    notContains\\n  }\\n  \\n}\\n\\nfunction ServerRoute (ns, knownHosts, parentRoute, hostname){\\n  \\n  function getRoute(){\\n    return [hostname].concat([...parentRoute]);\\n  }\\n  \\n  async function findChildren(){\\n    var neighbours = await ns.scan(hostname);\\n    var newHosts = neighbours.filter(knownHosts.notContains);\\n    knownHosts.addAll(newHosts);\\n    var children = newHosts.map(function(childHostname){\\n        return new ServerRoute(ns, knownHosts, getRoute(), childHostname);\\n      });\\n    return children;\\n  }\\n  \\n  return {\\n    hostname,\\n    getRoute,\\n    findChildren\\n  }\\n  \\n}\\n\\nexport function TraceRoute (ns, options){\\n  \\n  var resultLimit = options.resultLimit;\\n  var rootHost = options.rootHost;\\n  \\n  async function crawl(){\\n    \\n    var knownHostCollection = new HostCollection([rootHost]);\\n    var rootRoute = new ServerRoute(ns, knownHostCollection, [], rootHost);\\n    var unscannedHosts = [rootRoute];\\n    var scannedHosts = [];\\n    \\n    while(unscannedHosts.length > 0){\\n      \\n      var nextHost = unscannedHosts.pop();\\n      \\n      var resultLimitReached =\\n        unscannedHosts.length > resultLimit ||\\n        scannedHosts.length > resultLimit;\\n      if(resultLimitReached){\\n        ns.print(\\\"Trace route result limit reached.\\\");\\n        break;\\n      }\\n      \\n      var children = await nextHost.findChildren();\\n      pushAll(unscannedHosts, children);\\n      scannedHosts.push(nextHost);\\n      \\n    }\\n    \\n    return scannedHosts;\\n    \\n  }\\n  \\n  return {\\n    crawl\\n  };\\n  \\n}\\n\\nfunction printRoute(ns, route, connectMode){\\n  var hostnames = route.getRoute().reverse();\\n  var joiner = connectMode ? \\\"; connect \\\" : \\\" -> \\\";\\n  ns.tprint(hostnames.join(joiner));\\n}\\n\\nexport async function main(ns){\\n  \\n  var traceRoute = new TraceRoute(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var allRoutes = await traceRoute.crawl();\\n  \\n  var connectMode;\\n  if(ns.args.length >= 2 && ns.args[1] == \\\"--connect\\\"){\\n    connectMode = true;\\n  } else {\\n    connectMode = false;\\n  }\\n\\n  connectMode = true; // Because fuck it\\n  \\n  var matchingRoutes;\\n  if(ns.args.length == 0){\\n    matchingRoutes = allRoutes;\\n  } else {\\n    var targetHostname = ns.args[0];\\n    matchingRoutes = allRoutes\\n      .filter(function(route){\\n        return route.hostname == targetHostname;\\n      });\\n  }\\n  \\n  forEach(matchingRoutes, function(i, route){\\n    printRoute(ns, route, connectMode);\\n  });\\n\\n}\",\"filename\":\"traceroute.js\",\"server\":\"home\"}}],[\"thief.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nfunction Thief (ns, target) {\\n  \\n  var lastMoney = ns.getServerMoneyAvailable(target);\\n  var maxMoney = ns.getServerMaxMoney(target) * 0.95;\\n  \\n  var lastSecurity = ns.getServerSecurityLevel(target);\\n  var minSecurity = ns.getServerMinSecurityLevel(target) + 1;\\n\\n  async function heuristic(){\\n    \\n    var currentMoney = ns.getServerMoneyAvailable(target);\\n    var targetMoney = Math.min(maxMoney, lastMoney * 1.05 + 1);\\n    \\n    var currentSecurity = ns.getServerSecurityLevel(target);\\n    var targetSecurity = Math.max(minSecurity, lastSecurity * 0.8);\\n    \\n    ns.print(\\\"### Target security: \\\", currentSecurity, \\\" / \\\", targetSecurity);\\n    ns.print(\\\"### Target money: \\\", currentMoney, \\\" / \\\", targetMoney);\\n    \\n    if (currentSecurity > targetSecurity) {\\n      await ns.weaken(target);\\n    } else if (currentMoney < targetMoney) {\\n      await ns.grow(target);\\n    } else {\\n      lastSecurity = currentSecurity;\\n      lastMoney = currentMoney;\\n      await ns.hack(target);\\n    }\\n    \\n    await ns.sleep(Math.floor(1000*Math.random()));\\n    \\n  }\\n\\n  async function start() {\\n    await safeLoop(ns, heuristic);\\n  }\\n\\n  return {\\n    start\\n  };\\n\\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  thief.js <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  var argc = ns.args.length;\\n  if(argc != 1){\\n    printHelp(ns);\\n    return;\\n  }\\n  \\n  var target = ns.args[0];\\n  var thief = new Thief(ns, target);\\n  await thief.start();\\n  \\n}\",\"filename\":\"thief.js\",\"server\":\"home\"}}],[\"root-server.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEachAsync } from \\\"./utils.js\\\";\\n\\nexport async function portPoppers(ns){\\n  \\n  var possiblePoppers = [\\n    { bin: \\\"FTPCrack.exe\\\", invoke: ns.ftpcrack },\\n    { bin: \\\"BruteSSH.exe\\\", invoke: ns.brutessh },\\n    { bin: \\\"relaySMTP.exe\\\", invoke: ns.relaysmtp },\\n    { bin: \\\"HTTPWorm.exe\\\", invoke: ns.httpworm },\\n    { bin: \\\"SQLInject.exe\\\", invoke: ns.sqlinject }\\n  ];\\n  \\n  var installedPopppers = [];\\n  await forEachAsync(possiblePoppers, async function(i, e){\\n    if (await ns.fileExists(e.bin, \\\"home\\\")){\\n      installedPopppers.push(e);\\n    }\\n  });\\n  \\n  return installedPopppers;\\n  \\n}\\n\\nexport async function isVulnerable(ns, hostname) {\\n  var poppers = await portPoppers(ns);\\n  var myLevel = await ns.getHackingLevel();\\n  var requiredLevel = await ns.getServerRequiredHackingLevel(hostname);\\n  var portsRequired = await ns.getServerNumPortsRequired(hostname);\\n  return myLevel >= requiredLevel && poppers.length >= portsRequired;\\n}\\n\\nexport async function rootServer(ns, hostname){\\n  var hasRootAccess = await ns.hasRootAccess(hostname);\\n  var vulnerable = await isVulnerable(ns, hostname);\\n  if(!hasRootAccess && vulnerable){\\n    var poppers = await portPoppers(ns);\\n    await forEachAsync(poppers, async function(i, e){\\n      await e.invoke(hostname);\\n    });\\n    await ns.nuke(hostname);\\n    return true;\\n  } else {\\n    return false;\\n  }\\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  root-server.js <hostname>\\\");\\n}\\n\\nexport async function main(ns) {\\n  if (ns.args.length == 1){\\n    if(await rootServer(ns, ns.args[0])){\\n      ns.tprint(\\\"Success\\\");\\n    } else {\\n      ns.tprint(\\\"Failed\\\");\\n    }\\n  } else {\\n    printHelp(ns);\\n  }\\n}\",\"filename\":\"root-server.js\",\"server\":\"home\"}}],[\"node-nurse.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nfunction defaultOptions(){\\n  return {\\n    maxNodes: 32,\\n    maxNodeLevel: 200,\\n    maxNodeRam: 64,\\n    maxNodeCores: 16\\n  };\\n};\\n\\nexport function NodeNurse(ns, options){\\n  \\n  var maxNodes = options.maxNodes;\\n  var maxNodeLevel = options.maxNodeLevel;\\n  var maxNodeRam = options.maxNodeRam;\\n  var maxNodeCores = options.maxNodeCores;\\n  \\n  async function buyNodes(){\\n    while(await ns.hacknet.numNodes() < maxNodes){\\n      var currentFunds = await ns.getServerMoneyAvailable(\\\"home\\\");\\n      var cost = await ns.hacknet.getPurchaseNodeCost();\\n      if (cost > currentFunds) break;\\n      var newNode = await ns.hacknet.purchaseNode();\\n      if (newNode < 0) {\\n        ns.print(\\\"Attempted node purchase failed\\\");\\n        break;\\n      }\\n      await ns.sleep(100);\\n    }\\n  }\\n  \\n  async function nodesByLowest(getSize){\\n    var nodeCount = await ns.hacknet.numNodes();\\n    var scored = [];\\n    for(var i = 0; i < nodeCount; i++){\\n      scored.push({\\n        index: i,\\n        score: await getSize(i)\\n      });\\n    }\\n    return scored\\n      .sort(function(a, b){\\n        return a.score - b.score;\\n      })\\n      .map(function(x){\\n        return x.index;\\n      });\\n  }\\n  \\n  async function increaseOn(\\n      nodeId,\\n      max,\\n      getSize,\\n      getCost,\\n      upgrade){\\n    \\n    if(await getSize(nodeId) >= max) return false;\\n    \\n    var currentFunds = await ns.getServerMoneyAvailable(\\\"home\\\");\\n    var cost = await getCost(nodeId, 1);\\n    if (cost > currentFunds) return false;\\n    \\n    var success = await upgrade(nodeId);\\n    if (!success) {\\n      ns.print(\\\"Attempted upgrade failed\\\");\\n    };\\n    \\n    return success;\\n      \\n  }\\n  \\n  async function increase(max, getSize, getCost, upgrade){\\n    for(var success = true; success; ){\\n      var nodes = await nodesByLowest(getSize);\\n      var success = await increaseOn(\\n          nodes[0],\\n          max,\\n          getSize,\\n          getCost,\\n          upgrade);\\n    }\\n  }\\n  \\n  async function getCoreCount(i){\\n    var stats = await ns.hacknet.getNodeStats(i);\\n    return stats.cores;\\n  }\\n  \\n  async function getRamSize(i){\\n    var stats = await ns.hacknet.getNodeStats(i);\\n    return stats.ram;\\n  }\\n  \\n  async function getLevel(i){\\n    var stats = await ns.hacknet.getNodeStats(i);\\n    return stats.level;\\n  }\\n  \\n  async function maintain(){\\n    await buyNodes();\\n    await increase(\\n      maxNodeRam,\\n      getRamSize,\\n      ns.hacknet.getRamUpgradeCost,\\n      ns.hacknet.upgradeRam);\\n    await increase(\\n      maxNodeLevel,\\n      getLevel,\\n      ns.hacknet.getLevelUpgradeCost,\\n      ns.hacknet.upgradeLevel);\\n    await increase(\\n      maxNodeCores,\\n      getCoreCount,\\n      ns.hacknet.getCoreUpgradeCost,\\n      ns.hacknet.upgradeCore);\\n  }\\n  \\n  return {\\n    maintain\\n  };\\n  \\n}\\n\\nexport async function main(ns){\\n  var nurse = new NodeNurse(ns, defaultOptions());\\n  for(;;){\\n    await nurse.maintain();\\n    await ns.sleep(60 * 1000);\\n  }\\n}\",\"filename\":\"node-nurse.js\",\"server\":\"home\"}}],[\"vps.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport function getVpsNames(){\\n  return [\\n    \\\"vps-absol\\\",\\n    \\\"vps-arbok\\\",\\n    \\\"vps-arcanine\\\",\\n    \\\"vps-bonsly\\\",\\n    \\\"vps-buneary\\\",\\n    \\\"vps-charmander\\\",\\n    \\\"vps-clefairy\\\",\\n    \\\"vps-cubone\\\",\\n    \\\"vps-dartrix\\\",\\n    \\\"vps-diglet\\\",\\n    \\\"vps-dragonite\\\",\\n    \\\"vps-eevee\\\",\\n    \\\"vps-ekans\\\",\\n    \\\"vps-gengar\\\",\\n    \\\"vps-latios\\\",\\n    \\\"vps-marowak\\\",\\n    \\\"vps-meowth\\\",\\n    \\\"vps-nuzleaf\\\",\\n    \\\"vps-pikachu\\\",\\n    \\\"vps-poochyena\\\",\\n    \\\"vps-rattata\\\",\\n    \\\"vps-scorbunny\\\",\\n    \\\"vps-treecko\\\",\\n    \\\"vps-vulpix\\\",\\n    \\\"vps-zigzagoon\\\"\\n  ];\\n}\\n\\nasync function quote(ns, size){\\n  var dollars = await ns.getPurchasedServerCost(size);\\n  var kilodollars = dollars / 1000;\\n  ns.tprint(\\\"$\\\" + kilodollars + \\\"k\\\");\\n}\\n\\nasync function buy(ns, name, size){\\n  var newServer = await ns.purchaseServer(name, size);\\n  if (newServer == \\\"\\\"){\\n    ns.tprint(\\\"Failed to purchase server.\\\");\\n  }\\n}\\n\\nasync function sell(ns, name){\\n  var success = await ns.deleteServer(name);\\n  if (!success){\\n    ns.tprint(\\\"Failed to sell server.\\\");\\n  }\\n}\\n\\nfunction Vps(ns, options){\\n  \\n  var hostname = options.hostname;\\n  var decommission = options.decommission;\\n  var commission = options.commission;\\n  var trace = options.trace;\\n  \\n  async function getSize(){\\n    var exists = await ns.serverExists(hostname);\\n    if (exists){\\n      return await ns.getServerMaxRam(hostname);\\n    } else {\\n      return 0;\\n    }\\n  }\\n  \\n  async function quote(size){\\n    return await ns.getPurchasedServerCost(size);\\n  }\\n  \\n  async function install(size){\\n    var exists = await ns.serverExists(hostname);\\n    if (exists){\\n      await decommission(hostname);\\n      var deleteSuccess = await ns.deleteServer(hostname);\\n      if(!deleteSuccess){\\n        await trace(\\\"Failed to delete server \\\" + hostname);\\n        return false;\\n      }\\n    }\\n    var boughtServerName = await ns.purchaseServer(hostname, size);\\n    if(boughtServerName == \\\"\\\"){\\n      await trace(\\\"Failed to purchase server \\\" + hostname);\\n      return false;\\n    }\\n    await ns.sleep(1000);\\n    await commission(hostname);\\n    return true;\\n  }\\n  \\n  async function considerUpgrade(levelIncrease){\\n    \\n    var currentSize = await getSize();\\n    var newSize;\\n    if (currentSize > 0){\\n      var newSize = currentSize * 2**levelIncrease;\\n    } else {\\n      var newSize = 2**(levelIncrease + 2); // At least 8\\n    }\\n    \\n    async function quoteNewSize(){\\n      return await quote(newSize);\\n    }\\n    \\n    async function installNewSize(){\\n      return await install(newSize);\\n    }\\n    \\n    return {\\n      hostname: hostname,\\n      size: newSize,\\n      quote: quoteNewSize,\\n      install: installNewSize\\n    };\\n    \\n  }\\n\\n  async function currentState(){\\n    \\n    var currentSize = await getSize();\\n    \\n    async function quoteNothing(){\\n      return 0;\\n    }\\n    \\n    async function doNothing(){ }\\n    \\n    return {\\n      hostname: hostname,\\n      size: currentSize,\\n      quote: quoteNothing,\\n      install: doNothing\\n    };\\n    \\n  }\\n  \\n  return {\\n    hostname,\\n    currentState,\\n    considerUpgrade\\n  };\\n  \\n}\\n\\nexport function VpsManager(ns, options){\\n  \\n  var hostnames = options.hostnames;\\n  var decommission = options.decommission;\\n  var commission = options.commission;\\n  var trace = options.trace;\\n  \\n  var servers = hostnames.map(\\n    function(hostname){\\n      return new Vps(ns, {\\n        hostname,\\n        decommission,\\n        commission,\\n        trace\\n      });\\n    });\\n    \\n  async function quoteAll(proposals){\\n    var quote = 0;\\n    for(var i in proposals){\\n      quote += await proposals[i].upgrade.quote();\\n    }\\n    return quote;\\n  }\\n  \\n  async function currentPortfolio(){\\n    var serverStates = [];\\n    for(var i in servers){\\n      serverStates.push({\\n        server: servers[i],\\n        levelIncrease: 0,\\n        upgrade: await servers[i].currentState()\\n      });\\n    }\\n    return serverStates;\\n  }\\n  \\n  async function planUpgrade(){\\n    \\n    var proposals = await currentPortfolio();\\n    proposals.sort(function(a, b){ return a.upgrade.size - b.upgrade.size; });\\n    \\n    for(var i = 0; i < proposals.length; i++){\\n      \\n      // Current proposal\\n      var proposal = proposals[i];\\n      var server = proposal.server;\\n      var levelIncreaseBefore = proposal.levelIncrease;\\n      var upgradeBefore = proposal.upgrade;\\n      var quoteBefore = await upgradeBefore.quote();\\n      var totalQuoteBefore = await quoteAll(proposals);\\n      \\n      // Upgrade Server as much as possible\\n      for(var levelIncreaseAfter = levelIncreaseBefore; ; levelIncreaseAfter++){\\n        \\n        var upgradeAfter = await server.considerUpgrade(levelIncreaseAfter);\\n        var quoteAfter = await upgradeAfter.quote();\\n        var totalQuoteAfter = totalQuoteBefore - quoteBefore + quoteAfter;\\n        \\n        // Can afford it? Update the proposal\\n        var funds = await ns.getServerMoneyAvailable(\\\"home\\\");\\n        if(totalQuoteAfter <= funds){\\n          proposal.levelIncrease = levelIncreaseAfter;\\n          proposal.upgrade = upgradeAfter;\\n        } else {\\n          break;\\n        }\\n        \\n      }\\n      \\n    }\\n    \\n    return proposals;\\n    \\n  }\\n  \\n  async function traceUpgrade(proposals){\\n    for(var i in proposals){\\n      if(proposals[i].levelIncrease > 0){\\n        await trace(\\n          proposals[i].server.hostname\\n          + \\\": +\\\"\\n          + proposals[i].levelIncrease);\\n      }\\n    }\\n  }\\n  \\n  async function executeUpgrade(proposals){\\n    for(var i in proposals){\\n      await proposals[i].upgrade.install();\\n    }\\n  }\\n  \\n  async function upgrade(){\\n    var proposals = await planUpgrade();\\n    await traceUpgrade(proposals);\\n    await executeUpgrade(proposals);\\n  }\\n  \\n  return {\\n    upgrade\\n  }\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  vps.js quote <log2(ram)>\\\");\\n  ns.tprint(\\\"  vps.js buy <name> <log2(ram)>\\\");\\n  ns.tprint(\\\"  vps.js sell <name>\\\");\\n  ns.tprint(\\\"  vps.js upgrade\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  var managerOptions = {\\n    hostnames: getVpsNames(),\\n    decommission: async function(hostname){\\n        await ns.killall(hostname);\\n      },\\n    commission: async function(hostname) {\\n        ns.tprint(hostname, \\\" has been upgraded.\\\");\\n      },\\n    trace: async function(msg){\\n        ns.tprint(msg);\\n      }\\n  };\\n\\n  if (ns.args.length == 2 && ns.args[0] == \\\"quote\\\"){\\n    await quote(ns, 2**ns.args[1]);\\n  } else if (ns.args.length == 3 && ns.args[0] == \\\"buy\\\"){\\n    await buy(ns, ns.args[1], 2**ns.args[2]);\\n  } else if (ns.args.length == 2 && ns.args[0] == \\\"sell\\\"){\\n    await sell(ns, ns.args[1]);\\n  } else if (ns.args.length == 1 && ns.args[0] == \\\"upgrade\\\"){\\n    var manager = new VpsManager(ns, managerOptions);\\n    await manager.upgrade();\\n    ns.tprint(\\\"Done.\\\");\\n  } else {\\n    printHelp(ns);\\n  }\\n\\n}\",\"filename\":\"vps.js\",\"server\":\"home\"}}],[\"reach.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { Crawler } from \\\"./crawler.js\\\";\\nimport { InstallThief } from \\\"./install-thief.js\\\";\\nimport { rootServer } from \\\"./root-server.js\\\";\\nimport { ServerFinder } from \\\"./find-server.js\\\";\\nimport { forEach, forEachAsync } from \\\"./utils.js\\\";\\nimport { getVpsNames, VpsManager } from \\\"./vps.js\\\";\\n\\nexport function Reach(ns, options){\\n  \\n  var targetLimit = options.targets;\\n  var crawler = options.crawler;\\n  var installer = options.installer;\\n  var decommission = options.decommission;\\n  var trace = options.trace;\\n  \\n  var serverTargets = { };\\n  \\n  function getCurrentServerTarget(server){\\n    return serverTargets[server] || null;\\n  }\\n  \\n  function setCurrentServerTarget(server, target){\\n    serverTargets[server] = target;\\n  }\\n  \\n  async function generateSchedule(servers){\\n    \\n    var hostFinder = new ServerFinder(ns, {\\n      hostnames: servers,\\n      limit: null,\\n      onlyWithRootAccess: true,\\n      onlyNotHome: true,\\n      onlyWithMoney: false,\\n      onlyNotMine: false\\n    });\\n    var bestHosts = await hostFinder.findBestHosts();\\n    var targetFinder = new ServerFinder(ns, {\\n      hostnames: servers,\\n      limit: targetLimit,\\n      onlyWithRootAccess: true,\\n      onlyNotHome: true,\\n      onlyWithMoney: true,\\n      onlyNotMine: true\\n    });\\n    var bestTargets = await targetFinder.findBestTargets();\\n    \\n    var schedule = {};\\n    if(bestTargets.length > 0){\\n      bestHosts.sort();\\n      bestTargets.sort();\\n      forEach(bestHosts, function(i, host){\\n        var correspondingTargetIndex = i % bestTargets.length;\\n        var correspondingTarget = bestTargets[correspondingTargetIndex];\\n        schedule[host] = correspondingTarget;\\n      });\\n    }\\n    return schedule;\\n    \\n  }\\n  \\n  async function tryRootServer(hostname){\\n    var success = await rootServer(ns, hostname);\\n    if (success){\\n      await trace(\\\"> Rooted server \\\" + hostname);\\n    }\\n  }\\n  \\n  async function tryInstall(hostname, target){\\n    var canInstall =\\n      await ns.hasRootAccess(hostname) &&\\n      await ns.hasRootAccess(target) &&\\n      hostname != \\\"home\\\";\\n    if (canInstall){\\n      await trace(\\\"> Updating: \\\" + hostname + \\\" targeting \\\" + target);\\n      await installer.installMax(hostname, target);\\n      setCurrentServerTarget(hostname, target);\\n    } else {\\n      await trace(\\\"! Cannot update: \\\" + hostname);\\n    }\\n  }\\n  \\n  async function deployEverywhere(forceReinstall){\\n    \\n    // Root servers\\n    var servers = await crawler.crawl();\\n    await forEachAsync(servers, async function(i, e){\\n      await tryRootServer(e);\\n    });\\n    \\n    // Schedule hosts and targets\\n    var schedule = await generateSchedule(servers);\\n    for(var server in schedule){\\n      var newTarget = schedule[server] || null;\\n      var currentTarget = getCurrentServerTarget(server);\\n      var reinstall =\\n        newTarget != currentTarget ||\\n        forceReinstall;\\n      if (reinstall && newTarget){\\n        await tryInstall(server, newTarget);\\n        await ns.sleep(500);\\n      } else {\\n        trace(\\\"> No update for \\\" + server);\\n      }\\n    }\\n\\n    trace(\\\"> Deployment complete.\\\");\\n    \\n  }\\n  \\n  async function removeEverywhere(){\\n    var servers = await crawler.crawl();\\n    await forEachAsync(servers, async function(i, e){\\n      if(e != \\\"home\\\"){\\n        await installer.uninstall(e);\\n      }\\n    });\\n  }\\n  \\n  async function upgradeVps(){\\n    var vpsHosts = await getVpsNames();\\n    var manager = new VpsManager(ns, {\\n      hostnames: vpsHosts,\\n      decommission: decommission,\\n      commission: function(){ },\\n      trace: trace\\n    });\\n    await manager.upgrade();\\n    trace(\\\"> VPS upgrade complete.\\\");\\n  }\\n  \\n  async function manage(){\\n    var upgradePeriod = 60*1000;\\n    for(;;){\\n      await upgradeVps();\\n      await deployEverywhere(false);\\n      await ns.sleep(upgradePeriod);\\n    }\\n  }\\n  \\n  return {\\n    deployEverywhere,\\n    manage,\\n    removeEverywhere\\n  };\\n  \\n}\\n\\nexport async function main(ns) {\\n  \\n  var install =\\n    ns.args.length == 2 &&\\n    ns.args[0] == \\\"install\\\";\\n  var manage =\\n    ns.args.length == 2 &&\\n    ns.args[0] == \\\"manage\\\";\\n  var uninstall = \\n    ns.args.length == 1 &&\\n    ns.args[0] == \\\"uninstall\\\";\\n  var target = ns.args.length >= 2 ? ns.args[1] : null;\\n  \\n  var crawler = new Crawler(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var installer = new InstallThief(ns);\\n  var reach = new Reach(ns, {\\n    targets: target,\\n    crawler: crawler,\\n    installer: installer,\\n    decommission: async function(hostname){ await ns.killall(hostname); },\\n    trace: manage ? ns.print : ns.tprint\\n  });\\n  \\n  if (install){\\n    await reach.deployEverywhere(true);\\n    ns.tprint(\\\"Done.\\\");\\n  } else if (manage){\\n    await reach.manage();\\n  } else if (uninstall){\\n    await reach.removeEverywhere();\\n    ns.tprint(\\\"Done.\\\");\\n  } else {\\n    ns.tprint(\\\"Usage:\\\");\\n    ns.tprint(\\\"  reach.js install <target limit> <host>\\\");\\n    ns.tprint(\\\"  reach.js manage <target limit>\\\");\\n    ns.tprint(\\\"  reach.js uninstall\\\");\\n  }\\n  \\n}\",\"filename\":\"reach.js\",\"server\":\"home\"}}],[\"cache.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar caches = { };\\n\\nexport function Cache(ns, name){\\n  \\n  var localhost = ns.getHostname();\\n  var cache = null;\\n  \\n  function load(key){\\n    return cache[key];\\n  }\\n\\n  function save(key, value){\\n    cache[key] = value;\\n  }\\n  \\n  async function open(){\\n    \\n    if (typeof(caches[name]) == \\\"undefined\\\"){\\n      caches[name] = { };\\n    }\\n    cache = caches[name];\\n    \\n    return {\\n      load,\\n      save\\n    };\\n    \\n  }\\n  \\n  return {\\n    open\\n  };\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cache.js <cache-name> <key>\\\");\\n  ns.tprint(\\\"  cache.js <cache-name> <key> <value>\\\");\\n}\\n\\nexport async function main(ns){\\n  if (ns.args.length == 2){\\n    var dbName = ns.args[0];\\n    var key = ns.args[1];\\n    var cache = await (new Cache(ns, dbName)).open();\\n    ns.tprint(cache.load(key));\\n  } else if (ns.args.length == 3){\\n    var dbName = ns.args[0];\\n    var key = ns.args[1];\\n    var value = ns.args[2];\\n    var cache = await (new Cache(ns, dbName)).open();\\n    cache.save(key, value);\\n  } else {\\n    printHelp(ns);\\n  }\\n}\",\"filename\":\"cache.js\",\"server\":\"home\"}}],[\"install-thief.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport function InstallThief (ns){\\n  \\n  var scriptName = \\\"thief.js\\\";\\n  var utilsName = \\\"utils.js\\\";\\n  \\n  async function sendScript(host){\\n    await ns.scp(scriptName, host);\\n    await ns.scp(utilsName, host);\\n  }\\n  \\n  async function removeScript(host){\\n    await ns.rm(scriptName, host);\\n    await ns.rm(utilsName, host);\\n  }\\n  \\n  async function stopScript(host){\\n    await ns.scriptKill(scriptName, host);\\n  }\\n  \\n  async function startScript(host, target, threadCount){\\n    await ns.exec(scriptName, host, threadCount, target);\\n  }\\n  \\n  async function install(host, target, threadCount) {\\n    await stopScript(host);\\n    await sendScript(host);\\n    await startScript(host, target, threadCount);\\n  }\\n  \\n  async function installMax(host, target) {\\n    var ramRequired = await ns.getScriptRam(scriptName);\\n    await stopScript(host);\\n    var ramMax = await ns.getServerMaxRam(host);\\n    var ramUsed = await ns.getServerUsedRam(host);\\n    var ramAvailable = ramMax - ramUsed;\\n    var threadCount = Math.floor(ramAvailable / ramRequired);\\n    await sendScript(host);\\n    if (threadCount > 0){\\n      await startScript(host, target, threadCount);\\n    }\\n  }\\n\\n  async function uninstall(host) {\\n    await stopScript(host);\\n    await removeScript(host);\\n  }\\n  \\n  return {\\n    install,\\n    installMax,\\n    uninstall\\n  };\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  install-thief.js install <host> <target> <threads>\\\");\\n  ns.tprint(\\\"  install-thief.js install-max <host> <target>\\\");\\n  ns.tprint(\\\"  install-thief.js uninstall <host>\\\");\\n}\\n\\nfunction readArgs(ns){\\n  \\n  var argc  = ns.args.length;\\n  if(argc <= 0){\\n    return null;\\n  }\\n  \\n  var command = ns.args[0];\\n  if (command == \\\"install\\\" && argc == 4){\\n    var host = ns.args[1];\\n    var target = ns.args[2];\\n    var threads = ns.args[3];\\n    return {\\n      mode: \\\"install\\\",\\n      host: host,\\n      target: target,\\n      threads: threads\\n    };\\n  } else if (command == \\\"install-max\\\" && argc == 3){\\n    var host = ns.args[1];\\n    var target = ns.args[2];\\n    return {\\n      mode: \\\"install-max\\\",\\n      host: host,\\n      target: target\\n    };\\n  } else if(command == \\\"uninstall\\\" && argc == 2) {\\n    var host = ns.args[1];\\n    return {\\n      mode: \\\"uninstall\\\",\\n      host: host\\n    };\\n  } else {\\n    return null;\\n  }\\n  \\n}\\n\\nexport async function main(ns) {\\n  var installThief = new InstallThief(ns);\\n  var options = readArgs(ns);\\n  if (options == null){\\n    printHelp(ns);\\n  } else if(options.mode == \\\"install\\\"){\\n    await installThief.install(options.host, options.target, options.threads);\\n  } else if(options.mode == \\\"install-max\\\"){\\n    await installThief.installMax(options.host, options.target);\\n  } else if(options.mode == \\\"uninstall\\\"){\\n    await installThief.uninstall(options.host);\\n  } else {\\n    printHelp(ns);\\n  }\\n}\",\"filename\":\"install-thief.js\",\"server\":\"home\"}}],[\"find-server.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach, forEachAsync } from \\\"utils.js\\\";\\nimport { Crawler } from \\\"crawler.js\\\";\\n\\nexport function ServerFinder(ns, options){\\n  \\n  var hostnames = options.hostnames;\\n  var limit = options.limit;\\n  var onlyWithRootAccess = options.onlyWithRootAccess;\\n  var onlyWithMoney = options.onlyWithMoney;\\n  var onlyNotMine = options.onlyNotMine;\\n  var onlyNotHome = options.onlyNotHome;\\n  var onlyLowSecurity = options.onlyLowSecurity;\\n    \\n  async function profileServers(){\\n    var profiles = [];\\n    await forEachAsync(hostnames, async function(i, e){\\n      profiles.push({\\n        hostname: e,\\n        hasRootAccess: await ns.hasRootAccess(e),\\n        maxMoney: await ns.getServerMaxMoney(e),\\n        maxRam: await ns.getServerMaxRam(e),\\n        minSecurity: await ns.getServerMinSecurityLevel(e),\\n      });\\n    });\\n    return profiles;\\n  }\\n  \\n  function getHostname(profile){\\n    return profile.hostname;\\n  }\\n  \\n  async function generateFilter(){\\n    \\n    var filters = [];\\n    \\n    if(onlyWithMoney){\\n      filters.push(function(serverProfile){\\n        return serverProfile.maxMoney > 0;\\n      });\\n    }\\n    \\n    if(onlyWithRootAccess){\\n      filters.push(function(serverProfile){\\n        return serverProfile.hasRootAccess;\\n      });\\n    }\\n    \\n    if(onlyNotMine){\\n      var myServers = await ns.getPurchasedServers();\\n      myServers.push(\\\"home\\\");\\n      filters.push(function(serverProfile){\\n        return myServers.indexOf(serverProfile.hostname) < 0;\\n      });\\n    }\\n    \\n    if(onlyNotHome){\\n      filters.push(function(serverProfile){\\n        return serverProfile.hostname != \\\"home\\\";\\n      });\\n    }\\n    \\n    if(onlyLowSecurity){\\n      var hackLevel = await ns.getHackingLevel();\\n      filters.push(function(serverProfile){\\n        var hackRequirement = (\\n          3 *\\n          serverProfile.minSecurity *\\n          serverProfile.minSecurity);\\n        return hackLevel >= hackRequirement ||\\n          serverProfile.minSecurity == 1;\\n      });\\n    }\\n    \\n    return function(serverProfile){\\n      var passing = true;\\n      forEach(filters, function(i, e){\\n        passing = passing && e(serverProfile);\\n      });\\n      return passing;\\n    };\\n    \\n  }\\n  \\n  function scoreTarget(profile){  \\n    var moneyScore = Math.log10(profile.maxMoney);\\n    var securityScore = 100 - profile.minSecurity;\\n    // Rank by min security, but bonus points for more money\\n    return securityScore + moneyScore;\\n  }\\n  \\n  function scoreHost(profile){\\n    return profile.maxRam;\\n  }\\n  \\n  function compareTargetsDesc(a, b){\\n    return scoreTarget(b) - scoreTarget(a);\\n  }\\n  \\n  function compareHostsDesc(a, b){\\n    return scoreHost(b) - scoreHost(a);\\n  }\\n  \\n  async function findBest(compareDesc){\\n    var profiles = await profileServers();\\n    var filter = await generateFilter();\\n    return profiles\\n      .filter(filter)\\n      .sort(compareDesc)\\n      .slice(0, limit || Infinity)\\n      .map(getHostname);\\n  }\\n  \\n  async function findBestTargets(){\\n    return await findBest(compareTargetsDesc);\\n  }\\n  \\n  async function findBestHosts(){\\n    return await findBest(compareHostsDesc);\\n  }\\n  \\n  return {\\n    findBestTargets,\\n    findBestHosts\\n  };\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  find-server.js host <limit>\\\");\\n  ns.tprint(\\\"  find-server.js target <limit>\\\");\\n}\\n\\nexport async function main(ns){\\n  \\n  var findHosts = ns.args.length == 2 && ns.args[0] == \\\"host\\\";\\n  var findTargets = ns.args.length == 2 && ns.args[0] == \\\"target\\\";\\n  var showHelp = !findHosts && !findTargets;\\n  \\n  if(showHelp){\\n    printHelp(ns);\\n    return;\\n  }\\n  \\n  var crawler = new Crawler(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var servers = await crawler.crawl();\\n  \\n  var serverFinder = new ServerFinder(ns, {\\n    hostnames: servers,\\n    limit: ns.args[1],\\n    onlyWithMoney: findTargets,\\n    onlyWithRootAccess: true,\\n    onlyNotMine: findTargets,\\n    onlyNotHome: true\\n  });\\n  \\n  var results;\\n  if (findHosts){\\n    results = await serverFinder.findBestHosts();\\n  } else {\\n    results = await serverFinder.findBestTargets();\\n  }\\n  \\n  forEach(results, function(i, e){\\n    ns.tprint(i+1, \\\": \\\", e);\\n  });\\n  \\n}\",\"filename\":\"find-server.js\",\"server\":\"home\"}}],[\"biotic.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { Crawler } from \\\"crawler.js\\\";\\nimport { ServerFinder } from \\\"find-server.js\\\";\\nimport { Cell, InstallCell } from \\\"install-cell.js\\\";\\nimport { rootServer } from \\\"root-server.js\\\";\\nimport { forEach, forEachAsync, safeLoop } from \\\"utils.js\\\";\\nimport { getVpsNames, VpsManager } from \\\"vps.js\\\";\\n\\nvar _bioticState;\\n\\nfunction getBioticState(){\\n  if(typeof(_bioticState) === \\\"undefined\\\"){\\n    _bioticState = {};\\n  }\\n  if(typeof(_bioticState.cellPool) === \\\"undefined\\\"){\\n    _bioticState.cellPool = new CellPool();\\n  }\\n  return _bioticState;\\n}\\n\\n// A distribution of jobs that a collection of Cells can handle.\\nfunction Schedule(weaken, grow, hack){\\n\\n  var total = weaken + grow + hack;\\n  var weakenProportion = weaken / total;\\n  var growProportion = grow / total;\\n  var hackProportion = 1 - weakenProportion - growProportion;\\n\\n  return {\\n    weaken: weakenProportion,\\n    grow: growProportion,\\n    hack: hackProportion\\n  };\\n\\n}\\n\\n// An allocation of work to a given target\\nfunction Allocation(target, cells, schedule){\\n  \\n  async function assignWork(assignCell){\\n    \\n    var totalCells = cells.length;\\n    var totalWeaken = Math.ceil(totalCells * schedule.weaken);\\n    var totalGrow = Math.floor(totalCells * schedule.grow);\\n    var totalHack = Math.floor(totalCells * schedule.hack);\\n    \\n    for(var i = 0; i < totalWeaken; i++){\\n      var cell = cells[i];\\n      await assignCell(cell, \\\"weaken\\\", target);\\n    }\\n    for(var i = 0; i < totalGrow; i++){\\n      var cell = cells[totalWeaken + i];\\n      await assignCell(cell, \\\"grow\\\", target);\\n    }\\n    for(var i = 0; i < totalHack; i++){\\n      var cell = cells[totalWeaken + totalGrow + i];\\n      await assignCell(cell, \\\"hack\\\", target);\\n    }\\n    \\n  }\\n  \\n  return {\\n    assignWork\\n  };\\n  \\n}\\n\\n// A maintainable collection of cells\\nfunction CellPool(){\\n  \\n  var hosts = {};\\n  \\n  function removeHost(hostname){\\n    delete hosts[hostname];\\n  }\\n  \\n  function addHost(hostname, cells){\\n    hosts[hostname] = cells;\\n  }\\n  \\n  function getCells(){\\n    var allCells = [];\\n    for(var hostname in hosts){\\n      var cells = hosts[hostname];\\n      forEach(cells, function(i, e){\\n        allCells.push(e);\\n      });\\n    }\\n    return allCells;\\n  }\\n  \\n  function clear(){\\n    hosts = {};\\n  }\\n  \\n  return {\\n    removeHost,\\n    addHost,\\n    getCells,\\n    clear\\n  };\\n  \\n}\\n\\nfunction Allocator(ns){\\n  \\n  var weakenSchedule = new Schedule(1,0,0);\\n  var growSchedule = new Schedule(1,3,0);\\n  var hackSchedule = new Schedule(1,1,1);\\n  \\n  async function updateCellCommand(cell, command, target){\\n    \\n    async function runUpdate(){\\n      await ns.exec(\\n        \\\"cell.js\\\",\\n        cell.hostname,\\n        1,\\n        cell.instanceId,\\n        command,\\n        target);\\n    }\\n    \\n    async function updateStillRunning(){\\n      return await ns.isRunning(\\n        \\\"cell.js\\\",\\n        cell.hostname,\\n        cell.instanceId,\\n        command,\\n        target)\\n    }\\n    \\n    await runUpdate();\\n    await ns.sleep(10);\\n    while(await updateStillRunning()){\\n      await ns.sleep(10);\\n    }\\n    \\n  }\\n  \\n  async function allocateWork(target, cells){\\n    \\n    var currentSecurity = await ns.getServerSecurityLevel(target);\\n    var targetMaxSecurity = await ns.getServerMinSecurityLevel(target) + 3;\\n    var weakenStage = currentSecurity > targetMaxSecurity;\\n    \\n    var currentMoney = await ns.getServerMoneyAvailable(target);\\n    var targetMinMoney = await ns.getServerMaxMoney(target) * 0.9;\\n    var growStage = currentMoney < targetMinMoney;\\n    \\n    var schedule;\\n    if(weakenStage){\\n      ns.tprint(\\\"Weakening \\\", target, \\\" (\\\", cells.length, \\\")\\\");\\n      schedule = weakenSchedule;\\n    } else if(growStage){\\n      ns.tprint(\\\"Growing \\\", target, \\\" (\\\", cells.length, \\\")\\\");\\n      schedule = growSchedule;\\n    } else {\\n      ns.tprint(\\\"Hacking \\\", target, \\\" (\\\", cells.length, \\\")\\\");\\n      schedule = hackSchedule;\\n    }\\n    \\n    return new Allocation(target, cells, schedule);\\n    \\n  }\\n  \\n  function allocateCells(targets, allCells){\\n    \\n    var totalCells = allCells.length;\\n    var totalTargets = targets.length;\\n    var cellsForFirst = Math.ceil(totalCells / totalTargets);\\n    var cellsForRest = Math.floor(totalCells / totalTargets);\\n    \\n    var allocations = [];\\n    forEach(targets, function(i, target){\\n      \\n      var firstCell;\\n      var stopCell;\\n      if (i==0){\\n        firstCell = 0;\\n        stopCell = cellsForFirst;\\n      } else {\\n        firstCell = cellsForFirst + cellsForRest*(i-1);\\n        stopCell = firstCell + cellsForRest;\\n      }\\n      \\n      allocations.push({\\n        target,\\n        cells: allCells.slice(firstCell, stopCell)\\n      });\\n      \\n    });\\n    \\n    return allocations;\\n    \\n  }\\n  \\n  async function allocate(targets, cellPool){\\n    var allCells = cellPool.getCells();\\n    var cellAllocation = allocateCells(targets, allCells);\\n    await forEachAsync(cellAllocation, async function(i, e){\\n      var workAllocation = await allocateWork(e.target, e.cells);\\n      await workAllocation.assignWork(updateCellCommand);\\n    });\\n  }\\n  \\n  async function spam(target, cellPool){\\n    var allCells = cellPool.getCells();\\n    var cellAllocation = allocateCells([target], allCells)[0];\\n    var workAllocation = new Allocation(\\n      cellAllocation.target,\\n      cellAllocation.cells,\\n      weakenSchedule);\\n    await workAllocation.assignWork(updateCellCommand);\\n  }\\n  \\n  return {\\n    allocate,\\n    spam\\n  };\\n  \\n}\\n\\nfunction CellManager(ns, options){\\n  \\n  var installer = options.installer;\\n  var crawler = options.crawler;\\n  \\n  var cellPool = getBioticState().cellPool;\\n  \\n  async function uninstallOn(hostname){\\n    await installer.uninstall(hostname);\\n  }\\n  \\n  async function installOn(hostname){\\n    var newCells = await installer.install(hostname);\\n    cellPool.addHost(hostname, newCells);\\n  }\\n  \\n  async function install(hostname){\\n    \\n    // Identify hosts\\n    var allServers = await crawler.crawl();\\n    var hosts = [];\\n    await forEachAsync(allServers, async function(i, hostname){\\n      var isHome = hostname == \\\"home\\\";\\n      var isRooted = await ns.hasRootAccess(hostname);\\n      if(isRooted && !isHome){\\n        hosts.push(hostname);\\n      }\\n    });\\n    \\n    // Install on hosts\\n    cellPool.clear();\\n    await forEachAsync(hosts, async function(i, hostname){\\n      await installOn(hostname);\\n    });\\n    \\n  }\\n  \\n  return {\\n    uninstallOn,\\n    installOn,\\n    install\\n  };\\n  \\n}\\n\\nfunction Biotic (ns, options){\\n  \\n  var trace = options.trace;\\n  var cellManager = options.cellManager;\\n  var crawler = options.crawler;\\n  var allocator = options.allocator;\\n  var targetLimit = options.targetLimit;\\n  var vpsUpgrade = options.vpsUpgrade;\\n  var spam = options.spam;\\n  \\n  var bioticState = getBioticState();\\n  var cellPool = bioticState.cellPool;\\n  \\n  var upgradePeriod = 60*1000;\\n  \\n  async function rootServers(){\\n    var allServers = await crawler.crawl();\\n    await forEachAsync(allServers, async function(i, hostname){\\n      var success = await rootServer(ns, hostname);\\n      if (success){\\n        await ns.sleep(1000);\\n        await cellManager.installOn(hostname);\\n        await trace(\\\"Rooted server \\\" + hostname);\\n      }\\n    });\\n  }\\n  \\n  async function upgradeVps(){\\n    var vpsHosts = await getVpsNames();\\n    var manager = new VpsManager(ns, {\\n      hostnames: vpsHosts,\\n      decommission: cellManager.uninstallOn,\\n      commission: cellManager.installOn,\\n      trace: trace\\n    });\\n    await manager.upgrade();\\n  }\\n  \\n  async function allocateWork(){\\n    if(!spam){\\n      var allServers = await crawler.crawl();\\n      var targetFinder = new ServerFinder(ns, {\\n        hostnames: allServers,\\n        limit: targetLimit,\\n        onlyWithRootAccess: true,\\n        onlyWithMoney: true,\\n        onlyNotMine: true,\\n        onlyNotHome: true,\\n        onlyLowSecurity: true\\n      });\\n      var targets = await targetFinder.findBestTargets();\\n      await allocator.allocate(targets, cellPool);\\n    } else {\\n      await allocator.spam(\\\"n00dles\\\", cellPool);\\n    }\\n  }\\n  \\n  async function manage(){\\n    await cellManager.install();\\n    await safeLoop(ns, async function (){\\n      await rootServers();\\n      if(vpsUpgrade){\\n        await upgradeVps();\\n      }\\n      await allocateWork();\\n      await ns.sleep(upgradePeriod);\\n    });\\n  }\\n  \\n  return {\\n    manage\\n  };\\n  \\n}\\n\\nexport async function main(ns) {\\n  \\n  var targetLimit;\\n  if(ns.args.length > 0){\\n    targetLimit = ns.args[0];\\n  }\\n  if (!targetLimit) {\\n    targetLimit = 1;\\n  }\\n  \\n  var vpsUpgrade = ns.args.indexOf(\\\"--no-vps-upgrade\\\") < 0;\\n  var spam = ns.args.indexOf(\\\"--spam\\\") >= 0;\\n  \\n  var crawler = new Crawler(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var allocator = new Allocator(ns);\\n  var installer = new InstallCell(ns);\\n  var cellManager = new CellManager(ns, {\\n    installer: installer,\\n    crawler: crawler\\n  });\\n  var biotic = new Biotic(ns, {\\n    trace: ns.tprint,\\n    cellManager: cellManager,\\n    crawler: crawler,\\n    allocator: allocator,\\n    targetLimit: targetLimit,\\n    vpsUpgrade: vpsUpgrade,\\n    spam: spam\\n  });\\n  await biotic.manage();\\n  \\n}\",\"filename\":\"biotic.js\",\"server\":\"home\"}}],[\"install-cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEachAsync } from \\\"utils.js\\\";\\n\\n// A model for an instance of Cell.js running on a server\\nexport function Cell(hostname, index){\\n  \\n  return {\\n    hostname,\\n    index,\\n    instanceId: hostname + \\\"|\\\" + index\\n  };\\n  \\n}\\n\\nexport function InstallCell (ns){\\n  \\n  var mainScript = \\\"cell.js\\\";\\n  var scripts = [\\n    \\\"utils.js\\\",\\n    \\\"cell.js\\\"\\n  ];\\n  \\n  async function install(hostname){\\n    \\n    await forEachAsync(scripts, async function(i,e){\\n      await ns.scriptKill(e, hostname);\\n    });\\n    await forEachAsync(scripts, async function(i,e){\\n      await ns.scp(e, hostname);\\n    });\\n    \\n    var spareInstances = 1; // How many instances-worth of RAM to leave free\\n    var ramRequired = await ns.getScriptRam(mainScript);\\n    var ramMax = await ns.getServerMaxRam(hostname);\\n    var ramUsed = await ns.getServerUsedRam(hostname);\\n    var ramAvailable = ramMax - ramUsed;\\n    var ramDedicated = ramAvailable - spareInstances * ramRequired;\\n    \\n    var instanceCount = Math.floor(ramDedicated / ramRequired);\\n    var instanceSize = 1;\\n    while(instanceCount > 200){\\n      instanceSize *= 2;\\n      instanceCount = Math.floor(\\n        ramDedicated\\n        / ramRequired\\n        / instanceSize);\\n    }\\n    \\n    var newCells = [];\\n    for(var i = 0; i < instanceCount; i++){\\n      var newCell = new Cell(hostname, i);\\n      await ns.sleep(10);\\n      await ns.exec(\\n        mainScript,\\n        hostname,\\n        instanceSize,\\n        newCell.instanceId);\\n      newCells.push(newCell);\\n    }\\n    \\n    return newCells;\\n    \\n  }\\n  \\n  async function uninstall(hostname){\\n    await forEachAsync(scripts, async function(i,e){\\n      await ns.scriptKill(e, hostname);\\n    });\\n    await forEachAsync(scripts, async function(i,e){\\n      await ns.rm(e, hostname);\\n    });\\n  }\\n  \\n  return {\\n    install,\\n    uninstall\\n  };\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  install-cell.js install <host>\\\");\\n  ns.tprint(\\\"  install-cell.js uninstall <host>\\\");\\n}\\n\\nexport async function main(ns) {\\n  var installCell = new InstallCell(ns);\\n  if(ns.args.length == 2 && ns.args[0] == \\\"install\\\"){\\n    var newCells = await installCell.install(ns.args[1]);\\n    ns.tprint(\\\"Instances installed: \\\", newCells.length);\\n  } else if(ns.args.length == 2 && ns.args[0] == \\\"uninstall\\\"){\\n    await installCell.uninstall(ns.args[1]);\\n  } else {\\n    printHelp(ns);\\n  }\\n}\",\"filename\":\"install-cell.js\",\"server\":\"home\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"home\"}}],[\"bubble-rider.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { numberWithMagnitude } from \\\"format.js\\\";\\nimport { forEach, forEachAsync } from \\\"utils.js\\\";\\n\\nvar transactionCost = 100*1000;\\nvar packetSize = 1000*1000*1000;\\nvar buyInGrowth = 0.55;\\nvar sellGrowth = 0.5;\\n  \\nasync function analyseMarket(ns){\\n  var symbols = await ns.stock.getSymbols();\\n  var profiles = [];\\n  await forEachAsync(symbols, async function(i, e){\\n    var position = await ns.stock.getPosition(e);\\n    var ownedShares = position[0];\\n    var maxShares = await ns.stock.getMaxShares(e);\\n    profiles.push({\\n      symbol: e,\\n      shares: ownedShares,\\n      askPrice: await ns.stock.getAskPrice(e),\\n      bidPrice: await ns.stock.getBidPrice(e),\\n      growthChance: await ns.stock.getForecast(e),\\n      maxShares: maxShares,\\n      availableShares: maxShares - ownedShares\\n    });\\n  });\\n  return profiles;\\n}\\n\\nfunction bestForecast(profiles){\\n  return profiles\\n    .filter(function(profile){\\n      var maxPurchase = profile.askPrice * profile.availableShares;\\n      return maxPurchase > packetSize;\\n    })\\n    .sort(function(a,b){\\n      return b.growthChance - a.growthChance\\n    })\\n    [0];\\n}\\n\\nasync function sellRisky(ns, profiles){\\n  await forEachAsync(profiles, async function(i ,e){\\n    var sellValue = e.bidPrice * e.shares;\\n    var sell =\\n      sellValue > transactionCost &&\\n      e.growthChance <= sellGrowth;\\n    if(sell){\\n      ns.tprint(\\n        \\\"Selling \\\",\\n        e.symbol,\\n        \\\" ($ \\\",\\n        numberWithMagnitude(e.shares * e.bidPrice, 2),\\n        \\\")\\\");\\n      await ns.stock.sellStock(e.symbol, e.shares);\\n    }\\n  });\\n}\\n\\nasync function buyBest(ns, profiles){\\n  var funds = await ns.getServerMoneyAvailable(\\\"home\\\");\\n  var bestStock = bestForecast(profiles);\\n  if(bestStock.growthChance > buyInGrowth){\\n    var maxPurchase = bestStock.askPrice * bestStock.availableShares;\\n    var maxPackets = Math.floor(maxPurchase / packetSize);\\n    var fundablePackets = Math.floor((funds - transactionCost) / packetSize);\\n    var packets = Math.min(maxPackets, fundablePackets);\\n    var shares = Math.floor(packets * packetSize / bestStock.askPrice);\\n    if(packets > 0){\\n      ns.tprint(\\n        \\\"Buying \\\",\\n        bestStock.symbol,\\n        \\\" ($ \\\",\\n        numberWithMagnitude(shares * bestStock.askPrice, 2),\\n        \\\")\\\");\\n      await ns.stock.buyStock(bestStock.symbol, shares);\\n    }\\n  }\\n}\\n\\n\\nasync function trade(ns, profiles){\\n    await sellRisky(ns, profiles);\\n    await buyBest(ns, profiles);\\n}\\n\\nasync function printNetWorth(ns, analysis){\\n  var total = 0;\\n  forEach(analysis, function(i, e){\\n    if(e.shares > 0){\\n      total += e.shares * e.bidPrice;\\n    }\\n  });\\n  ns.tprint(\\n    \\\"Current value: \\\",\\n    \\\" ($ \\\",\\n    numberWithMagnitude(total, 2),\\n    \\\")\\\");\\n}\\n\\nexport async function main(ns){\\n  \\n  async function loop(f){\\n    for(;;){\\n      var analysis = await analyseMarket(ns);\\n      await f(ns, analysis);\\n      await ns.sleep(6*1000);\\n    }\\n  }\\n  \\n  var f;\\n  if(ns.args.length == 1 && ns.args[0] == \\\"buy\\\"){\\n    await loop(buyBest);\\n  } else if(ns.args.length == 1 && ns.args[0] == \\\"sell\\\"){\\n    await loop(sellRisky);\\n  } else if(ns.args.length == 1 && ns.args[0] == \\\"trade\\\"){\\n    await loop(trade);\\n  } else if(ns.args.length == 1 && ns.args[0] == \\\"show-value\\\"){\\n    var analysis = await analyseMarket(ns);\\n    await printNetWorth(ns, analysis);\\n    return;\\n  } else {\\n    ns.tprint(\\\"Usage:\\\");\\n    ns.tprint(\\\"  bubble-rider.js buy\\\");\\n    ns.tprint(\\\"  bubble-rider.js sell\\\");\\n    ns.tprint(\\\"  bubble-rider.js trade\\\");\\n    ns.tprint(\\\"  bubble-rider.js show-value\\\");\\n    return;\\n  }\\n  \\n}\\n\",\"filename\":\"bubble-rider.js\",\"server\":\"home\"}}],[\"format.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"\\nexport function numberWithMagnitude(number, fractionDigits){\\n    \\n    var base = 1000;\\n    var magnitudes = [\\n      ' ',\\n      'k',\\n      'm',\\n      'b',\\n      't',\\n      'q'\\n    ];\\n    \\n    var multiple = number;\\n    var multipleRounded = multiple.toFixed(fractionDigits);\\n    var exponent;\\n    for(exponent = 0; exponent < magnitudes.length - 1; exponent++){\\n      if(multipleRounded < base){\\n        break;\\n      } else {\\n        multiple = multiple / base;\\n        multipleRounded = multiple.toFixed(fractionDigits);\\n        continue;\\n      }\\n    }\\n    \\n    var mantissa = multipleRounded;\\n    var magnitude = magnitudes[exponent];\\n    \\n    return mantissa.toString() + magnitude;\\n    \\n}\\n\\nexport async function main(ns){\\n\\n\\tns.tprint(\\\"Testing formats:\\\");\\n  \\n\\tns.tprint(numberWithMagnitude(123.456, 1));\\n\\tns.tprint(numberWithMagnitude(123.456, 2));\\n\\tns.tprint(numberWithMagnitude(123.456, 4));\\n\\n\\tns.tprint(numberWithMagnitude(1123.456, 1));\\n\\tns.tprint(numberWithMagnitude(1123.456, 2));\\n\\tns.tprint(numberWithMagnitude(1123.456, 4));\\n\\n\\tns.tprint(numberWithMagnitude(1234567.456, 1));\\n\\tns.tprint(numberWithMagnitude(1234567.456, 2));\\n\\tns.tprint(numberWithMagnitude(1234567.456, 4));\\n\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000, 1));\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000, 2));\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000, 4));\\n\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000 * 1000, 1));\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000 * 1000, 2));\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000 * 1000, 4));\\n\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000 * 1000 * 1000, 1));\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000 * 1000 * 1000, 2));\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000 * 1000 * 1000, 4));\\n\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000000 * 1000000, 1));\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000000 * 1000000, 2));\\n\\tns.tprint(numberWithMagnitude(1234567.456 * 1000000 * 1000000, 4));\\n  \\n\\tns.tprint(numberWithMagnitude(1000 * 1000 * 1000 - 1, 2));\\n\\n}\",\"filename\":\"format.js\",\"server\":\"home\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"vps-absol\",\"darkweb\",\"vps-arcanine\",\"vps-buneary\",\"vps-charmander\",\"vps-clefairy\",\"vps-cubone\",\"vps-dartrix\",\"vps-dragonite\",\"vps-eevee\",\"vps-ekans\",\"vps-gengar\",\"vps-latios\",\"vps-marowak\",\"vps-meowth\",\"vps-nuzleaf\",\"vps-pikachu\",\"vps-rattata\",\"vps-scorbunny\",\"vps-treecko\",\"vps-vulpix\",\"vps-zigzagoon\",\"vps-arbok\",\"vps-bonsly\",\"vps-diglet\",\"vps-poochyena\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[4,\"--no-vps-upgrade\"],\"dataMap\":{},\"filename\":\"biotic.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3336.8099999991564,\"ramUsage\":14.65,\"server\":\"home\",\"scriptKey\":\"biotic.js*[4,\\\"--no-vps-upgrade\\\"]\",\"title\":\"biotic.js 4 --no-vps-upgrade\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sell\"],\"dataMap\":{},\"filename\":\"bubble-rider.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":62.41000000000035,\"ramUsage\":19.2,\"server\":\"home\",\"scriptKey\":\"bubble-rider.js*[\\\"sell\\\"]\",\"title\":\"bubble-rider.js sell\",\"threads\":1,\"temporary\":false}}]}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"24.8.3.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":58938675910,\"moneyMax\":1473466897750,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1070,\"serverGrowth\":99,\"runningScripts\":[]}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"96.6.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":49321364279,\"moneyMax\":1233034106975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1314,\"serverGrowth\":99,\"runningScripts\":[]}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-361328.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":16134,\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"21.4.3.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"4sigma\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":25759674227,\"moneyMax\":643991855675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1058,\"serverGrowth\":67,\"runningScripts\":[]}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-234263.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")())((\",\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"41.1.3.3\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":33317980469,\"moneyMax\":832949511725,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1096,\"serverGrowth\":79,\"runningScripts\":[]}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-178532.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[68,129,54,146,70,107,87,130,150,179,83,37,146,7,133,79,31,195,157,101,170,2,155,46,131,80,179,76,22,110,83,94,92,30,181,149,3,17,45,80,193,60],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"31.2.9.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\",\"ecorp\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":25440456964,\"moneyMax\":636011424100,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1259,\"serverGrowth\":82,\"runningScripts\":[]}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-50933.cct\",\"type\":\"Array Jumping Game II\",\"data\":[0,1,3,3,1,5,0,0,2,2,2,5,3,1,1,2,5,4,5,2,4,2,1,1],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"57.5.0.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":48,\"minDifficulty\":16,\"moneyAvailable\":16937568692,\"moneyMax\":423439217300,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1208,\"serverGrowth\":58,\"runningScripts\":[]}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-362909.cct\",\"type\":\"Total Ways to Sum\",\"data\":79,\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"40.2.5.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"omnitek\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"omnitek\"}}]]},\"serversOnNetwork\":[\"vitalife\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":14340902160,\"moneyMax\":358522554000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":960,\"serverGrowth\":97,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|0\"],\"dataMap\":{\"max-hardware\":[8022445.199548974,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8022445.199548974,\"onlineRunningTime\":1887.4100000002923,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|0\\\"]\",\"title\":\"cell.js omnitek|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|1\"],\"dataMap\":{\"max-hardware\":[7937448.93494101,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7937448.93494101,\"onlineRunningTime\":1887.4100000002923,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|1\\\"]\",\"title\":\"cell.js omnitek|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|2\"],\"dataMap\":{\"max-hardware\":[7853354.957317629,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7853354.957317629,\"onlineRunningTime\":1887.4100000002923,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|2\\\"]\",\"title\":\"cell.js omnitek|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|3\"],\"dataMap\":{\"max-hardware\":[7770153.699879894,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7770153.699879894,\"onlineRunningTime\":1887.4100000002923,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|3\\\"]\",\"title\":\"cell.js omnitek|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|4\"],\"dataMap\":{\"max-hardware\":[7687835.663488078,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7687835.663488078,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|4\\\"]\",\"title\":\"cell.js omnitek|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|5\"],\"dataMap\":{\"max-hardware\":[8039237.64466539,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8039237.64466539,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|5\\\"]\",\"title\":\"cell.js omnitek|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|6\"],\"dataMap\":{\"max-hardware\":[7954074.723790773,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7954074.723790773,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|6\\\"]\",\"title\":\"cell.js omnitek|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|7\"],\"dataMap\":{\"max-hardware\":[8328911.319140148,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8328911.319140148,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|7\\\"]\",\"title\":\"cell.js omnitek|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|8\"],\"dataMap\":{\"max-hardware\":[8250838.535133867,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8250838.535133867,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|8\\\"]\",\"title\":\"cell.js omnitek|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|9\"],\"dataMap\":{\"max-hardware\":[8163452.706378636,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8163452.706378636,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|9\\\"]\",\"title\":\"cell.js omnitek|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|10\"],\"dataMap\":{\"max-hardware\":[8201429.282192661,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8201429.282192661,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|10\\\"]\",\"title\":\"cell.js omnitek|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|11\"],\"dataMap\":{\"max-hardware\":[6554904.0852532415,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":6554904.0852532415,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|11\\\"]\",\"title\":\"cell.js omnitek|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|12\"],\"dataMap\":{\"max-hardware\":[6485480.282870098,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":6485480.282870098,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|12\\\"]\",\"title\":\"cell.js omnitek|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|13\"],\"dataMap\":{\"max-hardware\":[6710331.071800777,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":6710331.071800777,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|13\\\"]\",\"title\":\"cell.js omnitek|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|14\"],\"dataMap\":{\"max-hardware\":[6639255.069037073,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":6639255.069037073,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|14\\\"]\",\"title\":\"cell.js omnitek|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|15\"],\"dataMap\":{\"max-hardware\":[6568933.395599334,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":6568933.395599334,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|15\\\"]\",\"title\":\"cell.js omnitek|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|16\"],\"dataMap\":{\"max-hardware\":[6499358.007417796,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":6499358.007417796,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|16\\\"]\",\"title\":\"cell.js omnitek|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|17\"],\"dataMap\":{\"max-hardware\":[10772438.347796721,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10772438.347796721,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|17\\\"]\",\"title\":\"cell.js omnitek|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|18\"],\"dataMap\":{\"max-hardware\":[10658322.131639598,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10658322.131639598,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|18\\\"]\",\"title\":\"cell.js omnitek|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|19\"],\"dataMap\":{\"max-hardware\":[12073144.750218509,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":12073144.750218509,\"onlineRunningTime\":1887.2100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|19\\\"]\",\"title\":\"cell.js omnitek|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|20\"],\"dataMap\":{\"max-hardware\":[11916309.873592423,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":11916309.873592423,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|20\\\"]\",\"title\":\"cell.js omnitek|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|21\"],\"dataMap\":{\"max-hardware\":[11790041.342480052,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":11790041.342480052,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|21\\\"]\",\"title\":\"cell.js omnitek|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|22\"],\"dataMap\":{\"max-hardware\":[14077734.308947934,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":14077734.308947934,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|22\\\"]\",\"title\":\"cell.js omnitek|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|23\"],\"dataMap\":{\"max-hardware\":[13928510.24099065,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":13928510.24099065,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|23\\\"]\",\"title\":\"cell.js omnitek|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|24\"],\"dataMap\":{\"max-hardware\":[6354370.62255182,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6354370.62255182,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|24\\\"]\",\"title\":\"cell.js omnitek|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|25\"],\"dataMap\":{\"max-hardware\":[6287077.837096603,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6287077.837096603,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|25\\\"]\",\"title\":\"cell.js omnitek|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|26\"],\"dataMap\":{\"max-hardware\":[6220499.082834033,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6220499.082834033,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|26\\\"]\",\"title\":\"cell.js omnitek|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|27\"],\"dataMap\":{\"max-hardware\":[6154626.768509795,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6154626.768509795,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|27\\\"]\",\"title\":\"cell.js omnitek|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|28\"],\"dataMap\":{\"max-hardware\":[6089453.383733083,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6089453.383733083,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|28\\\"]\",\"title\":\"cell.js omnitek|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|29\"],\"dataMap\":{\"max-hardware\":[6024971.498113579,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6024971.498113579,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|29\\\"]\",\"title\":\"cell.js omnitek|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|30\"],\"dataMap\":{\"max-hardware\":[5961173.760407616,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5961173.760407616,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|30\\\"]\",\"title\":\"cell.js omnitek|30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|31\"],\"dataMap\":{\"max-hardware\":[5898052.897673531,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5898052.897673531,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|31\\\"]\",\"title\":\"cell.js omnitek|31\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|32\"],\"dataMap\":{\"max-hardware\":[5691125.122312567,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5691125.122312567,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|32\\\"]\",\"title\":\"cell.js omnitek|32\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|33\"],\"dataMap\":{\"max-hardware\":[5630870.0465770615,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5630870.0465770615,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|33\\\"]\",\"title\":\"cell.js omnitek|33\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|34\"],\"dataMap\":{\"max-hardware\":[5571254.178920117,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5571254.178920117,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|34\\\"]\",\"title\":\"cell.js omnitek|34\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|35\"],\"dataMap\":{\"max-hardware\":[5992770.068205671,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":5992770.068205671,\"onlineRunningTime\":1887.0100000002922,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|35\\\"]\",\"title\":\"cell.js omnitek|35\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|36\"],\"dataMap\":{\"max-hardware\":[5929299.23627274,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":5929299.23627274,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|36\\\"]\",\"title\":\"cell.js omnitek|36\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|37\"],\"dataMap\":{\"max-hardware\":[5866501.959816272,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":5866501.959816272,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|37\\\"]\",\"title\":\"cell.js omnitek|37\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|38\"],\"dataMap\":{\"max-hardware\":[5804371.077070382,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":5804371.077070382,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|38\\\"]\",\"title\":\"cell.js omnitek|38\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|39\"],\"dataMap\":{\"max-hardware\":[6286891.435354062,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6286891.435354062,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|39\\\"]\",\"title\":\"cell.js omnitek|39\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|40\"],\"dataMap\":{\"max-hardware\":[12177267.80516675,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":12177267.80516675,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|40\\\"]\",\"title\":\"cell.js omnitek|40\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|41\"],\"dataMap\":{\"max-hardware\":[12048192.873255799,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":12048192.873255799,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|41\\\"]\",\"title\":\"cell.js omnitek|41\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|42\"],\"dataMap\":{\"max-hardware\":[11920488.774450079,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":11920488.774450079,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|42\\\"]\",\"title\":\"cell.js omnitek|42\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|43\"],\"dataMap\":{\"max-hardware\":[11794140.921517838,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":11794140.921517838,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|43\\\"]\",\"title\":\"cell.js omnitek|43\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|44\"],\"dataMap\":{\"max-hardware\":[11278515.77264059,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":11278515.77264059,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|44\\\"]\",\"title\":\"cell.js omnitek|44\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|45\"],\"dataMap\":{\"max-hardware\":[11158985.265949987,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":11158985.265949987,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|45\\\"]\",\"title\":\"cell.js omnitek|45\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|46\"],\"dataMap\":{\"max-hardware\":[10547511.348472193,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10547511.348472193,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|46\\\"]\",\"title\":\"cell.js omnitek|46\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|47\"],\"dataMap\":{\"max-hardware\":[10435743.791213477,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10435743.791213477,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|47\\\"]\",\"title\":\"cell.js omnitek|47\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|48\"],\"dataMap\":{\"max-hardware\":[10325162.911328217,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10325162.911328217,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|48\\\"]\",\"title\":\"cell.js omnitek|48\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|49\"],\"dataMap\":{\"max-hardware\":[13447979.45045138,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":13447979.45045138,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|49\\\"]\",\"title\":\"cell.js omnitek|49\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|50\"],\"dataMap\":{\"max-hardware\":[13305410.872853218,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":13305410.872853218,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|50\\\"]\",\"title\":\"cell.js omnitek|50\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|51\"],\"dataMap\":{\"max-hardware\":[7305489.7537211925,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7305489.7537211925,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|51\\\"]\",\"title\":\"cell.js omnitek|51\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|52\"],\"dataMap\":{\"max-hardware\":[6770442.4446493555,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6770442.4446493555,\"onlineRunningTime\":1886.8100000002921,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|52\\\"]\",\"title\":\"cell.js omnitek|52\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|53\"],\"dataMap\":{\"max-hardware\":[6698736.67756001,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6698736.67756001,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|53\\\"]\",\"title\":\"cell.js omnitek|53\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|54\"],\"dataMap\":{\"max-hardware\":[6627791.838292659,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6627791.838292659,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|54\\\"]\",\"title\":\"cell.js omnitek|54\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|55\"],\"dataMap\":{\"max-hardware\":[10840107.03682528,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10840107.03682528,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|55\\\"]\",\"title\":\"cell.js omnitek|55\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|56\"],\"dataMap\":{\"max-hardware\":[10725239.562151613,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10725239.562151613,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|56\\\"]\",\"title\":\"cell.js omnitek|56\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|57\"],\"dataMap\":{\"max-hardware\":[10611591.672227426,75,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10611591.672227426,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|57\\\"]\",\"title\":\"cell.js omnitek|57\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|58\"],\"dataMap\":{\"max-hardware\":[6814832.611621529,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6814832.611621529,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|58\\\"]\",\"title\":\"cell.js omnitek|58\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|59\"],\"dataMap\":{\"max-hardware\":[6742653.624113188,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6742653.624113188,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|59\\\"]\",\"title\":\"cell.js omnitek|59\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|60\"],\"dataMap\":{\"max-hardware\":[6671240.61891252,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6671240.61891252,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|60\\\"]\",\"title\":\"cell.js omnitek|60\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|61\"],\"dataMap\":{\"max-hardware\":[6600585.451339659,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6600585.451339659,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|61\\\"]\",\"title\":\"cell.js omnitek|61\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek|62\"],\"dataMap\":{\"max-hardware\":[6476851.04408838,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":6476851.04408838,\"onlineRunningTime\":1886.610000000292,\"ramUsage\":2,\"server\":\"omnitek\",\"scriptKey\":\"cell.js*[\\\"omnitek|62\\\"]\",\"title\":\"cell.js omnitek|62\",\"threads\":1,\"temporary\":false}}]}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-713587-BitRunners.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"FLASHINBOXQUEUEFRAMETABLE\",\"ALGORITHM\"],\"reward\":{\"type\":0,\"name\":\"BitRunners\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"71.6.4.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"4sigma\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"4sigma\"}}]]},\"serversOnNetwork\":[\"helios\",\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":24423974895,\"moneyMax\":610599372375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1017,\"serverGrowth\":92,\"runningScripts\":[]}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"3.6.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"fulcrumtech\",\"blade\",\"nwo\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":20122646218,\"moneyMax\":503066155450,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1236,\"serverGrowth\":91,\"runningScripts\":[]}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-256916-BitRunners.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"1439529202\",\"reward\":{\"type\":0,\"name\":\"BitRunners\"}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"83.7.5.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"applied-energetics\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1724081261,\"moneyMax\":43102031525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1248,\"serverGrowth\":85,\"runningScripts\":[]}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"52.6.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1180,\"serverGrowth\":1,\"runningScripts\":[]}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-427044.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":24343313860519,\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"50.6.6.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"stormtech\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"stormtech\"}}]]},\"serversOnNetwork\":[\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":1065702959,\"moneyMax\":26642573975,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1001,\"serverGrowth\":75,\"runningScripts\":[]}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-768399.cct\",\"type\":\"Total Ways to Sum\",\"data\":51,\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-227359.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,1,2,5],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"60.1.7.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"defcomm\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"defcomm\"}}]]},\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":848553614,\"moneyMax\":21213840350,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":974,\"serverGrowth\":70,\"runningScripts\":[]}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"24.7.3.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"infocomm\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"infocomm\"}}]]},\"serversOnNetwork\":[\"icarus\",\"titan-labs\",\"applied-energetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":602993351,\"moneyMax\":15074833775,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":928,\"serverGrowth\":58,\"runningScripts\":[]}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-707583.cct\",\"type\":\"Array Jumping Game II\",\"data\":[3,6,0,3,2,2,0,1,3,0,1,2,2],\"reward\":{\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-142806.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[29],[2],[9],[17],[30],[21],[47],[6],[23],[35],[29]],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"99.5.5.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"helios\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"helios\"}}]]},\"serversOnNetwork\":[\"run4theh111z\",\"4sigma\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":632531423,\"moneyMax\":15813285575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":814,\"serverGrowth\":76,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|0\"],\"dataMap\":{\"max-hardware\":[10939666.262191948,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10939666.262191948,\"onlineRunningTime\":1883.6100000002914,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|0\\\"]\",\"title\":\"cell.js helios|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|1\"],\"dataMap\":{\"max-hardware\":[10832514.04959646,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10832514.04959646,\"onlineRunningTime\":1883.6100000002914,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|1\\\"]\",\"title\":\"cell.js helios|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|2\"],\"dataMap\":{\"max-hardware\":[10717711.11450633,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10717711.11450633,\"onlineRunningTime\":1883.6100000002914,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|2\\\"]\",\"title\":\"cell.js helios|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|3\"],\"dataMap\":{\"max-hardware\":[13172090.134576513,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":13172090.134576513,\"onlineRunningTime\":1883.6100000002914,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|3\\\"]\",\"title\":\"cell.js helios|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|4\"],\"dataMap\":{\"max-hardware\":[10675177.635100568,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10675177.635100568,\"onlineRunningTime\":1883.6100000002914,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|4\\\"]\",\"title\":\"cell.js helios|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|5\"],\"dataMap\":{\"max-hardware\":[10796974.78611421,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10796974.78611421,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|5\\\"]\",\"title\":\"cell.js helios|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|6\"],\"dataMap\":{\"max-hardware\":[10682526.070743535,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10682526.070743535,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|6\\\"]\",\"title\":\"cell.js helios|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|7\"],\"dataMap\":{\"max-hardware\":[10356019.935251355,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10356019.935251355,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|7\\\"]\",\"title\":\"cell.js helios|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|8\"],\"dataMap\":{\"max-hardware\":[10246260.498930033,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10246260.498930033,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|8\\\"]\",\"title\":\"cell.js helios|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|9\"],\"dataMap\":{\"max-hardware\":[10439444.325606257,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10439444.325606257,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|9\\\"]\",\"title\":\"cell.js helios|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|10\"],\"dataMap\":{\"max-hardware\":[10328796.854283193,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10328796.854283193,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|10\\\"]\",\"title\":\"cell.js helios|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|11\"],\"dataMap\":{\"max-hardware\":[10851344.330254992,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10851344.330254992,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|11\\\"]\",\"title\":\"cell.js helios|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|12\"],\"dataMap\":{\"max-hardware\":[10736321.255236266,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10736321.255236266,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|12\\\"]\",\"title\":\"cell.js helios|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|13\"],\"dataMap\":{\"max-hardware\":[10622519.639911069,73,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10622519.639911069,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|13\\\"]\",\"title\":\"cell.js helios|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios|14\"],\"dataMap\":{\"max-hardware\":[8588184.20444257,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8588184.20444257,\"onlineRunningTime\":1883.4100000002913,\"ramUsage\":2,\"server\":\"helios\",\"scriptKey\":\"cell.js*[\\\"helios|14\\\"]\",\"title\":\"cell.js helios|14\",\"threads\":1,\"temporary\":false}}]}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"94.7.4.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vitalife\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vitalife\"}}]]},\"serversOnNetwork\":[\"microdyne\",\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":704777572,\"moneyMax\":17619439300,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":781,\"serverGrowth\":63,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|0\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.6100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|0\\\"]\",\"title\":\"cell.js vitalife|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|1\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.6100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|1\\\"]\",\"title\":\"cell.js vitalife|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|2\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.6100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|2\\\"]\",\"title\":\"cell.js vitalife|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|3\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.6100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|3\\\"]\",\"title\":\"cell.js vitalife|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|4\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|4\\\"]\",\"title\":\"cell.js vitalife|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|5\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|5\\\"]\",\"title\":\"cell.js vitalife|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|6\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|6\\\"]\",\"title\":\"cell.js vitalife|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|7\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|7\\\"]\",\"title\":\"cell.js vitalife|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|8\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|8\\\"]\",\"title\":\"cell.js vitalife|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|9\"],\"dataMap\":{\"max-hardware\":[6253179.663073735,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":6253179.663073735,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|9\\\"]\",\"title\":\"cell.js vitalife|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|10\"],\"dataMap\":{\"max-hardware\":[6187008.668382966,71,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4902.3735753510155,\"onlineMoneyMade\":6187008.668382966,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|10\\\"]\",\"title\":\"cell.js vitalife|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|11\"],\"dataMap\":{\"max-hardware\":[12720203.535979103,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":12720203.535979103,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|11\\\"]\",\"title\":\"cell.js vitalife|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|12\"],\"dataMap\":{\"max-hardware\":[12585943.20915956,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":12585943.20915956,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|12\\\"]\",\"title\":\"cell.js vitalife|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|13\"],\"dataMap\":{\"max-hardware\":[12453371.991779353,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":12453371.991779353,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|13\\\"]\",\"title\":\"cell.js vitalife|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife|14\"],\"dataMap\":{\"max-hardware\":[12321413.073537128,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":12321413.073537128,\"onlineRunningTime\":1888.4100000002925,\"ramUsage\":2,\"server\":\"vitalife\",\"scriptKey\":\"cell.js*[\\\"vitalife|14\\\"]\",\"title\":\"cell.js vitalife|14\",\"threads\":1,\"temporary\":false}}]}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"10.7.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"icarus\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"icarus\"}}]]},\"serversOnNetwork\":[\"deltaone\",\"infocomm\",\"taiyang-digital\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":93,\"hackDifficulty\":93,\"minDifficulty\":31,\"moneyAvailable\":935026033,\"moneyMax\":23375650825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":890,\"serverGrowth\":94,\"runningScripts\":[]}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-295024.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"149134142199\",\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"90.2.2.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"univ-energy\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"univ-energy\"}}]]},\"serversOnNetwork\":[\"deltaone\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1110986762,\"moneyMax\":27774669050,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":842,\"serverGrowth\":85,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|0\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1617417.9678337094,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1617417.9678337094,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|0\\\"]\",\"title\":\"cell.js univ-energy|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|1\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1440737.9727711384,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1440737.9727711384,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|1\\\"]\",\"title\":\"cell.js univ-energy|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|2\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1675572.1475102813,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1675572.1475102813,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|2\\\"]\",\"title\":\"cell.js univ-energy|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|3\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1655958.327339186,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1655958.327339186,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|3\\\"]\",\"title\":\"cell.js univ-energy|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|4\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1636574.5013176529,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1636574.5013176529,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|4\\\"]\",\"title\":\"cell.js univ-energy|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|5\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[2080551.3756341184,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":2080551.3756341184,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|5\\\"]\",\"title\":\"cell.js univ-energy|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|6\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[938336.6370284834,217,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":938336.6370284834,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|6\\\"]\",\"title\":\"cell.js univ-energy|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|7\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[949429.5450052714,217,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":949429.5450052714,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|7\\\"]\",\"title\":\"cell.js univ-energy|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|8\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1676244.5913690624,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1676244.5913690624,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|8\\\"]\",\"title\":\"cell.js univ-energy|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|9\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1656600.9400402524,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1656600.9400402524,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|9\\\"]\",\"title\":\"cell.js univ-energy|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|10\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1256650.2571342338,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1256650.2571342338,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|10\\\"]\",\"title\":\"cell.js univ-energy|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|11\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1241928.6701988438,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1241928.6701988438,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|11\\\"]\",\"title\":\"cell.js univ-energy|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|12\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[976404.8795365057,215,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13962.589124234828,\"onlineMoneyMade\":976404.8795365057,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|12\\\"]\",\"title\":\"cell.js univ-energy|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|13\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[850413.8340370001,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":850413.8340370001,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|13\\\"]\",\"title\":\"cell.js univ-energy|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy|14\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[840477.0088749854,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":840477.0088749854,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"univ-energy\",\"scriptKey\":\"cell.js*[\\\"univ-energy|14\\\"]\",\"title\":\"cell.js univ-energy|14\",\"threads\":1,\"temporary\":false}}]}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-659568.cct\",\"type\":\"Array Jumping Game II\",\"data\":[3,3,6,3,3,2,3,1,3,2,5,0,3,2,3,2,3],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"65.9.5.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"titan-labs\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"titan-labs\"}}]]},\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":843889936,\"moneyMax\":21097248400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":830,\"serverGrowth\":68,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs|0\"],\"dataMap\":{\"max-hardware\":[13315022.322390806,77,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5007.237181240878,\"onlineMoneyMade\":13315022.322390806,\"onlineRunningTime\":1878.4100000002902,\"ramUsage\":2,\"server\":\"titan-labs\",\"scriptKey\":\"cell.js*[\\\"titan-labs|0\\\"]\",\"title\":\"cell.js titan-labs|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs|1\"],\"dataMap\":{\"max-hardware\":[13173909.391511582,77,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5007.237181240878,\"onlineMoneyMade\":13173909.391511582,\"onlineRunningTime\":1878.4100000002902,\"ramUsage\":2,\"server\":\"titan-labs\",\"scriptKey\":\"cell.js*[\\\"titan-labs|1\\\"]\",\"title\":\"cell.js titan-labs|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs|2\"],\"dataMap\":{\"max-hardware\":[13024836.241674323,77,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5007.237181240878,\"onlineMoneyMade\":13024836.241674323,\"onlineRunningTime\":1878.4100000002902,\"ramUsage\":2,\"server\":\"titan-labs\",\"scriptKey\":\"cell.js*[\\\"titan-labs|2\\\"]\",\"title\":\"cell.js titan-labs|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs|3\"],\"dataMap\":{\"max-hardware\":[9046983.514286624,75,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":9046983.514286624,\"onlineRunningTime\":1878.2100000002902,\"ramUsage\":2,\"server\":\"titan-labs\",\"scriptKey\":\"cell.js*[\\\"titan-labs|3\\\"]\",\"title\":\"cell.js titan-labs|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs|4\"],\"dataMap\":{\"max-hardware\":[8951137.184547788,75,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":8951137.184547788,\"onlineRunningTime\":1878.2100000002902,\"ramUsage\":2,\"server\":\"titan-labs\",\"scriptKey\":\"cell.js*[\\\"titan-labs|4\\\"]\",\"title\":\"cell.js titan-labs|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs|5\"],\"dataMap\":{\"max-hardware\":[13225750.138967302,77,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5007.237181240878,\"onlineMoneyMade\":13225750.138967302,\"onlineRunningTime\":1878.2100000002902,\"ramUsage\":2,\"server\":\"titan-labs\",\"scriptKey\":\"cell.js*[\\\"titan-labs|5\\\"]\",\"title\":\"cell.js titan-labs|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs|6\"],\"dataMap\":{\"max-hardware\":[7259944.811715338,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":7259944.811715338,\"onlineRunningTime\":1878.2100000002902,\"ramUsage\":2,\"server\":\"titan-labs\",\"scriptKey\":\"cell.js*[\\\"titan-labs|6\\\"]\",\"title\":\"cell.js titan-labs|6\",\"threads\":1,\"temporary\":false}}]}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-81242.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"DD8888OOOvvvvvvv6688EE5555iYYYYYYYYf0sszbFFFFFFFFiiiiiiiceeeeeeeeeeeKKKKKKKKK\",\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"36.8.0.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"microdyne\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"microdyne\"}}]]},\"serversOnNetwork\":[\"zb-def\",\"stormtech\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":638637826,\"moneyMax\":15965945650,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":819,\"serverGrowth\":80,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne|0\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1889.6100000002928,\"ramUsage\":2,\"server\":\"microdyne\",\"scriptKey\":\"cell.js*[\\\"microdyne|0\\\"]\",\"title\":\"cell.js microdyne|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne|1\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1889.6100000002928,\"ramUsage\":2,\"server\":\"microdyne\",\"scriptKey\":\"cell.js*[\\\"microdyne|1\\\"]\",\"title\":\"cell.js microdyne|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne|2\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1889.6100000002928,\"ramUsage\":2,\"server\":\"microdyne\",\"scriptKey\":\"cell.js*[\\\"microdyne|2\\\"]\",\"title\":\"cell.js microdyne|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne|3\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1889.6100000002928,\"ramUsage\":2,\"server\":\"microdyne\",\"scriptKey\":\"cell.js*[\\\"microdyne|3\\\"]\",\"title\":\"cell.js microdyne|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne|4\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1889.6100000002928,\"ramUsage\":2,\"server\":\"microdyne\",\"scriptKey\":\"cell.js*[\\\"microdyne|4\\\"]\",\"title\":\"cell.js microdyne|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne|5\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1889.6100000002928,\"ramUsage\":2,\"server\":\"microdyne\",\"scriptKey\":\"cell.js*[\\\"microdyne|5\\\"]\",\"title\":\"cell.js microdyne|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne|6\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1889.6100000002928,\"ramUsage\":2,\"server\":\"microdyne\",\"scriptKey\":\"cell.js*[\\\"microdyne|6\\\"]\",\"title\":\"cell.js microdyne|6\",\"threads\":1,\"temporary\":false}}]}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"68.9.4.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"taiyang-digital\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"taiyang-digital\"}}]]},\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":869216785,\"moneyMax\":21730419625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":886,\"serverGrowth\":75,\"runningScripts\":[]}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"63.5.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"galactic-cyber\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"galactic-cyber\"}}]]},\"serversOnNetwork\":[\"alpha-ent\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":795979492,\"moneyMax\":19899487300,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":845,\"serverGrowth\":88,\"runningScripts\":[]}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-271642.cct\",\"type\":\"Encryption II: Vigenère Cipher\",\"data\":[\"FRAMEPASTETRASHQUEUEMODEM\",\"CAPTCHA\"],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"47.3.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"aerocorp\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"aerocorp\"}}]]},\"serversOnNetwork\":[\"rho-construction\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1153310830,\"moneyMax\":28832770750,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":905,\"serverGrowth\":56,\"runningScripts\":[]}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"58.8.9.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"omnia\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"omnia\"}}]]},\"serversOnNetwork\":[\"galactic-cyber\",\"defcomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":966088000,\"moneyMax\":24152200000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":878,\"serverGrowth\":69,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia|0\"],\"dataMap\":{\"max-hardware\":[5837921.96322551,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5837921.96322551,\"onlineRunningTime\":1874.8100000002894,\"ramUsage\":2,\"server\":\"omnia\",\"scriptKey\":\"cell.js*[\\\"omnia|0\\\"]\",\"title\":\"cell.js omnia|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia|1\"],\"dataMap\":{\"max-hardware\":[5746920.601843763,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5746920.601843763,\"onlineRunningTime\":1874.8100000002894,\"ramUsage\":2,\"server\":\"omnia\",\"scriptKey\":\"cell.js*[\\\"omnia|1\\\"]\",\"title\":\"cell.js omnia|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia|2\"],\"dataMap\":{\"max-hardware\":[5629206.879497534,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5629206.879497534,\"onlineRunningTime\":1874.8100000002894,\"ramUsage\":2,\"server\":\"omnia\",\"scriptKey\":\"cell.js*[\\\"omnia|2\\\"]\",\"title\":\"cell.js omnia|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia|3\"],\"dataMap\":{\"max-hardware\":[5569629.281451851,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5569629.281451851,\"onlineRunningTime\":1874.8100000002894,\"ramUsage\":2,\"server\":\"omnia\",\"scriptKey\":\"cell.js*[\\\"omnia|3\\\"]\",\"title\":\"cell.js omnia|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia|4\"],\"dataMap\":{\"max-hardware\":[5510683.473044778,73,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":5510683.473044778,\"onlineRunningTime\":1874.8100000002894,\"ramUsage\":2,\"server\":\"omnia\",\"scriptKey\":\"cell.js*[\\\"omnia|4\\\"]\",\"title\":\"cell.js omnia|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1874.8100000002894,\"ramUsage\":2,\"server\":\"omnia\",\"scriptKey\":\"cell.js*[\\\"omnia|5\\\"]\",\"title\":\"cell.js omnia|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1874.8100000002894,\"ramUsage\":2,\"server\":\"omnia\",\"scriptKey\":\"cell.js*[\\\"omnia|6\\\"]\",\"title\":\"cell.js omnia|6\",\"threads\":1,\"temporary\":false}}]}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"34.9.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"zb-def\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"zb-def\"}}]]},\"serversOnNetwork\":[\"univ-energy\",\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":984334118,\"moneyMax\":24608352950,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":777,\"serverGrowth\":66,\"runningScripts\":[]}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"71.0.0.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"applied-energetics\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"applied-energetics\"}}]]},\"serversOnNetwork\":[\"infocomm\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":991611361,\"moneyMax\":24790284025,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":783,\"serverGrowth\":75,\"runningScripts\":[]}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-950233.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[113,85,20,14,147,176,67,28,133,146,51,132],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-776130.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"FdB5B5B5BP5B5B5BP5LiVe3VSjI8Ve3Vj6LLhV1jx061Hti1JW5yNOyNOyN5kyN5\",\"reward\":{\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-957700.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,1],[1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,1,0,1,1],[1,0,1,0,0,1,1,1,0,1],[1,0,0,0,0,0,0,0,1,1],[1,0,1,0,0,1,0,0,0,0],[1,0,0,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0]],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"2.8.6.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"solaris\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"solaris\"}}]]},\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":874488224,\"moneyMax\":21862205600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":808,\"serverGrowth\":70,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|0\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|0\\\"]\",\"title\":\"cell.js solaris|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|1\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|1\\\"]\",\"title\":\"cell.js solaris|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|2\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|2\\\"]\",\"title\":\"cell.js solaris|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|3\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|3\\\"]\",\"title\":\"cell.js solaris|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|4\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|4\\\"]\",\"title\":\"cell.js solaris|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|5\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|5\\\"]\",\"title\":\"cell.js solaris|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|6\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|6\\\"]\",\"title\":\"cell.js solaris|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|7\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|7\\\"]\",\"title\":\"cell.js solaris|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|8\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|8\\\"]\",\"title\":\"cell.js solaris|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|9\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1893.0100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|9\\\"]\",\"title\":\"cell.js solaris|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|10\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|10\\\"]\",\"title\":\"cell.js solaris|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|11\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|11\\\"]\",\"title\":\"cell.js solaris|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|12\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|12\\\"]\",\"title\":\"cell.js solaris|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|13\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|13\\\"]\",\"title\":\"cell.js solaris|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|14\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|14\\\"]\",\"title\":\"cell.js solaris|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|15\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|15\\\"]\",\"title\":\"cell.js solaris|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|16\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|16\\\"]\",\"title\":\"cell.js solaris|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|17\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|17\\\"]\",\"title\":\"cell.js solaris|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|18\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|18\\\"]\",\"title\":\"cell.js solaris|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|19\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|19\\\"]\",\"title\":\"cell.js solaris|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|20\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|20\\\"]\",\"title\":\"cell.js solaris|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|21\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|21\\\"]\",\"title\":\"cell.js solaris|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|22\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|22\\\"]\",\"title\":\"cell.js solaris|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|23\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|23\\\"]\",\"title\":\"cell.js solaris|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|24\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|24\\\"]\",\"title\":\"cell.js solaris|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|25\"],\"dataMap\":{\"max-hardware\":[0,0,140,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3670.2262061451347,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|25\\\"]\",\"title\":\"cell.js solaris|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|26\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.8100000002935,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|26\\\"]\",\"title\":\"cell.js solaris|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|27\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.6100000002934,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|27\\\"]\",\"title\":\"cell.js solaris|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|28\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.6100000002934,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|28\\\"]\",\"title\":\"cell.js solaris|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|29\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.6100000002934,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|29\\\"]\",\"title\":\"cell.js solaris|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris|30\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":1892.6100000002934,\"ramUsage\":2,\"server\":\"solaris\",\"scriptKey\":\"cell.js*[\\\"solaris|30\\\"]\",\"title\":\"cell.js solaris|30\",\"threads\":1,\"temporary\":false}}]}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"59.4.3.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"deltaone\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"deltaone\"}}]]},\"serversOnNetwork\":[\"snap-fitness\",\"icarus\",\"univ-energy\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1552198759,\"moneyMax\":38804968975,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":816,\"serverGrowth\":68,\"runningScripts\":[]}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"82.9.0.0\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"global-pharm\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"global-pharm\"}}]]},\"serversOnNetwork\":[\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1572414751,\"moneyMax\":39310368775,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":816,\"serverGrowth\":84,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm|0\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"global-pharm\",\"scriptKey\":\"cell.js*[\\\"global-pharm|0\\\"]\",\"title\":\"cell.js global-pharm|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm|1\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"global-pharm\",\"scriptKey\":\"cell.js*[\\\"global-pharm|1\\\"]\",\"title\":\"cell.js global-pharm|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm|2\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"global-pharm\",\"scriptKey\":\"cell.js*[\\\"global-pharm|2\\\"]\",\"title\":\"cell.js global-pharm|2\",\"threads\":1,\"temporary\":false}}]}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"57.6.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"nova-med\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"nova-med\"}}]]},\"serversOnNetwork\":[\"icarus\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":1189378683,\"moneyMax\":29734467075,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":792,\"serverGrowth\":65,\"runningScripts\":[]}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"28.6.2.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"zeus-med\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"zeus-med\"}}]]},\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":1447122964,\"moneyMax\":36178074100,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":845,\"serverGrowth\":70,\"runningScripts\":[]}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-166485.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"WK64EV4EV4EVXEVXEVXEXEVXmUZCXmUZCXmUZUZUZ4mUZUUUUUUUUUUrbPUUUUUUrb2W7GkVVMk8V4wiwwiw\",\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"98.2.3.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"unitalife\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"unitalife\"}}]]},\"serversOnNetwork\":[\"aerocorp\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":1052811996,\"moneyMax\":26320299900,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":785,\"serverGrowth\":80,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|0\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|0\\\"]\",\"title\":\"cell.js unitalife|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|1\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|1\\\"]\",\"title\":\"cell.js unitalife|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|2\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|2\\\"]\",\"title\":\"cell.js unitalife|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|3\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|3\\\"]\",\"title\":\"cell.js unitalife|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|4\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|4\\\"]\",\"title\":\"cell.js unitalife|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|5\"],\"dataMap\":{\"foodnstuff\":[0,0,659,57]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|5\\\"]\",\"title\":\"cell.js unitalife|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|6\"],\"dataMap\":{\"foodnstuff\":[0,0,659,57]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|6\\\"]\",\"title\":\"cell.js unitalife|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|7\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|7\\\"]\",\"title\":\"cell.js unitalife|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|8\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|8\\\"]\",\"title\":\"cell.js unitalife|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|9\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|9\\\"]\",\"title\":\"cell.js unitalife|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|10\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|10\\\"]\",\"title\":\"cell.js unitalife|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|11\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|11\\\"]\",\"title\":\"cell.js unitalife|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|12\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|12\\\"]\",\"title\":\"cell.js unitalife|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|13\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|13\\\"]\",\"title\":\"cell.js unitalife|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife|14\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"unitalife\",\"scriptKey\":\"cell.js*[\\\"unitalife|14\\\"]\",\"title\":\"cell.js unitalife|14\",\"threads\":1,\"temporary\":false}}]}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-506769.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"55vC111111111L811ZZZZzGeetFFFFFFFFFFFFkkOOccFFFFFFFFdpttttttttttttttbVVVVVVVVVVVlCCC\",\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-939662.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,1,0,0,0,0,0,0,1,0],[0,1,0,1,0,0,0,0,0,1],[0,0,0,0,1,1,0,0,0,1],[0,0,0,1,0,0,0,1,0,0],[1,0,0,0,0,0,0,1,0,0]],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"11.5.9.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"lexo-corp\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"lexo-corp\"}}]]},\"serversOnNetwork\":[\"syscore\",\"global-pharm\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":775529321,\"moneyMax\":19388233025,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":655,\"serverGrowth\":61,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|0\"],\"dataMap\":{\"foodnstuff\":[457801.8093547421,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":457801.8093547421,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|0\\\"]\",\"title\":\"cell.js lexo-corp|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|1\"],\"dataMap\":{\"foodnstuff\":[452441.4108262495,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":452441.4108262495,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|1\\\"]\",\"title\":\"cell.js lexo-corp|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|2\"],\"dataMap\":{\"foodnstuff\":[447153.4733786629,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":447153.4733786629,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|2\\\"]\",\"title\":\"cell.js lexo-corp|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|3\"],\"dataMap\":{\"foodnstuff\":[441927.1612196052,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":441927.1612196052,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|3\\\"]\",\"title\":\"cell.js lexo-corp|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|4\"],\"dataMap\":{\"foodnstuff\":[436747.37330708915,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":436747.37330708915,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|4\\\"]\",\"title\":\"cell.js lexo-corp|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|5\"],\"dataMap\":{\"foodnstuff\":[431643.55856004107,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":431643.55856004107,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|5\\\"]\",\"title\":\"cell.js lexo-corp|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|6\"],\"dataMap\":{\"foodnstuff\":[426585.3866904465,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":426585.3866904465,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|6\\\"]\",\"title\":\"cell.js lexo-corp|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|7\"],\"dataMap\":{\"foodnstuff\":[0,0,713,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14953.550199894002,\"onlineMoneyMade\":0,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|7\\\"]\",\"title\":\"cell.js lexo-corp|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|8\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[0,0,413,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10942.517274606884,\"onlineMoneyMade\":0,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|8\\\"]\",\"title\":\"cell.js lexo-corp|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|9\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[0,0,413,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10942.517274606884,\"onlineMoneyMade\":0,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|9\\\"]\",\"title\":\"cell.js lexo-corp|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|10\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[0,0,413,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10942.517274606884,\"onlineMoneyMade\":0,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|10\\\"]\",\"title\":\"cell.js lexo-corp|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|11\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[0,0,413,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10942.517274606884,\"onlineMoneyMade\":0,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|11\\\"]\",\"title\":\"cell.js lexo-corp|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|12\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[0,0,413,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10942.517274606884,\"onlineMoneyMade\":0,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|12\\\"]\",\"title\":\"cell.js lexo-corp|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|13\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[2067013.9185768282,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":2067013.9185768282,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|13\\\"]\",\"title\":\"cell.js lexo-corp|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|14\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[2425335.353529819,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":2425335.353529819,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|14\\\"]\",\"title\":\"cell.js lexo-corp|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|15\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1318165.8314685351,215,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13962.589124234828,\"onlineMoneyMade\":1318165.8314685351,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|15\\\"]\",\"title\":\"cell.js lexo-corp|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|16\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1302716.042184834,215,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13962.589124234828,\"onlineMoneyMade\":1302716.042184834,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|16\\\"]\",\"title\":\"cell.js lexo-corp|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|17\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1948807.2378195333,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1948807.2378195333,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|17\\\"]\",\"title\":\"cell.js lexo-corp|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|18\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1791797.9302703328,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1791797.9302703328,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|18\\\"]\",\"title\":\"cell.js lexo-corp|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|19\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1770828.7726819376,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1770828.7726819376,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|19\\\"]\",\"title\":\"cell.js lexo-corp|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|20\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1750102.9755119383,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1750102.9755119383,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|20\\\"]\",\"title\":\"cell.js lexo-corp|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|21\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1729620.176880269,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1729620.176880269,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|21\\\"]\",\"title\":\"cell.js lexo-corp|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|22\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[2042811.4735353803,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":2042811.4735353803,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|22\\\"]\",\"title\":\"cell.js lexo-corp|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|23\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[2018892.9057495235,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":2018892.9057495235,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|23\\\"]\",\"title\":\"cell.js lexo-corp|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|24\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1995254.856337324,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1995254.856337324,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|24\\\"]\",\"title\":\"cell.js lexo-corp|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|25\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1542041.8662286948,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1542041.8662286948,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|25\\\"]\",\"title\":\"cell.js lexo-corp|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|26\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1578795.7036976195,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1578795.7036976195,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|26\\\"]\",\"title\":\"cell.js lexo-corp|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|27\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1560315.6748122736,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1560315.6748122736,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|27\\\"]\",\"title\":\"cell.js lexo-corp|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|28\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1457493.6757230593,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1457493.6757230593,\"onlineRunningTime\":3323.2099999991688,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|28\\\"]\",\"title\":\"cell.js lexo-corp|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|29\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1423796.9026360149,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1423796.9026360149,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|29\\\"]\",\"title\":\"cell.js lexo-corp|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|30\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1407135.1556560688,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1407135.1556560688,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|30\\\"]\",\"title\":\"cell.js lexo-corp|30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|31\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1612553.103745282,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1612553.103745282,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|31\\\"]\",\"title\":\"cell.js lexo-corp|31\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|32\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1343398.7601520582,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1343398.7601520582,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|32\\\"]\",\"title\":\"cell.js lexo-corp|32\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|33\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1327680.4009883977,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1327680.4009883977,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|33\\\"]\",\"title\":\"cell.js lexo-corp|33\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|34\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1789294.1904074904,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1789294.1904074904,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|34\\\"]\",\"title\":\"cell.js lexo-corp|34\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|35\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1312146.205718278,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1312146.205718278,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|35\\\"]\",\"title\":\"cell.js lexo-corp|35\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|36\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1333799.176111582,215,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13962.589124234828,\"onlineMoneyMade\":1333799.176111582,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|36\\\"]\",\"title\":\"cell.js lexo-corp|36\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|37\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1281826.3457184792,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1281826.3457184792,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|37\\\"]\",\"title\":\"cell.js lexo-corp|37\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|38\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1971894.0528241235,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1971894.0528241235,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|38\\\"]\",\"title\":\"cell.js lexo-corp|38\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|39\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1992629.6297041974,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1992629.6297041974,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|39\\\"]\",\"title\":\"cell.js lexo-corp|39\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|40\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1960773.74250463,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1960773.74250463,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|40\\\"]\",\"title\":\"cell.js lexo-corp|40\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|41\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1834490.6295296026,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1834490.6295296026,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|41\\\"]\",\"title\":\"cell.js lexo-corp|41\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|42\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1813018.3970528345,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1813018.3970528345,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|42\\\"]\",\"title\":\"cell.js lexo-corp|42\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|43\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1746743.1248758307,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1746743.1248758307,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|43\\\"]\",\"title\":\"cell.js lexo-corp|43\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|44\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1726299.1622203402,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1726299.1622203402,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|44\\\"]\",\"title\":\"cell.js lexo-corp|44\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|45\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1706094.894497811,218,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14004.534566590772,\"onlineMoneyMade\":1706094.894497811,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|45\\\"]\",\"title\":\"cell.js lexo-corp|45\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|46\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[2016246.7901176647,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":2016246.7901176647,\"onlineRunningTime\":3323.009999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|46\\\"]\",\"title\":\"cell.js lexo-corp|46\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|47\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1501589.1666018981,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1501589.1666018981,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|47\\\"]\",\"title\":\"cell.js lexo-corp|47\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|48\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[637726.9716262994,215,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13962.589124234828,\"onlineMoneyMade\":637726.9716262994,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|48\\\"]\",\"title\":\"cell.js lexo-corp|48\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|49\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1937818.7068292983,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1937818.7068292983,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|49\\\"]\",\"title\":\"cell.js lexo-corp|49\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|50\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1915132.866220972,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1915132.866220972,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|50\\\"]\",\"title\":\"cell.js lexo-corp|50\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|51\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1556940.8567865123,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1556940.8567865123,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|51\\\"]\",\"title\":\"cell.js lexo-corp|51\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|52\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1538884.9398414851,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1538884.9398414851,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|52\\\"]\",\"title\":\"cell.js lexo-corp|52\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|53\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1521043.3822621203,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1521043.3822621203,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|53\\\"]\",\"title\":\"cell.js lexo-corp|53\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|54\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1503413.6898518603,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1503413.6898518603,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|54\\\"]\",\"title\":\"cell.js lexo-corp|54\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|55\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1599906.9795280963,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1599906.9795280963,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|55\\\"]\",\"title\":\"cell.js lexo-corp|55\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|56\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[576872.165768605,215,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13962.589124234828,\"onlineMoneyMade\":576872.165768605,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|56\\\"]\",\"title\":\"cell.js lexo-corp|56\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|57\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[569762.2037113702,215,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13962.589124234828,\"onlineMoneyMade\":569762.2037113702,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|57\\\"]\",\"title\":\"cell.js lexo-corp|57\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|58\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[563102.5822236215,215,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13962.589124234828,\"onlineMoneyMade\":563102.5822236215,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|58\\\"]\",\"title\":\"cell.js lexo-corp|58\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|59\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1530081.3074930464,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1530081.3074930464,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|59\\\"]\",\"title\":\"cell.js lexo-corp|59\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|60\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1675634.429475097,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1675634.429475097,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|60\\\"]\",\"title\":\"cell.js lexo-corp|60\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|61\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1492431.7712326976,216,342,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13983.5618454128,\"onlineMoneyMade\":1492431.7712326976,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|61\\\"]\",\"title\":\"cell.js lexo-corp|61\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp|62\"],\"dataMap\":{\"max-hardware\":[0,0,0,87],\"foodnstuff\":[1499550.8565844137,219,341,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14025.507287768743,\"onlineMoneyMade\":1499550.8565844137,\"onlineRunningTime\":3322.809999999169,\"ramUsage\":2,\"server\":\"lexo-corp\",\"scriptKey\":\"cell.js*[\\\"lexo-corp|62\\\"]\",\"title\":\"cell.js lexo-corp|62\",\"threads\":1,\"temporary\":false}}]}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"51.1.3.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"rho-construction\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"rho-construction\"}}]]},\"serversOnNetwork\":[\"rothman-uni\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":634843780,\"moneyMax\":15871094500,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":483,\"serverGrowth\":59,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction|0\"],\"dataMap\":{\"foodnstuff\":[0,0,659,57]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rho-construction\",\"scriptKey\":\"cell.js*[\\\"rho-construction|0\\\"]\",\"title\":\"cell.js rho-construction|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction|1\"],\"dataMap\":{\"foodnstuff\":[0,0,659,57]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rho-construction\",\"scriptKey\":\"cell.js*[\\\"rho-construction|1\\\"]\",\"title\":\"cell.js rho-construction|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction|2\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rho-construction\",\"scriptKey\":\"cell.js*[\\\"rho-construction|2\\\"]\",\"title\":\"cell.js rho-construction|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction|3\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rho-construction\",\"scriptKey\":\"cell.js*[\\\"rho-construction|3\\\"]\",\"title\":\"cell.js rho-construction|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction|4\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"rho-construction\",\"scriptKey\":\"cell.js*[\\\"rho-construction|4\\\"]\",\"title\":\"cell.js rho-construction|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction|5\"],\"dataMap\":{\"foodnstuff\":[0,0,659,57]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"rho-construction\",\"scriptKey\":\"cell.js*[\\\"rho-construction|5\\\"]\",\"title\":\"cell.js rho-construction|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction|6\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"rho-construction\",\"scriptKey\":\"cell.js*[\\\"rho-construction|6\\\"]\",\"title\":\"cell.js rho-construction|6\",\"threads\":1,\"temporary\":false}}]}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-424201-BitRunners.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[93,112,46,69,12,53,106,136,75,192,191,148,154,151,113,69,1,196,131,62,142,182,107,12,200,48,169,88,60,26],\"reward\":{\"type\":0,\"name\":\"BitRunners\"}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-975552.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[2,9],[8,9,8],[2,3,7,8],[2,1,9,7,2],[4,8,6,1,4,6],[2,4,4,5,3,3,9],[5,2,4,5,3,7,1,1],[3,8,8,8,3,9,7,2,7]],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"75.8.1.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"alpha-ent\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"alpha-ent\"}}]]},\"serversOnNetwork\":[\"summit-uni\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":620862605,\"moneyMax\":15521565125,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":578,\"serverGrowth\":53,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|0\"],\"dataMap\":{\"max-hardware\":[6495037.671389953,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":6495037.671389953,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|0\\\"]\",\"title\":\"cell.js alpha-ent|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|1\"],\"dataMap\":{\"max-hardware\":[5436919.693730296,49,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":5436919.693730296,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|1\\\"]\",\"title\":\"cell.js alpha-ent|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|2\"],\"dataMap\":{\"max-hardware\":[6426663.335773941,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":6426663.335773941,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|2\\\"]\",\"title\":\"cell.js alpha-ent|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|3\"],\"dataMap\":{\"max-hardware\":[9951431.256334618,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":9951431.256334618,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|3\\\"]\",\"title\":\"cell.js alpha-ent|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|4\"],\"dataMap\":{\"max-hardware\":[9846504.558461722,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":9846504.558461722,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|4\\\"]\",\"title\":\"cell.js alpha-ent|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|5\"],\"dataMap\":{\"max-hardware\":[5221435.070841567,49,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":5221435.070841567,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|5\\\"]\",\"title\":\"cell.js alpha-ent|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|6\"],\"dataMap\":{\"max-hardware\":[5166596.2746197935,49,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":5166596.2746197935,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|6\\\"]\",\"title\":\"cell.js alpha-ent|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|7\"],\"dataMap\":{\"max-hardware\":[10918842.084455313,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":10918842.084455313,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|7\\\"]\",\"title\":\"cell.js alpha-ent|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|8\"],\"dataMap\":{\"max-hardware\":[7017138.341399575,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":7017138.341399575,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|8\\\"]\",\"title\":\"cell.js alpha-ent|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|9\"],\"dataMap\":{\"max-hardware\":[6943335.594762515,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":6943335.594762515,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|9\\\"]\",\"title\":\"cell.js alpha-ent|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|10\"],\"dataMap\":{\"max-hardware\":[9169964.81396283,50,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":9169964.81396283,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|10\\\"]\",\"title\":\"cell.js alpha-ent|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|11\"],\"dataMap\":{\"max-hardware\":[11391172.109000582,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":11391172.109000582,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|11\\\"]\",\"title\":\"cell.js alpha-ent|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|12\"],\"dataMap\":{\"max-hardware\":[11271203.94637527,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":11271203.94637527,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|12\\\"]\",\"title\":\"cell.js alpha-ent|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|13\"],\"dataMap\":{\"max-hardware\":[10700877.895557119,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":10700877.895557119,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|13\\\"]\",\"title\":\"cell.js alpha-ent|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|14\"],\"dataMap\":{\"max-hardware\":[10588197.687538438,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":10588197.687538438,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|14\\\"]\",\"title\":\"cell.js alpha-ent|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|15\"],\"dataMap\":{\"max-hardware\":[6955390.889195686,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":6955390.889195686,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|15\\\"]\",\"title\":\"cell.js alpha-ent|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|16\"],\"dataMap\":{\"max-hardware\":[5299414.036163806,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":5299414.036163806,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|16\\\"]\",\"title\":\"cell.js alpha-ent|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|17\"],\"dataMap\":{\"max-hardware\":[5243743.506541747,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":5243743.506541747,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|17\\\"]\",\"title\":\"cell.js alpha-ent|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|18\"],\"dataMap\":{\"max-hardware\":[5281883.647484828,49,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":5281883.647484828,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|18\\\"]\",\"title\":\"cell.js alpha-ent|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|19\"],\"dataMap\":{\"max-hardware\":[7822526.403655279,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":7822526.403655279,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|19\\\"]\",\"title\":\"cell.js alpha-ent|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|20\"],\"dataMap\":{\"max-hardware\":[7740133.43617031,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":7740133.43617031,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|20\\\"]\",\"title\":\"cell.js alpha-ent|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|21\"],\"dataMap\":{\"max-hardware\":[7516665.375551223,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":7516665.375551223,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|21\\\"]\",\"title\":\"cell.js alpha-ent|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|22\"],\"dataMap\":{\"max-hardware\":[6972759.004322982,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":6972759.004322982,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|22\\\"]\",\"title\":\"cell.js alpha-ent|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|23\"],\"dataMap\":{\"max-hardware\":[6899331.858636959,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":6899331.858636959,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|23\\\"]\",\"title\":\"cell.js alpha-ent|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|24\"],\"dataMap\":{\"max-hardware\":[4379402.763092826,48,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":4379402.763092826,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|24\\\"]\",\"title\":\"cell.js alpha-ent|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|25\"],\"dataMap\":{\"max-hardware\":[6792765.215118256,49,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":6792765.215118256,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|25\\\"]\",\"title\":\"cell.js alpha-ent|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|26\"],\"dataMap\":{\"max-hardware\":[11152502.57082849,52,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":11152502.57082849,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|26\\\"]\",\"title\":\"cell.js alpha-ent|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|27\"],\"dataMap\":{\"max-hardware\":[11035053.02350212,52,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":11035053.02350212,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|27\\\"]\",\"title\":\"cell.js alpha-ent|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|28\"],\"dataMap\":{\"max-hardware\":[0,0,241,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6318.032254864163,\"onlineMoneyMade\":0,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|28\\\"]\",\"title\":\"cell.js alpha-ent|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|29\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|29\\\"]\",\"title\":\"cell.js alpha-ent|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent|30\"],\"dataMap\":{\"max-hardware\":[0,0,139,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3644.0103046726695,\"onlineMoneyMade\":0,\"onlineRunningTime\":3319.609999999172,\"ramUsage\":2,\"server\":\"alpha-ent\",\"scriptKey\":\"cell.js*[\\\"alpha-ent|30\\\"]\",\"title\":\"cell.js alpha-ent|30\",\"threads\":1,\"temporary\":false}}]}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-188978.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9ygcqtnfz005iBgKJ793Cp6750621T781e779H0iwmf7cE05Xm3Wh459czIUWdTZD\",\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"36.6.3.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"aevum-police\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"aevum-police\"}}]]},\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":262773162,\"moneyMax\":6569329050,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":417,\"serverGrowth\":49,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|0\"],\"dataMap\":{\"max-hardware\":[0,0,101,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|0\\\"]\",\"title\":\"cell.js aevum-police|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|1\"],\"dataMap\":{\"max-hardware\":[0,0,101,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|1\\\"]\",\"title\":\"cell.js aevum-police|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|2\"],\"dataMap\":{\"max-hardware\":[0,0,101,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|2\\\"]\",\"title\":\"cell.js aevum-police|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|3\"],\"dataMap\":{\"max-hardware\":[0,0,101,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|3\\\"]\",\"title\":\"cell.js aevum-police|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|4\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|4\\\"]\",\"title\":\"cell.js aevum-police|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|5\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|5\\\"]\",\"title\":\"cell.js aevum-police|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|6\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|6\\\"]\",\"title\":\"cell.js aevum-police|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|7\"],\"dataMap\":{\"max-hardware\":[0,0,102,112]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|7\\\"]\",\"title\":\"cell.js aevum-police|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|8\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|8\\\"]\",\"title\":\"cell.js aevum-police|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|9\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|9\\\"]\",\"title\":\"cell.js aevum-police|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|10\"],\"dataMap\":{\"max-hardware\":[0,0,101,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|10\\\"]\",\"title\":\"cell.js aevum-police|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|11\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|11\\\"]\",\"title\":\"cell.js aevum-police|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|12\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|12\\\"]\",\"title\":\"cell.js aevum-police|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|13\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|13\\\"]\",\"title\":\"cell.js aevum-police|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police|14\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"aevum-police\",\"scriptKey\":\"cell.js*[\\\"aevum-police|14\\\"]\",\"title\":\"cell.js aevum-police|14\",\"threads\":1,\"temporary\":false}}]}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"11.4.5.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"rothman-uni\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"rothman-uni\"}}]]},\"serversOnNetwork\":[\"avmnite-02h\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":233963839,\"moneyMax\":5849095975,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":422,\"serverGrowth\":45,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni|0\"],\"dataMap\":{\"foodnstuff\":[0,0,657,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rothman-uni\",\"scriptKey\":\"cell.js*[\\\"rothman-uni|0\\\"]\",\"title\":\"cell.js rothman-uni|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni|1\"],\"dataMap\":{\"foodnstuff\":[0,0,657,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rothman-uni\",\"scriptKey\":\"cell.js*[\\\"rothman-uni|1\\\"]\",\"title\":\"cell.js rothman-uni|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni|2\"],\"dataMap\":{\"foodnstuff\":[0,0,657,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rothman-uni\",\"scriptKey\":\"cell.js*[\\\"rothman-uni|2\\\"]\",\"title\":\"cell.js rothman-uni|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni|3\"],\"dataMap\":{\"foodnstuff\":[0,0,657,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rothman-uni\",\"scriptKey\":\"cell.js*[\\\"rothman-uni|3\\\"]\",\"title\":\"cell.js rothman-uni|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni|4\"],\"dataMap\":{\"foodnstuff\":[0,0,659,57]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rothman-uni\",\"scriptKey\":\"cell.js*[\\\"rothman-uni|4\\\"]\",\"title\":\"cell.js rothman-uni|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni|5\"],\"dataMap\":{\"foodnstuff\":[0,0,659,57]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rothman-uni\",\"scriptKey\":\"cell.js*[\\\"rothman-uni|5\\\"]\",\"title\":\"cell.js rothman-uni|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni|6\"],\"dataMap\":{\"foodnstuff\":[0,0,659,57]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"rothman-uni\",\"scriptKey\":\"cell.js*[\\\"rothman-uni|6\\\"]\",\"title\":\"cell.js rothman-uni|6\",\"threads\":1,\"temporary\":false}}]}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"22.5.3.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"zb-institute\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"zb-institute\"}}]]},\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":972820934,\"moneyMax\":24320523350,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":765,\"serverGrowth\":78,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|0\"],\"dataMap\":{\"max-hardware\":[8392090.088939684,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8392090.088939684,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|0\\\"]\",\"title\":\"cell.js zb-institute|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|1\"],\"dataMap\":{\"max-hardware\":[8303224.917241281,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8303224.917241281,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|1\\\"]\",\"title\":\"cell.js zb-institute|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|2\"],\"dataMap\":{\"max-hardware\":[8215302.601617533,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8215302.601617533,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|2\\\"]\",\"title\":\"cell.js zb-institute|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|3\"],\"dataMap\":{\"max-hardware\":[8416517.105911618,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8416517.105911618,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|3\\\"]\",\"title\":\"cell.js zb-institute|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|4\"],\"dataMap\":{\"max-hardware\":[8327391.401515027,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8327391.401515027,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|4\\\"]\",\"title\":\"cell.js zb-institute|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|5\"],\"dataMap\":{\"max-hardware\":[8889018.970980717,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8889018.970980717,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|5\\\"]\",\"title\":\"cell.js zb-institute|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|6\"],\"dataMap\":{\"max-hardware\":[8794845.651462657,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8794845.651462657,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|6\\\"]\",\"title\":\"cell.js zb-institute|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|7\"],\"dataMap\":{\"max-hardware\":[8701671.99491511,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8701671.99491511,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|7\\\"]\",\"title\":\"cell.js zb-institute|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|8\"],\"dataMap\":{\"max-hardware\":[8610398.116798561,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8610398.116798561,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|8\\\"]\",\"title\":\"cell.js zb-institute|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|9\"],\"dataMap\":{\"max-hardware\":[8519315.358365707,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8519315.358365707,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|9\\\"]\",\"title\":\"cell.js zb-institute|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|10\"],\"dataMap\":{\"max-hardware\":[8429065.215596924,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8429065.215596924,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|10\\\"]\",\"title\":\"cell.js zb-institute|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|11\"],\"dataMap\":{\"max-hardware\":[8339773.022975464,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8339773.022975464,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|11\\\"]\",\"title\":\"cell.js zb-institute|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|12\"],\"dataMap\":{\"max-hardware\":[8251428.617736147,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8251428.617736147,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|12\\\"]\",\"title\":\"cell.js zb-institute|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|13\"],\"dataMap\":{\"max-hardware\":[8164035.275361329,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":8164035.275361329,\"onlineRunningTime\":1877.21000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|13\\\"]\",\"title\":\"cell.js zb-institute|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|14\"],\"dataMap\":{\"max-hardware\":[7537182.673692116,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7537182.673692116,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|14\\\"]\",\"title\":\"cell.js zb-institute|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|15\"],\"dataMap\":{\"max-hardware\":[7457364.85370373,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7457364.85370373,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|15\\\"]\",\"title\":\"cell.js zb-institute|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|16\"],\"dataMap\":{\"max-hardware\":[7378393.955118351,72,116,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4928.589476823481,\"onlineMoneyMade\":7378393.955118351,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|16\\\"]\",\"title\":\"cell.js zb-institute|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|17\"],\"dataMap\":{\"max-hardware\":[10760491.671307225,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":10760491.671307225,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|17\\\"]\",\"title\":\"cell.js zb-institute|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|18\"],\"dataMap\":{\"max-hardware\":[8501537.462884275,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8501537.462884275,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|18\\\"]\",\"title\":\"cell.js zb-institute|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|19\"],\"dataMap\":{\"max-hardware\":[8411560.54119884,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8411560.54119884,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|19\\\"]\",\"title\":\"cell.js zb-institute|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|20\"],\"dataMap\":{\"max-hardware\":[8322537.743796614,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8322537.743796614,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|20\\\"]\",\"title\":\"cell.js zb-institute|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|21\"],\"dataMap\":{\"max-hardware\":[8234458.962536778,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8234458.962536778,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|21\\\"]\",\"title\":\"cell.js zb-institute|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|22\"],\"dataMap\":{\"max-hardware\":[8147314.16730047,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8147314.16730047,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|22\\\"]\",\"title\":\"cell.js zb-institute|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|23\"],\"dataMap\":{\"max-hardware\":[8061093.434745476,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8061093.434745476,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|23\\\"]\",\"title\":\"cell.js zb-institute|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|24\"],\"dataMap\":{\"max-hardware\":[13260923.508911278,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":13260923.508911278,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|24\\\"]\",\"title\":\"cell.js zb-institute|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|25\"],\"dataMap\":{\"max-hardware\":[13126273.61170262,76,114,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4981.021279768413,\"onlineMoneyMade\":13126273.61170262,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|25\\\"]\",\"title\":\"cell.js zb-institute|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|26\"],\"dataMap\":{\"max-hardware\":[8056615.891820834,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8056615.891820834,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|26\\\"]\",\"title\":\"cell.js zb-institute|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|27\"],\"dataMap\":{\"max-hardware\":[7971362.583034416,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":7971362.583034416,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|27\\\"]\",\"title\":\"cell.js zb-institute|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|28\"],\"dataMap\":{\"max-hardware\":[8449606.69540099,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8449606.69540099,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|28\\\"]\",\"title\":\"cell.js zb-institute|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|29\"],\"dataMap\":{\"max-hardware\":[8362342.495633069,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8362342.495633069,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|29\\\"]\",\"title\":\"cell.js zb-institute|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute|30\"],\"dataMap\":{\"max-hardware\":[8273841.248298649,74,115,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4954.805378295947,\"onlineMoneyMade\":8273841.248298649,\"onlineRunningTime\":1877.01000000029,\"ramUsage\":2,\"server\":\"zb-institute\",\"scriptKey\":\"cell.js*[\\\"zb-institute|30\\\"]\",\"title\":\"cell.js zb-institute|30\",\"threads\":1,\"temporary\":false}}]}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-422961.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":5874544,\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"50.5.3.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"summit-uni\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"summit-uni\"}}]]},\"serversOnNetwork\":[\"computek\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":248772463,\"moneyMax\":6219311575,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":452,\"serverGrowth\":54,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|0\"],\"dataMap\":{\"max-hardware\":[5203610.49234757,48,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":5203610.49234757,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|0\\\"]\",\"title\":\"cell.js summit-uni|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|1\"],\"dataMap\":{\"max-hardware\":[5149007.076830508,48,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":5149007.076830508,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|1\\\"]\",\"title\":\"cell.js summit-uni|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|2\"],\"dataMap\":{\"max-hardware\":[5094977.793384806,48,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":5094977.793384806,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|2\\\"]\",\"title\":\"cell.js summit-uni|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|3\"],\"dataMap\":{\"max-hardware\":[13728576.050074272,52,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7261.804707872929,\"onlineMoneyMade\":13728576.050074272,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|3\\\"]\",\"title\":\"cell.js summit-uni|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|4\"],\"dataMap\":{\"max-hardware\":[13583871.576208005,52,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7261.804707872929,\"onlineMoneyMade\":13583871.576208005,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|4\\\"]\",\"title\":\"cell.js summit-uni|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|5\"],\"dataMap\":{\"max-hardware\":[8571278.148575539,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":8571278.148575539,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|5\\\"]\",\"title\":\"cell.js summit-uni|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|6\"],\"dataMap\":{\"max-hardware\":[16398792.85470883,54,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7288.020609345394,\"onlineMoneyMade\":16398792.85470883,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|6\\\"]\",\"title\":\"cell.js summit-uni|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|7\"],\"dataMap\":{\"max-hardware\":[5782030.383426064,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":5782030.383426064,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|7\\\"]\",\"title\":\"cell.js summit-uni|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|8\"],\"dataMap\":{\"max-hardware\":[5721279.740134224,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":5721279.740134224,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|8\\\"]\",\"title\":\"cell.js summit-uni|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|9\"],\"dataMap\":{\"max-hardware\":[12568653.749359742,52,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":12568653.749359742,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|9\\\"]\",\"title\":\"cell.js summit-uni|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|10\"],\"dataMap\":{\"max-hardware\":[12436069.89013502,52,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":12436069.89013502,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|10\\\"]\",\"title\":\"cell.js summit-uni|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|11\"],\"dataMap\":{\"max-hardware\":[7359167.094728755,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":7359167.094728755,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|11\\\"]\",\"title\":\"cell.js summit-uni|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|12\"],\"dataMap\":{\"max-hardware\":[7281662.339766316,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":7281662.339766316,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|12\\\"]\",\"title\":\"cell.js summit-uni|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|13\"],\"dataMap\":{\"max-hardware\":[5496703.343622946,49,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":5496703.343622946,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|13\\\"]\",\"title\":\"cell.js summit-uni|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|14\"],\"dataMap\":{\"max-hardware\":[12223027.842803467,51,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7261.804707872929,\"onlineMoneyMade\":12223027.842803467,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|14\\\"]\",\"title\":\"cell.js summit-uni|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|15\"],\"dataMap\":{\"max-hardware\":[11456621.136457827,52,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7261.804707872929,\"onlineMoneyMade\":11456621.136457827,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|15\\\"]\",\"title\":\"cell.js summit-uni|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|16\"],\"dataMap\":{\"max-hardware\":[9757366.377364002,50,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":9757366.377364002,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|16\\\"]\",\"title\":\"cell.js summit-uni|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|17\"],\"dataMap\":{\"max-hardware\":[11335868.523958962,52,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7261.804707872929,\"onlineMoneyMade\":11335868.523958962,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|17\\\"]\",\"title\":\"cell.js summit-uni|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|18\"],\"dataMap\":{\"max-hardware\":[6144500.148673018,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":6144500.148673018,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|18\\\"]\",\"title\":\"cell.js summit-uni|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|19\"],\"dataMap\":{\"max-hardware\":[6578693.09168824,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":6578693.09168824,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|19\\\"]\",\"title\":\"cell.js summit-uni|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|20\"],\"dataMap\":{\"max-hardware\":[6509474.918490516,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":6509474.918490516,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|20\\\"]\",\"title\":\"cell.js summit-uni|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|21\"],\"dataMap\":{\"max-hardware\":[6440986.498816609,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":6440986.498816609,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|21\\\"]\",\"title\":\"cell.js summit-uni|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|22\"],\"dataMap\":{\"max-hardware\":[10707383.208573103,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":10707383.208573103,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|22\\\"]\",\"title\":\"cell.js summit-uni|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|23\"],\"dataMap\":{\"max-hardware\":[10595174.282931684,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":10595174.282931684,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|23\\\"]\",\"title\":\"cell.js summit-uni|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|24\"],\"dataMap\":{\"max-hardware\":[10483564.953696428,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":10483564.953696428,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|24\\\"]\",\"title\":\"cell.js summit-uni|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|25\"],\"dataMap\":{\"max-hardware\":[5355676.815697699,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":5355676.815697699,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|25\\\"]\",\"title\":\"cell.js summit-uni|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|26\"],\"dataMap\":{\"max-hardware\":[6403267.887579061,50,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":6403267.887579061,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|26\\\"]\",\"title\":\"cell.js summit-uni|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|27\"],\"dataMap\":{\"max-hardware\":[6336001.45381412,50,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":6336001.45381412,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|27\\\"]\",\"title\":\"cell.js summit-uni|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|28\"],\"dataMap\":{\"max-hardware\":[6269443.08004508,50,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":6269443.08004508,\"onlineRunningTime\":3320.0099999991717,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|28\\\"]\",\"title\":\"cell.js summit-uni|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|29\"],\"dataMap\":{\"max-hardware\":[4851939.282332753,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":4851939.282332753,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|29\\\"]\",\"title\":\"cell.js summit-uni|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni|30\"],\"dataMap\":{\"max-hardware\":[7437498.495050144,50,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7209.372904927997,\"onlineMoneyMade\":7437498.495050144,\"onlineRunningTime\":3319.809999999172,\"ramUsage\":2,\"server\":\"summit-uni\",\"scriptKey\":\"cell.js*[\\\"summit-uni|30\\\"]\",\"title\":\"cell.js summit-uni|30\",\"threads\":1,\"temporary\":false}}]}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"54.8.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"syscore\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"syscore\"}}]]},\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":478884337,\"moneyMax\":11972108425,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":601,\"serverGrowth\":65,\"runningScripts\":[]}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"54.9.7.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"catalyst\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"catalyst\"}}]]},\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":436350790,\"moneyMax\":10908769750,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":450,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst|0\"],\"dataMap\":{\"foodnstuff\":[1273497.9009758213,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1273497.9009758213,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"catalyst\",\"scriptKey\":\"cell.js*[\\\"catalyst|0\\\"]\",\"title\":\"cell.js catalyst|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst|1\"],\"dataMap\":{\"foodnstuff\":[1258570.1353977956,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1258570.1353977956,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"catalyst\",\"scriptKey\":\"cell.js*[\\\"catalyst|1\\\"]\",\"title\":\"cell.js catalyst|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst|2\"],\"dataMap\":{\"foodnstuff\":[1243810.0409031394,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1243810.0409031394,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"catalyst\",\"scriptKey\":\"cell.js*[\\\"catalyst|2\\\"]\",\"title\":\"cell.js catalyst|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst|3\"],\"dataMap\":{\"foodnstuff\":[1229228.2781451605,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1229228.2781451605,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"catalyst\",\"scriptKey\":\"cell.js*[\\\"catalyst|3\\\"]\",\"title\":\"cell.js catalyst|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst|4\"],\"dataMap\":{\"foodnstuff\":[1181557.6300242757,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1181557.6300242757,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"catalyst\",\"scriptKey\":\"cell.js*[\\\"catalyst|4\\\"]\",\"title\":\"cell.js catalyst|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst|5\"],\"dataMap\":{\"foodnstuff\":[1167742.2201834635,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1167742.2201834635,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"catalyst\",\"scriptKey\":\"cell.js*[\\\"catalyst|5\\\"]\",\"title\":\"cell.js catalyst|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst|6\"],\"dataMap\":{\"foodnstuff\":[1179577.499779244,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1179577.499779244,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"catalyst\",\"scriptKey\":\"cell.js*[\\\"catalyst|6\\\"]\",\"title\":\"cell.js catalyst|6\",\"threads\":1,\"temporary\":false}}]}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"18.2.9.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"the-hub\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"the-hub\"}}]]},\"serversOnNetwork\":[\"silver-helix\",\"zb-institute\",\"syscore\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":41,\"hackDifficulty\":41,\"minDifficulty\":14,\"moneyAvailable\":150009650,\"moneyMax\":3750241250,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":318,\"serverGrowth\":47,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|0\"],\"dataMap\":{\"foodnstuff\":[1165745.2141536,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1165745.2141536,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|0\\\"]\",\"title\":\"cell.js the-hub|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|1\"],\"dataMap\":{\"foodnstuff\":[1187116.823022686,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1187116.823022686,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|1\\\"]\",\"title\":\"cell.js the-hub|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|2\"],\"dataMap\":{\"foodnstuff\":[1173196.0722006545,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1173196.0722006545,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|2\\\"]\",\"title\":\"cell.js the-hub|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|3\"],\"dataMap\":{\"foodnstuff\":[1159481.3804390545,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1159481.3804390545,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|3\\\"]\",\"title\":\"cell.js the-hub|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|4\"],\"dataMap\":{\"foodnstuff\":[1123600.6249388687,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1123600.6249388687,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|4\\\"]\",\"title\":\"cell.js the-hub|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|5\"],\"dataMap\":{\"foodnstuff\":[1110498.5506484718,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1110498.5506484718,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|5\\\"]\",\"title\":\"cell.js the-hub|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|6\"],\"dataMap\":{\"foodnstuff\":[1097485.3904756033,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1097485.3904756033,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|6\\\"]\",\"title\":\"cell.js the-hub|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|7\"],\"dataMap\":{\"foodnstuff\":[1084652.5932268724,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1084652.5932268724,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|7\\\"]\",\"title\":\"cell.js the-hub|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|8\"],\"dataMap\":{\"foodnstuff\":[1071985.8062742897,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1071985.8062742897,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|8\\\"]\",\"title\":\"cell.js the-hub|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|9\"],\"dataMap\":{\"foodnstuff\":[1059424.6505108718,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1059424.6505108718,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|9\\\"]\",\"title\":\"cell.js the-hub|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|10\"],\"dataMap\":{\"foodnstuff\":[1047050.1882454306,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1047050.1882454306,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|10\\\"]\",\"title\":\"cell.js the-hub|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|11\"],\"dataMap\":{\"foodnstuff\":[1034807.9872072987,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1034807.9872072987,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|11\\\"]\",\"title\":\"cell.js the-hub|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|12\"],\"dataMap\":{\"foodnstuff\":[1022784.6622185912,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1022784.6622185912,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|12\\\"]\",\"title\":\"cell.js the-hub|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|13\"],\"dataMap\":{\"foodnstuff\":[1010858.806512643,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1010858.806512643,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|13\\\"]\",\"title\":\"cell.js the-hub|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub|14\"],\"dataMap\":{\"foodnstuff\":[999015.016442032,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":999015.016442032,\"onlineRunningTime\":3324.209999999168,\"ramUsage\":2,\"server\":\"the-hub\",\"scriptKey\":\"cell.js*[\\\"the-hub|14\\\"]\",\"title\":\"cell.js the-hub|14\",\"threads\":1,\"temporary\":false}}]}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"50.1.3.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"computek\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"computek\"}}]]},\"serversOnNetwork\":[\"phantasy\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":222677040,\"moneyMax\":5566926000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":360,\"serverGrowth\":57,\"runningScripts\":[]}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-836459.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,1,1],[0,0,0,0,0],[0,0,0,0,0],[1,0,0,1,0],[0,1,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,1,0]],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"64.4.5.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"netlink\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"netlink\"}}]]},\"serversOnNetwork\":[\"silver-helix\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":421,\"serverGrowth\":67,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|0\"],\"dataMap\":{\"foodnstuff\":[0,0,656,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14995.495642249945,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.8099999991673,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|0\\\"]\",\"title\":\"cell.js netlink|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|1\"],\"dataMap\":{\"foodnstuff\":[0,0,658,58]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|1\\\"]\",\"title\":\"cell.js netlink|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|2\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|2\\\"]\",\"title\":\"cell.js netlink|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|3\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|3\\\"]\",\"title\":\"cell.js netlink|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|4\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|4\\\"]\",\"title\":\"cell.js netlink|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|5\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|5\\\"]\",\"title\":\"cell.js netlink|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|6\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|6\\\"]\",\"title\":\"cell.js netlink|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|7\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|7\\\"]\",\"title\":\"cell.js netlink|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|8\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|8\\\"]\",\"title\":\"cell.js netlink|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|9\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|9\\\"]\",\"title\":\"cell.js netlink|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|10\"],\"dataMap\":{\"foodnstuff\":[0,0,730,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15310.086459919523,\"onlineMoneyMade\":0,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|10\\\"]\",\"title\":\"cell.js netlink|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|11\"],\"dataMap\":{\"foodnstuff\":[1645261.6648115192,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1645261.6648115192,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|11\\\"]\",\"title\":\"cell.js netlink|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|12\"],\"dataMap\":{\"foodnstuff\":[1625971.3020321003,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1625971.3020321003,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|12\\\"]\",\"title\":\"cell.js netlink|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|13\"],\"dataMap\":{\"foodnstuff\":[1606896.443729439,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1606896.443729439,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|13\\\"]\",\"title\":\"cell.js netlink|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|14\"],\"dataMap\":{\"foodnstuff\":[1588045.7471270126,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1588045.7471270126,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|14\\\"]\",\"title\":\"cell.js netlink|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|15\"],\"dataMap\":{\"foodnstuff\":[1569427.401951737,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1569427.401951737,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|15\\\"]\",\"title\":\"cell.js netlink|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|16\"],\"dataMap\":{\"foodnstuff\":[1551017.0363220025,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1551017.0363220025,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|16\\\"]\",\"title\":\"cell.js netlink|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|17\"],\"dataMap\":{\"foodnstuff\":[1501820.5727302453,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1501820.5727302453,\"onlineRunningTime\":3324.6099999991675,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|17\\\"]\",\"title\":\"cell.js netlink|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|18\"],\"dataMap\":{\"foodnstuff\":[1484206.963674421,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1484206.963674421,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|18\\\"]\",\"title\":\"cell.js netlink|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|19\"],\"dataMap\":{\"foodnstuff\":[1466873.8939851592,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1466873.8939851592,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|19\\\"]\",\"title\":\"cell.js netlink|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|20\"],\"dataMap\":{\"foodnstuff\":[1449889.540050376,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1449889.540050376,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|20\\\"]\",\"title\":\"cell.js netlink|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|21\"],\"dataMap\":{\"foodnstuff\":[1432882.643025552,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1432882.643025552,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|21\\\"]\",\"title\":\"cell.js netlink|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|22\"],\"dataMap\":{\"foodnstuff\":[1416076.1608942645,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1416076.1608942645,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|22\\\"]\",\"title\":\"cell.js netlink|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|23\"],\"dataMap\":{\"foodnstuff\":[1399466.617516189,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1399466.617516189,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|23\\\"]\",\"title\":\"cell.js netlink|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|24\"],\"dataMap\":{\"foodnstuff\":[1383122.1403227833,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1383122.1403227833,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|24\\\"]\",\"title\":\"cell.js netlink|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|25\"],\"dataMap\":{\"foodnstuff\":[1366898.9334577587,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1366898.9334577587,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|25\\\"]\",\"title\":\"cell.js netlink|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|26\"],\"dataMap\":{\"foodnstuff\":[1350872.331051154,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1350872.331051154,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|26\\\"]\",\"title\":\"cell.js netlink|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|27\"],\"dataMap\":{\"foodnstuff\":[1335027.9836746585,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1335027.9836746585,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|27\\\"]\",\"title\":\"cell.js netlink|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|28\"],\"dataMap\":{\"foodnstuff\":[1319375.1465134127,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1319375.1465134127,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|28\\\"]\",\"title\":\"cell.js netlink|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|29\"],\"dataMap\":{\"foodnstuff\":[1303903.431902364,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1303903.431902364,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|29\\\"]\",\"title\":\"cell.js netlink|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink|30\"],\"dataMap\":{\"foodnstuff\":[1288610.8332078648,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":1288610.8332078648,\"onlineRunningTime\":3324.4099999991677,\"ramUsage\":2,\"server\":\"netlink\",\"scriptKey\":\"cell.js*[\\\"netlink|30\\\"]\",\"title\":\"cell.js netlink|30\",\"threads\":1,\"temporary\":false}}]}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"75.6.4.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"johnson-ortho\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"johnson-ortho\"}}]]},\"serversOnNetwork\":[\"omega-net\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":70859188,\"moneyMax\":1771479700,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":277,\"serverGrowth\":35,\"runningScripts\":[]}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"0.9.6.3\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"n00dles\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"n00dles\"}}]]},\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":1750000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":1,\"serverGrowth\":3000,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles|0\"],\"dataMap\":{\"max-hardware\":[13578519.169858262,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":13578519.169858262,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"n00dles\",\"scriptKey\":\"cell.js*[\\\"n00dles|0\\\"]\",\"title\":\"cell.js n00dles|0\",\"threads\":1,\"temporary\":false}}]}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"52.2.7.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"foodnstuff\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"foodnstuff\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":16799.53316239107,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":1,\"serverGrowth\":5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|0\"],\"dataMap\":{\"max-hardware\":[15836462.551298536,53,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":15836462.551298536,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"foodnstuff\",\"scriptKey\":\"cell.js*[\\\"foodnstuff|0\\\"]\",\"title\":\"cell.js foodnstuff|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|1\"],\"dataMap\":{\"max-hardware\":[15669529.017554812,53,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":15669529.017554812,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"foodnstuff\",\"scriptKey\":\"cell.js*[\\\"foodnstuff|1\\\"]\",\"title\":\"cell.js foodnstuff|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|2\"],\"dataMap\":{\"max-hardware\":[14532669.779492907,53,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":14532669.779492907,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"foodnstuff\",\"scriptKey\":\"cell.js*[\\\"foodnstuff|2\\\"]\",\"title\":\"cell.js foodnstuff|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|3\"],\"dataMap\":{\"max-hardware\":[14379559.71986512,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":14379559.71986512,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"foodnstuff\",\"scriptKey\":\"cell.js*[\\\"foodnstuff|3\\\"]\",\"title\":\"cell.js foodnstuff|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|4\"],\"dataMap\":{\"max-hardware\":[15745839.519728353,53,199,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":15745839.519728353,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"foodnstuff\",\"scriptKey\":\"cell.js*[\\\"foodnstuff|4\\\"]\",\"title\":\"cell.js foodnstuff|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|5\"],\"dataMap\":{\"max-hardware\":[16212755.882299544,54,199,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":16212755.882299544,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"foodnstuff\",\"scriptKey\":\"cell.js*[\\\"foodnstuff|5\\\"]\",\"title\":\"cell.js foodnstuff|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|6\"],\"dataMap\":{\"max-hardware\":[10388507.06796375,51,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":10388507.06796375,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"foodnstuff\",\"scriptKey\":\"cell.js*[\\\"foodnstuff|6\\\"]\",\"title\":\"cell.js foodnstuff|6\",\"threads\":1,\"temporary\":false}}]}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-93996.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"11000000100010110100110010010110\",\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"79.6.1.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"sigma-cosmetics\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"sigma-cosmetics\"}}]]},\"serversOnNetwork\":[\"home\",\"zer0\",\"nectar-net\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3.128,\"minDifficulty\":3,\"moneyAvailable\":606137.4805717773,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":5,\"serverGrowth\":10,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|0\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2449659.9965726477,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2449659.9965726477,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"cell.js*[\\\"sigma-cosmetics|0\\\"]\",\"title\":\"cell.js sigma-cosmetics|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|1\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1073765.528063737,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1073765.528063737,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"cell.js*[\\\"sigma-cosmetics|1\\\"]\",\"title\":\"cell.js sigma-cosmetics|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|2\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1061255.0515133867,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1061255.0515133867,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"cell.js*[\\\"sigma-cosmetics|2\\\"]\",\"title\":\"cell.js sigma-cosmetics|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|3\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1048890.5909806932,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1048890.5909806932,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"cell.js*[\\\"sigma-cosmetics|3\\\"]\",\"title\":\"cell.js sigma-cosmetics|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|4\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1036670.439261888,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1036670.439261888,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"cell.js*[\\\"sigma-cosmetics|4\\\"]\",\"title\":\"cell.js sigma-cosmetics|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|5\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1024592.9091483346,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1024592.9091483346,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"cell.js*[\\\"sigma-cosmetics|5\\\"]\",\"title\":\"cell.js sigma-cosmetics|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|6\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1012656.3331919479,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1012656.3331919479,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"scriptKey\":\"cell.js*[\\\"sigma-cosmetics|6\\\"]\",\"title\":\"cell.js sigma-cosmetics|6\",\"threads\":1,\"temporary\":false}}]}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-684461.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"iqS6Lg2kOoSbLg2kOcrBkOcrBkOjkOcrBkOdPOcrZBkOdPOcrZ8rZ8rZP\",\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"51.1.5.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"joesguns\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"joesguns\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2500000,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":10,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|0\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2080876.3973979226,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2080876.3973979226,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"joesguns\",\"scriptKey\":\"cell.js*[\\\"joesguns|0\\\"]\",\"title\":\"cell.js joesguns|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|1\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2056623.8311177487,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2056623.8311177487,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"joesguns\",\"scriptKey\":\"cell.js*[\\\"joesguns|1\\\"]\",\"title\":\"cell.js joesguns|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|2\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2609119.0202172245,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2609119.0202172245,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"joesguns\",\"scriptKey\":\"cell.js*[\\\"joesguns|2\\\"]\",\"title\":\"cell.js joesguns|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|3\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2567299.562587692,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2567299.562587692,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"joesguns\",\"scriptKey\":\"cell.js*[\\\"joesguns|3\\\"]\",\"title\":\"cell.js joesguns|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|4\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2537369.4345824467,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2537369.4345824467,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"joesguns\",\"scriptKey\":\"cell.js*[\\\"joesguns|4\\\"]\",\"title\":\"cell.js joesguns|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|5\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2507788.848988739,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2507788.848988739,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"joesguns\",\"scriptKey\":\"cell.js*[\\\"joesguns|5\\\"]\",\"title\":\"cell.js joesguns|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|6\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2478553.7172664534,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2478553.7172664534,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"joesguns\",\"scriptKey\":\"cell.js*[\\\"joesguns|6\\\"]\",\"title\":\"cell.js joesguns|6\",\"threads\":1,\"temporary\":false}}]}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"98.5.0.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"zer0\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"zer0\"}}]]},\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":7500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|0\"],\"dataMap\":{\"max-hardware\":[11336172.885069108,50,201,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":11336172.885069108,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|0\\\"]\",\"title\":\"cell.js zer0|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|1\"],\"dataMap\":{\"max-hardware\":[11217355.355588762,50,201,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":11217355.355588762,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|1\\\"]\",\"title\":\"cell.js zer0|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|2\"],\"dataMap\":{\"max-hardware\":[13055811.110603934,51,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":13055811.110603934,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|2\\\"]\",\"title\":\"cell.js zer0|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|3\"],\"dataMap\":{\"max-hardware\":[12918349.611741737,51,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":12918349.611741737,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|3\\\"]\",\"title\":\"cell.js zer0|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|4\"],\"dataMap\":{\"max-hardware\":[17057574.117490415,53,199,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":17057574.117490415,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|4\\\"]\",\"title\":\"cell.js zer0|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|5\"],\"dataMap\":{\"max-hardware\":[10760563.718060335,50,201,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":10760563.718060335,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|5\\\"]\",\"title\":\"cell.js zer0|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|6\"],\"dataMap\":{\"max-hardware\":[14806182.062030714,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":14806182.062030714,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|6\\\"]\",\"title\":\"cell.js zer0|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|7\"],\"dataMap\":{\"max-hardware\":[14650034.98366737,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":14650034.98366737,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|7\\\"]\",\"title\":\"cell.js zer0|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|8\"],\"dataMap\":{\"max-hardware\":[14495537.942528225,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":14495537.942528225,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|8\\\"]\",\"title\":\"cell.js zer0|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|9\"],\"dataMap\":{\"max-hardware\":[14342673.467625586,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":14342673.467625586,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|9\\\"]\",\"title\":\"cell.js zer0|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|10\"],\"dataMap\":{\"max-hardware\":[12588688.720516259,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":12588688.720516259,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|10\\\"]\",\"title\":\"cell.js zer0|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|11\"],\"dataMap\":{\"max-hardware\":[17137541.77947644,53,199,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":17137541.77947644,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|11\\\"]\",\"title\":\"cell.js zer0|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|12\"],\"dataMap\":{\"max-hardware\":[10295915.7059971,51,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":10295915.7059971,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|12\\\"]\",\"title\":\"cell.js zer0|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|13\"],\"dataMap\":{\"max-hardware\":[10187530.765445279,51,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":10187530.765445279,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|13\\\"]\",\"title\":\"cell.js zer0|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|14\"],\"dataMap\":{\"max-hardware\":[17238650.388620675,54,198,21]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":17238650.388620675,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"zer0\",\"scriptKey\":\"cell.js*[\\\"zer0|14\\\"]\",\"title\":\"cell.js zer0|14\",\"threads\":1,\"temporary\":false}}]}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"46.7.2.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"nectar-net\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"nectar-net\"}}]]},\"serversOnNetwork\":[\"sigma-cosmetics\",\"neo-net\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":20,\"serverGrowth\":25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|0\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"nectar-net\",\"scriptKey\":\"cell.js*[\\\"nectar-net|0\\\"]\",\"title\":\"cell.js nectar-net|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|1\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"nectar-net\",\"scriptKey\":\"cell.js*[\\\"nectar-net|1\\\"]\",\"title\":\"cell.js nectar-net|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|2\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"nectar-net\",\"scriptKey\":\"cell.js*[\\\"nectar-net|2\\\"]\",\"title\":\"cell.js nectar-net|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|3\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"nectar-net\",\"scriptKey\":\"cell.js*[\\\"nectar-net|3\\\"]\",\"title\":\"cell.js nectar-net|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|4\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"nectar-net\",\"scriptKey\":\"cell.js*[\\\"nectar-net|4\\\"]\",\"title\":\"cell.js nectar-net|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|5\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"nectar-net\",\"scriptKey\":\"cell.js*[\\\"nectar-net|5\\\"]\",\"title\":\"cell.js nectar-net|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|6\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"nectar-net\",\"scriptKey\":\"cell.js*[\\\"nectar-net|6\\\"]\",\"title\":\"cell.js nectar-net|6\",\"threads\":1,\"temporary\":false}}]}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"59.0.5.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"neo-net\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"neo-net\"}}]]},\"serversOnNetwork\":[\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|0\"],\"dataMap\":{\"max-hardware\":[0,0,101,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|0\\\"]\",\"title\":\"cell.js neo-net|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|1\"],\"dataMap\":{\"max-hardware\":[0,0,101,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|1\\\"]\",\"title\":\"cell.js neo-net|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|2\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|2\\\"]\",\"title\":\"cell.js neo-net|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|3\"],\"dataMap\":{\"max-hardware\":[10814759.715395482,51,85,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6527.759466643889,\"onlineMoneyMade\":10814759.715395482,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|3\\\"]\",\"title\":\"cell.js neo-net|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|4\"],\"dataMap\":{\"max-hardware\":[10476706.38732519,51,85,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6527.759466643889,\"onlineMoneyMade\":10476706.38732519,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|4\\\"]\",\"title\":\"cell.js neo-net|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|5\"],\"dataMap\":{\"max-hardware\":[10373133.680481324,51,86,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6553.975368116355,\"onlineMoneyMade\":10373133.680481324,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|5\\\"]\",\"title\":\"cell.js neo-net|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|6\"],\"dataMap\":{\"max-hardware\":[11274833.013348602,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":11274833.013348602,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|6\\\"]\",\"title\":\"cell.js neo-net|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|7\"],\"dataMap\":{\"max-hardware\":[13586882.465216648,53,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":13586882.465216648,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|7\\\"]\",\"title\":\"cell.js neo-net|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|8\"],\"dataMap\":{\"max-hardware\":[13443537.635696584,53,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":13443537.635696584,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|8\\\"]\",\"title\":\"cell.js neo-net|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|9\"],\"dataMap\":{\"max-hardware\":[6855492.041835368,49,201,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7078.293397565669,\"onlineMoneyMade\":6855492.041835368,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|9\\\"]\",\"title\":\"cell.js neo-net|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|10\"],\"dataMap\":{\"max-hardware\":[8789003.720799232,50,201,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7104.5092990381345,\"onlineMoneyMade\":8789003.720799232,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|10\\\"]\",\"title\":\"cell.js neo-net|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|11\"],\"dataMap\":{\"max-hardware\":[4333429.236752203,47,202,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7052.077496093203,\"onlineMoneyMade\":4333429.236752203,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|11\\\"]\",\"title\":\"cell.js neo-net|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|12\"],\"dataMap\":{\"max-hardware\":[4321592.681374505,47,202,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7052.077496093203,\"onlineMoneyMade\":4321592.681374505,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|12\\\"]\",\"title\":\"cell.js neo-net|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|13\"],\"dataMap\":{\"max-hardware\":[4276227.685196989,47,202,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7052.077496093203,\"onlineMoneyMade\":4276227.685196989,\"onlineRunningTime\":3320.809999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|13\\\"]\",\"title\":\"cell.js neo-net|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|14\"],\"dataMap\":{\"max-hardware\":[12825185.838006638,52,200,20]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7130.7252005106,\"onlineMoneyMade\":12825185.838006638,\"onlineRunningTime\":3320.609999999171,\"ramUsage\":2,\"server\":\"neo-net\",\"scriptKey\":\"cell.js*[\\\"neo-net|14\\\"]\",\"title\":\"cell.js neo-net|14\",\"threads\":1,\"temporary\":false}}]}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-461933.cct\",\"type\":\"Array Jumping Game\",\"data\":[1,0,4,6,2,9,3,3,8,1,10,0,10,4],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"53.1.5.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"silver-helix\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"silver-helix\"}}]]},\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"netlink\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":45000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|0\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|0\\\"]\",\"title\":\"cell.js silver-helix|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|1\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|1\\\"]\",\"title\":\"cell.js silver-helix|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|2\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|2\\\"]\",\"title\":\"cell.js silver-helix|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|3\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|3\\\"]\",\"title\":\"cell.js silver-helix|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|4\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|4\\\"]\",\"title\":\"cell.js silver-helix|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|5\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|5\\\"]\",\"title\":\"cell.js silver-helix|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|6\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|6\\\"]\",\"title\":\"cell.js silver-helix|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|7\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|7\\\"]\",\"title\":\"cell.js silver-helix|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|8\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|8\\\"]\",\"title\":\"cell.js silver-helix|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|9\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|9\\\"]\",\"title\":\"cell.js silver-helix|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|10\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|10\\\"]\",\"title\":\"cell.js silver-helix|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|11\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|11\\\"]\",\"title\":\"cell.js silver-helix|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|12\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|12\\\"]\",\"title\":\"cell.js silver-helix|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|13\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|13\\\"]\",\"title\":\"cell.js silver-helix|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|14\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|14\\\"]\",\"title\":\"cell.js silver-helix|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|15\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|15\\\"]\",\"title\":\"cell.js silver-helix|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|16\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|16\\\"]\",\"title\":\"cell.js silver-helix|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|17\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|17\\\"]\",\"title\":\"cell.js silver-helix|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|18\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|18\\\"]\",\"title\":\"cell.js silver-helix|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|19\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|19\\\"]\",\"title\":\"cell.js silver-helix|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|20\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|20\\\"]\",\"title\":\"cell.js silver-helix|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|21\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.4099999991668,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|21\\\"]\",\"title\":\"cell.js silver-helix|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|22\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|22\\\"]\",\"title\":\"cell.js silver-helix|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|23\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|23\\\"]\",\"title\":\"cell.js silver-helix|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|24\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|24\\\"]\",\"title\":\"cell.js silver-helix|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|25\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|25\\\"]\",\"title\":\"cell.js silver-helix|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|26\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|26\\\"]\",\"title\":\"cell.js silver-helix|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|27\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|27\\\"]\",\"title\":\"cell.js silver-helix|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|28\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|28\\\"]\",\"title\":\"cell.js silver-helix|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|29\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|29\\\"]\",\"title\":\"cell.js silver-helix|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|30\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"silver-helix\",\"scriptKey\":\"cell.js*[\\\"silver-helix|30\\\"]\",\"title\":\"cell.js silver-helix|30\",\"threads\":1,\"temporary\":false}}]}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"50.6.2.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"hong-fang-tea\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"hong-fang-tea\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":3000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":30,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|0\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1991240.3554433682,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1991240.3554433682,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"scriptKey\":\"cell.js*[\\\"hong-fang-tea|0\\\"]\",\"title\":\"cell.js hong-fang-tea|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|1\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1968030.7880121307,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1968030.7880121307,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"scriptKey\":\"cell.js*[\\\"hong-fang-tea|1\\\"]\",\"title\":\"cell.js hong-fang-tea|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|2\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1945092.221178605,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1945092.221178605,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"scriptKey\":\"cell.js*[\\\"hong-fang-tea|2\\\"]\",\"title\":\"cell.js hong-fang-tea|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|3\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1922421.4851615748,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1922421.4851615748,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"scriptKey\":\"cell.js*[\\\"hong-fang-tea|3\\\"]\",\"title\":\"cell.js hong-fang-tea|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|4\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1900015.4473196792,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1900015.4473196792,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"scriptKey\":\"cell.js*[\\\"hong-fang-tea|4\\\"]\",\"title\":\"cell.js hong-fang-tea|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|5\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2130245.6298399474,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2130245.6298399474,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"scriptKey\":\"cell.js*[\\\"hong-fang-tea|5\\\"]\",\"title\":\"cell.js hong-fang-tea|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|6\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2105416.0567940427,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2105416.0567940427,\"onlineRunningTime\":3326.8099999991655,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"scriptKey\":\"cell.js*[\\\"hong-fang-tea|6\\\"]\",\"title\":\"cell.js hong-fang-tea|6\",\"threads\":1,\"temporary\":false}}]}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"25.0.8.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"harakiri-sushi\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"harakiri-sushi\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":4000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":1,\"requiredHackingSkill\":40,\"serverGrowth\":40,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|0\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2387682.211503568,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2387682.211503568,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"scriptKey\":\"cell.js*[\\\"harakiri-sushi|0\\\"]\",\"title\":\"cell.js harakiri-sushi|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|1\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2274456.357463649,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2274456.357463649,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"scriptKey\":\"cell.js*[\\\"harakiri-sushi|1\\\"]\",\"title\":\"cell.js harakiri-sushi|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|2\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2247937.935850217,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2247937.935850217,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"scriptKey\":\"cell.js*[\\\"harakiri-sushi|2\\\"]\",\"title\":\"cell.js harakiri-sushi|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|3\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2355906.8616302507,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2355906.8616302507,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"scriptKey\":\"cell.js*[\\\"harakiri-sushi|3\\\"]\",\"title\":\"cell.js harakiri-sushi|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|4\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2221729.2398695424,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2221729.2398695424,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"scriptKey\":\"cell.js*[\\\"harakiri-sushi|4\\\"]\",\"title\":\"cell.js harakiri-sushi|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|5\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2095206.2881690294,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2095206.2881690294,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"scriptKey\":\"cell.js*[\\\"harakiri-sushi|5\\\"]\",\"title\":\"cell.js harakiri-sushi|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|6\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2415850.875602325,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2415850.875602325,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"scriptKey\":\"cell.js*[\\\"harakiri-sushi|6\\\"]\",\"title\":\"cell.js harakiri-sushi|6\",\"threads\":1,\"temporary\":false}}]}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-943706.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[12,40,27,16,48],[14,16,18,22,20],[10,30,28,29,15],[6,9,3,45,50],[33,47,24,20,7],[31,45,11,34,36],[28,35,2,15,34],[14,5,14,41,38],[35,45,16,31,6],[45,4,9,36,31],[46,5,18,23,12],[38,47,23,5,34]],\"reward\":{\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"10.1.9.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"phantasy\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"phantasy\"}}]]},\"serversOnNetwork\":[\"CSEC\",\"computek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|0\"],\"dataMap\":{\"max-hardware\":[4287940.029823767,47,227,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":4287940.029823767,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|0\\\"]\",\"title\":\"cell.js phantasy|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|1\"],\"dataMap\":{\"max-hardware\":[3056522.2837718967,47,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":3056522.2837718967,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|1\\\"]\",\"title\":\"cell.js phantasy|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|2\"],\"dataMap\":{\"max-hardware\":[2868915.4489395353,47,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":2868915.4489395353,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|2\\\"]\",\"title\":\"cell.js phantasy|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|3\"],\"dataMap\":{\"max-hardware\":[12011916.279274728,52,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":12011916.279274728,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|3\\\"]\",\"title\":\"cell.js phantasy|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|4\"],\"dataMap\":{\"max-hardware\":[11826788.007088115,52,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":11826788.007088115,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|4\\\"]\",\"title\":\"cell.js phantasy|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|5\"],\"dataMap\":{\"max-hardware\":[2972289.403985424,47,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7156.941101983066,\"onlineMoneyMade\":2972289.403985424,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|5\\\"]\",\"title\":\"cell.js phantasy|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|6\"],\"dataMap\":{\"max-hardware\":[10143190.03049153,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":10143190.03049153,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|6\\\"]\",\"title\":\"cell.js phantasy|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|7\"],\"dataMap\":{\"max-hardware\":[10036222.755484544,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":10036222.755484544,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|7\\\"]\",\"title\":\"cell.js phantasy|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|8\"],\"dataMap\":{\"max-hardware\":[8217350.935918994,50,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":8217350.935918994,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|8\\\"]\",\"title\":\"cell.js phantasy|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|9\"],\"dataMap\":{\"max-hardware\":[8130653.664811357,50,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":8130653.664811357,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|9\\\"]\",\"title\":\"cell.js phantasy|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|10\"],\"dataMap\":{\"max-hardware\":[11772041.091888154,52,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":11772041.091888154,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|10\\\"]\",\"title\":\"cell.js phantasy|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|11\"],\"dataMap\":{\"max-hardware\":[12695891.292073416,52,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7261.804707872929,\"onlineMoneyMade\":12695891.292073416,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|11\\\"]\",\"title\":\"cell.js phantasy|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|12\"],\"dataMap\":{\"max-hardware\":[11529115.213241247,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":11529115.213241247,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|12\\\"]\",\"title\":\"cell.js phantasy|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|13\"],\"dataMap\":{\"max-hardware\":[11407751.345493592,51,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":11407751.345493592,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|13\\\"]\",\"title\":\"cell.js phantasy|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|14\"],\"dataMap\":{\"max-hardware\":[14858368.629768366,53,224,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7261.804707872929,\"onlineMoneyMade\":14858368.629768366,\"onlineRunningTime\":3320.2099999991715,\"ramUsage\":2,\"server\":\"phantasy\",\"scriptKey\":\"cell.js*[\\\"phantasy|14\\\"]\",\"title\":\"cell.js phantasy|14\",\"threads\":1,\"temporary\":false}}]}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"4.1.7.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"max-hardware\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"max-hardware\"}}]]},\"serversOnNetwork\":[\"sigma-cosmetics\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":107520599.409921,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|0\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1533777.700142936,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1533777.700142936,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|0\\\"]\",\"title\":\"cell.js max-hardware|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|1\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1515893.282934324,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1515893.282934324,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|1\\\"]\",\"title\":\"cell.js max-hardware|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|2\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1498217.770402418,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1498217.770402418,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|2\\\"]\",\"title\":\"cell.js max-hardware|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|3\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1480748.718112143,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1480748.718112143,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|3\\\"]\",\"title\":\"cell.js max-hardware|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|4\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1463483.71028089,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1463483.71028089,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|4\\\"]\",\"title\":\"cell.js max-hardware|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|5\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1446420.35944207,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1446420.35944207,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|5\\\"]\",\"title\":\"cell.js max-hardware|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|6\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1429556.3061126473,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1429556.3061126473,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|6\\\"]\",\"title\":\"cell.js max-hardware|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|7\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1412889.2184645794,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1412889.2184645794,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|7\\\"]\",\"title\":\"cell.js max-hardware|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|8\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1396416.7920001158,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1396416.7920001158,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|8\\\"]\",\"title\":\"cell.js max-hardware|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|9\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1380136.74923092,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1380136.74923092,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|9\\\"]\",\"title\":\"cell.js max-hardware|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|10\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1364046.8393617105,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1364046.8393617105,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|10\\\"]\",\"title\":\"cell.js max-hardware|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|11\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1348653.6936063608,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1348653.6936063608,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|11\\\"]\",\"title\":\"cell.js max-hardware|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|12\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1332927.9744532,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1332927.9744532,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|12\\\"]\",\"title\":\"cell.js max-hardware|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|13\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1317385.9437662114,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1317385.9437662114,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|13\\\"]\",\"title\":\"cell.js max-hardware|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|14\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1181243.8226219472,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1181243.8226219472,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"max-hardware\",\"scriptKey\":\"cell.js*[\\\"max-hardware|14\\\"]\",\"title\":\"cell.js max-hardware|14\",\"threads\":1,\"temporary\":false}}]}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"57.9.4.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"omega-net\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"omega-net\"}}]]},\"serversOnNetwork\":[\"max-hardware\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":32,\"hackDifficulty\":32,\"minDifficulty\":11,\"moneyAvailable\":61145215,\"moneyMax\":1528630375,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":200,\"serverGrowth\":32,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|0\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1167477.701716807,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1167477.701716807,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|0\\\"]\",\"title\":\"cell.js omega-net|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|1\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1153872.2919164912,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1153872.2919164912,\"onlineRunningTime\":3326.6099999991657,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|1\\\"]\",\"title\":\"cell.js omega-net|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|2\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1732228.462246985,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1732228.462246985,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|2\\\"]\",\"title\":\"cell.js omega-net|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|3\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1712001.184530434,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1712001.184530434,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|3\\\"]\",\"title\":\"cell.js omega-net|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|4\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1823978.837277761,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1823978.837277761,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|4\\\"]\",\"title\":\"cell.js omega-net|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|5\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1802678.7909365634,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1802678.7909365634,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|5\\\"]\",\"title\":\"cell.js omega-net|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|6\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1781706.3304140128,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1781706.3304140128,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|6\\\"]\",\"title\":\"cell.js omega-net|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|7\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1760900.9881465028,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1760900.9881465028,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|7\\\"]\",\"title\":\"cell.js omega-net|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|8\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1740338.8497694323,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1740338.8497694323,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|8\\\"]\",\"title\":\"cell.js omega-net|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|9\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1830484.1827326966,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1830484.1827326966,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|9\\\"]\",\"title\":\"cell.js omega-net|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|10\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1720017.2354026635,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1720017.2354026635,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|10\\\"]\",\"title\":\"cell.js omega-net|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|11\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1699933.3263701957,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1699933.3263701957,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|11\\\"]\",\"title\":\"cell.js omega-net|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|12\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1848525.9431183715,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1848525.9431183715,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|12\\\"]\",\"title\":\"cell.js omega-net|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|13\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1715053.769598213,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1715053.769598213,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|13\\\"]\",\"title\":\"cell.js omega-net|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|14\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1703193.6696430345,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1703193.6696430345,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"omega-net\",\"scriptKey\":\"cell.js*[\\\"omega-net|14\\\"]\",\"title\":\"cell.js omega-net|14\",\"threads\":1,\"temporary\":false}}]}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"14.9.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"crush-fitness\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"crush-fitness\"}}]]},\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":51726496,\"moneyMax\":1293162400,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":243,\"serverGrowth\":32,\"runningScripts\":[]}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-843284.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-1,5,9,-3,6,-2,6,6,0,4,4,5,4,-5,-3,8,8,-4,-4,7,-6,-3],\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"35.0.4.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"iron-gym\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"iron-gym\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":20000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|0\"],\"dataMap\":{\"sigma-cosmetics\":[3945230.5824542865,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3945230.5824542865,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|0\\\"]\",\"title\":\"cell.js iron-gym|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|1\"],\"dataMap\":{\"sigma-cosmetics\":[3899257.9383939556,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3899257.9383939556,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|1\\\"]\",\"title\":\"cell.js iron-gym|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|2\"],\"dataMap\":{\"sigma-cosmetics\":[3671467.200208315,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":3671467.200208315,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|2\\\"]\",\"title\":\"cell.js iron-gym|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|3\"],\"dataMap\":{\"sigma-cosmetics\":[2636161.959688514,254,588,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17659.03123185237,\"onlineMoneyMade\":2636161.959688514,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|3\\\"]\",\"title\":\"cell.js iron-gym|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|4\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2301288.171467785,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2301288.171467785,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|4\\\"]\",\"title\":\"cell.js iron-gym|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|5\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2170226.572150798,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2170226.572150798,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|5\\\"]\",\"title\":\"cell.js iron-gym|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|6\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2144925.4797652042,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2144925.4797652042,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|6\\\"]\",\"title\":\"cell.js iron-gym|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|7\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2119919.870725921,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2119919.870725921,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|7\\\"]\",\"title\":\"cell.js iron-gym|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|8\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2014724.1308344873,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2014724.1308344873,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|8\\\"]\",\"title\":\"cell.js iron-gym|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|9\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2038485.3595749582,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2038485.3595749582,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|9\\\"]\",\"title\":\"cell.js iron-gym|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|10\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2195826.6457398133,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2195826.6457398133,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|10\\\"]\",\"title\":\"cell.js iron-gym|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|11\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2328437.0881073065,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2328437.0881073065,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|11\\\"]\",\"title\":\"cell.js iron-gym|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|12\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2062527.3255332077,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2062527.3255332077,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|12\\\"]\",\"title\":\"cell.js iron-gym|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|13\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2383701.2908108355,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2383701.2908108355,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|13\\\"]\",\"title\":\"cell.js iron-gym|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|14\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[2359842.566892418,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":2359842.566892418,\"onlineRunningTime\":3327.0099999991653,\"ramUsage\":2,\"server\":\"iron-gym\",\"scriptKey\":\"cell.js*[\\\"iron-gym|14\\\"]\",\"title\":\"cell.js iron-gym|14\",\"threads\":1,\"temporary\":false}}]}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-332932-BitRunners.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"01110001011101001111111101100011\",\"reward\":{\"type\":0,\"name\":\"BitRunners\"}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-695916.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":513156488,\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"69.5.5.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"millenium-fitness\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"millenium-fitness\"}}]]},\"serversOnNetwork\":[\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":518,\"serverGrowth\":35,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|0\"],\"dataMap\":{\"foodnstuff\":[987318.161594716,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":987318.161594716,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|0\\\"]\",\"title\":\"cell.js millenium-fitness|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|1\"],\"dataMap\":{\"foodnstuff\":[975750.5707463697,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":975750.5707463697,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|1\\\"]\",\"title\":\"cell.js millenium-fitness|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|2\"],\"dataMap\":{\"foodnstuff\":[964382.2942658918,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":964382.2942658918,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|2\\\"]\",\"title\":\"cell.js millenium-fitness|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|3\"],\"dataMap\":{\"foodnstuff\":[953108.9157086106,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":953108.9157086106,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|3\\\"]\",\"title\":\"cell.js millenium-fitness|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|4\"],\"dataMap\":{\"foodnstuff\":[941942.819025255,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":941942.819025255,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|4\\\"]\",\"title\":\"cell.js millenium-fitness|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|5\"],\"dataMap\":{\"foodnstuff\":[930940.9105297155,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":930940.9105297155,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|5\\\"]\",\"title\":\"cell.js millenium-fitness|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|6\"],\"dataMap\":{\"foodnstuff\":[920091.1629823196,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":920091.1629823196,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|6\\\"]\",\"title\":\"cell.js millenium-fitness|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|7\"],\"dataMap\":{\"foodnstuff\":[909373.3934740468,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":909373.3934740468,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|7\\\"]\",\"title\":\"cell.js millenium-fitness|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|8\"],\"dataMap\":{\"foodnstuff\":[898720.4054983793,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":898720.4054983793,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|8\\\"]\",\"title\":\"cell.js millenium-fitness|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|9\"],\"dataMap\":{\"foodnstuff\":[888226.1539039481,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":888226.1539039481,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|9\\\"]\",\"title\":\"cell.js millenium-fitness|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|10\"],\"dataMap\":{\"foodnstuff\":[877821.2897660553,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":877821.2897660553,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|10\\\"]\",\"title\":\"cell.js millenium-fitness|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|11\"],\"dataMap\":{\"foodnstuff\":[867589.8976451661,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":867589.8976451661,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|11\\\"]\",\"title\":\"cell.js millenium-fitness|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|12\"],\"dataMap\":{\"foodnstuff\":[857427.1886106358,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":857427.1886106358,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|12\\\"]\",\"title\":\"cell.js millenium-fitness|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|13\"],\"dataMap\":{\"foodnstuff\":[847383.7297235233,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":847383.7297235233,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|13\\\"]\",\"title\":\"cell.js millenium-fitness|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|14\"],\"dataMap\":{\"foodnstuff\":[837487.9834243298,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":837487.9834243298,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|14\\\"]\",\"title\":\"cell.js millenium-fitness|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|15\"],\"dataMap\":{\"foodnstuff\":[778502.8162138918,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":778502.8162138918,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|15\\\"]\",\"title\":\"cell.js millenium-fitness|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|16\"],\"dataMap\":{\"foodnstuff\":[769387.4225710552,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":769387.4225710552,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|16\\\"]\",\"title\":\"cell.js millenium-fitness|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|17\"],\"dataMap\":{\"foodnstuff\":[760409.4381433876,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":760409.4381433876,\"onlineRunningTime\":3324.009999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|17\\\"]\",\"title\":\"cell.js millenium-fitness|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|18\"],\"dataMap\":{\"foodnstuff\":[815161.0566802223,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":815161.0566802223,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|18\\\"]\",\"title\":\"cell.js millenium-fitness|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|19\"],\"dataMap\":{\"foodnstuff\":[805667.9604752852,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":805667.9604752852,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|19\\\"]\",\"title\":\"cell.js millenium-fitness|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|20\"],\"dataMap\":{\"foodnstuff\":[796260.3420655904,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":796260.3420655904,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|20\\\"]\",\"title\":\"cell.js millenium-fitness|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|21\"],\"dataMap\":{\"foodnstuff\":[786937.485960664,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":786937.485960664,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|21\\\"]\",\"title\":\"cell.js millenium-fitness|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|22\"],\"dataMap\":{\"foodnstuff\":[777723.9747565979,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":777723.9747565979,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|22\\\"]\",\"title\":\"cell.js millenium-fitness|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|23\"],\"dataMap\":{\"foodnstuff\":[768691.0560960528,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":768691.0560960528,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|23\\\"]\",\"title\":\"cell.js millenium-fitness|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|24\"],\"dataMap\":{\"foodnstuff\":[759691.492413864,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":759691.492413864,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|24\\\"]\",\"title\":\"cell.js millenium-fitness|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|25\"],\"dataMap\":{\"foodnstuff\":[750863.5439499755,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":750863.5439499755,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|25\\\"]\",\"title\":\"cell.js millenium-fitness|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|26\"],\"dataMap\":{\"foodnstuff\":[742073.7334522991,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":742073.7334522991,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|26\\\"]\",\"title\":\"cell.js millenium-fitness|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|27\"],\"dataMap\":{\"foodnstuff\":[733386.3325104131,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":733386.3325104131,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|27\\\"]\",\"title\":\"cell.js millenium-fitness|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|28\"],\"dataMap\":{\"foodnstuff\":[724801.3533833352,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":724801.3533833352,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|28\\\"]\",\"title\":\"cell.js millenium-fitness|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|29\"],\"dataMap\":{\"foodnstuff\":[705431.6023566319,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":705431.6023566319,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|29\\\"]\",\"title\":\"cell.js millenium-fitness|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|30\"],\"dataMap\":{\"foodnstuff\":[697185.8212734532,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":697185.8212734532,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|30\\\"]\",\"title\":\"cell.js millenium-fitness|30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|31\"],\"dataMap\":{\"foodnstuff\":[689034.329732026,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":689034.329732026,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|31\\\"]\",\"title\":\"cell.js millenium-fitness|31\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|32\"],\"dataMap\":{\"foodnstuff\":[680955.8440435854,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":680955.8440435854,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|32\\\"]\",\"title\":\"cell.js millenium-fitness|32\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|33\"],\"dataMap\":{\"foodnstuff\":[673015.2241168789,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":673015.2241168789,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|33\\\"]\",\"title\":\"cell.js millenium-fitness|33\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|34\"],\"dataMap\":{\"foodnstuff\":[665124.8451827184,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":665124.8451827184,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|34\\\"]\",\"title\":\"cell.js millenium-fitness|34\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|35\"],\"dataMap\":{\"foodnstuff\":[657369.608765172,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":657369.608765172,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|35\\\"]\",\"title\":\"cell.js millenium-fitness|35\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|36\"],\"dataMap\":{\"foodnstuff\":[649700.8753713589,102,697,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":649700.8753713589,\"onlineRunningTime\":3323.809999999168,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|36\\\"]\",\"title\":\"cell.js millenium-fitness|36\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|37\"],\"dataMap\":{\"foodnstuff\":[642085.1475869984,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":642085.1475869984,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|37\\\"]\",\"title\":\"cell.js millenium-fitness|37\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|38\"],\"dataMap\":{\"foodnstuff\":[634558.3437313106,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":634558.3437313106,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|38\\\"]\",\"title\":\"cell.js millenium-fitness|38\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|39\"],\"dataMap\":{\"foodnstuff\":[627182.732623669,103,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16757.20422119958,\"onlineMoneyMade\":627182.732623669,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|39\\\"]\",\"title\":\"cell.js millenium-fitness|39\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|40\"],\"dataMap\":{\"foodnstuff\":[620210.6529874174,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":620210.6529874174,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|40\\\"]\",\"title\":\"cell.js millenium-fitness|40\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|41\"],\"dataMap\":{\"foodnstuff\":[612938.7533194079,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":612938.7533194079,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|41\\\"]\",\"title\":\"cell.js millenium-fitness|41\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|42\"],\"dataMap\":{\"foodnstuff\":[605776.6853733398,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":605776.6853733398,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|42\\\"]\",\"title\":\"cell.js millenium-fitness|42\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|43\"],\"dataMap\":{\"foodnstuff\":[598674.243538589,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":598674.243538589,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|43\\\"]\",\"title\":\"cell.js millenium-fitness|43\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|44\"],\"dataMap\":{\"foodnstuff\":[591690.8239952347,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":591690.8239952347,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|44\\\"]\",\"title\":\"cell.js millenium-fitness|44\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|45\"],\"dataMap\":{\"foodnstuff\":[585939.468468832,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":585939.468468832,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|45\\\"]\",\"title\":\"cell.js millenium-fitness|45\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|46\"],\"dataMap\":{\"foodnstuff\":[579069.783003376,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":579069.783003376,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|46\\\"]\",\"title\":\"cell.js millenium-fitness|46\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|47\"],\"dataMap\":{\"foodnstuff\":[572280.7790014128,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":572280.7790014128,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|47\\\"]\",\"title\":\"cell.js millenium-fitness|47\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|48\"],\"dataMap\":{\"foodnstuff\":[565625.6071861216,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":565625.6071861216,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|48\\\"]\",\"title\":\"cell.js millenium-fitness|48\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|49\"],\"dataMap\":{\"foodnstuff\":[558994.4553865625,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":558994.4553865625,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|49\\\"]\",\"title\":\"cell.js millenium-fitness|49\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|50\"],\"dataMap\":{\"foodnstuff\":[552462.0923451749,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":552462.0923451749,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|50\\\"]\",\"title\":\"cell.js millenium-fitness|50\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|51\"],\"dataMap\":{\"foodnstuff\":[546020.3608644325,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":546020.3608644325,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|51\\\"]\",\"title\":\"cell.js millenium-fitness|51\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|52\"],\"dataMap\":{\"foodnstuff\":[539619.3842172573,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":539619.3842172573,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|52\\\"]\",\"title\":\"cell.js millenium-fitness|52\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|53\"],\"dataMap\":{\"foodnstuff\":[533313.7435791024,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":533313.7435791024,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|53\\\"]\",\"title\":\"cell.js millenium-fitness|53\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|54\"],\"dataMap\":{\"foodnstuff\":[527061.932873684,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":527061.932873684,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|54\\\"]\",\"title\":\"cell.js millenium-fitness|54\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|55\"],\"dataMap\":{\"foodnstuff\":[520887.63854365895,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":520887.63854365895,\"onlineRunningTime\":3323.6099999991684,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|55\\\"]\",\"title\":\"cell.js millenium-fitness|55\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|56\"],\"dataMap\":{\"foodnstuff\":[514828.714875481,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":514828.714875481,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|56\\\"]\",\"title\":\"cell.js millenium-fitness|56\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|57\"],\"dataMap\":{\"foodnstuff\":[491266.7977548406,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":491266.7977548406,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|57\\\"]\",\"title\":\"cell.js millenium-fitness|57\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|58\"],\"dataMap\":{\"foodnstuff\":[485507.77924794937,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":485507.77924794937,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|58\\\"]\",\"title\":\"cell.js millenium-fitness|58\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|59\"],\"dataMap\":{\"foodnstuff\":[479821.41590949765,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":479821.41590949765,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|59\\\"]\",\"title\":\"cell.js millenium-fitness|59\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|60\"],\"dataMap\":{\"foodnstuff\":[474285.6845431884,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":474285.6845431884,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|60\\\"]\",\"title\":\"cell.js millenium-fitness|60\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|61\"],\"dataMap\":{\"foodnstuff\":[468726.0311718551,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":468726.0311718551,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|61\\\"]\",\"title\":\"cell.js millenium-fitness|61\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness|62\"],\"dataMap\":{\"foodnstuff\":[463231.6620840721,102,696,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16736.231500021608,\"onlineMoneyMade\":463231.6620840721,\"onlineRunningTime\":3323.4099999991686,\"ramUsage\":2,\"server\":\"millenium-fitness\",\"scriptKey\":\"cell.js*[\\\"millenium-fitness|62\\\"]\",\"title\":\"cell.js millenium-fitness|62\",\"threads\":1,\"temporary\":false}}]}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"35.1.5.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1031,\"serverGrowth\":60,\"runningScripts\":[]}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"40.2.0.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"snap-fitness\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"snap-fitness\"}}]]},\"serversOnNetwork\":[\"lexo-corp\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":41,\"hackDifficulty\":41,\"minDifficulty\":14,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":704,\"serverGrowth\":53,\"runningScripts\":[]}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"67.8.0.4\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"run4theh111z\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"run4theh111z\"}}]]},\"serversOnNetwork\":[\"nova-med\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":547,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|0\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[1596585.291213294,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28009.069133181543,\"onlineMoneyMade\":1596585.291213294,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|0\\\"]\",\"title\":\"cell.js run4theh111z|0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|1\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[2320614.223761876,432,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27967.1236908256,\"onlineMoneyMade\":2320614.223761876,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|1\\\"]\",\"title\":\"cell.js run4theh111z|1\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|2\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[2573600.936583979,432,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27967.1236908256,\"onlineMoneyMade\":2573600.936583979,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|2\\\"]\",\"title\":\"cell.js run4theh111z|2\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|3\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[1715944.4097774501,432,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27967.1236908256,\"onlineMoneyMade\":1715944.4097774501,\"onlineRunningTime\":3322.6099999991693,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|3\\\"]\",\"title\":\"cell.js run4theh111z|3\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|4\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[1799307.5709288914,432,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27967.1236908256,\"onlineMoneyMade\":1799307.5709288914,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|4\\\"]\",\"title\":\"cell.js run4theh111z|4\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|5\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[1757130.8184564617,432,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27967.1236908256,\"onlineMoneyMade\":1757130.8184564617,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|5\\\"]\",\"title\":\"cell.js run4theh111z|5\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|6\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[2814554.6669561854,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28009.069133181543,\"onlineMoneyMade\":2814554.6669561854,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|6\\\"]\",\"title\":\"cell.js run4theh111z|6\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|7\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[1429430.899133719,430,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27925.178248469656,\"onlineMoneyMade\":1429430.899133719,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|7\\\"]\",\"title\":\"cell.js run4theh111z|7\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|8\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[2637711.102806934,438,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28051.014575537487,\"onlineMoneyMade\":2637711.102806934,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|8\\\"]\",\"title\":\"cell.js run4theh111z|8\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|9\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[2575944.6894067368,438,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28051.014575537487,\"onlineMoneyMade\":2575944.6894067368,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|9\\\"]\",\"title\":\"cell.js run4theh111z|9\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|10\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[2607080.074039738,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28009.069133181543,\"onlineMoneyMade\":2607080.074039738,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|10\\\"]\",\"title\":\"cell.js run4theh111z|10\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|11\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[2545957.773732723,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28009.069133181543,\"onlineMoneyMade\":2545957.773732723,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|11\\\"]\",\"title\":\"cell.js run4theh111z|11\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|12\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[2486270.9286198965,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28009.069133181543,\"onlineMoneyMade\":2486270.9286198965,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|12\\\"]\",\"title\":\"cell.js run4theh111z|12\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|13\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[1868446.4473543128,434,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27967.1236908256,\"onlineMoneyMade\":1868446.4473543128,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|13\\\"]\",\"title\":\"cell.js run4theh111z|13\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|14\"],\"dataMap\":{\"max-hardware\":[0,0,0,174],\"foodnstuff\":[1824723.8325224924,434,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":27967.1236908256,\"onlineMoneyMade\":1824723.8325224924,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|14\\\"]\",\"title\":\"cell.js run4theh111z|14\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|15\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[981931.431309905,430,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28554.359883808807,\"onlineMoneyMade\":981931.431309905,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|15\\\"]\",\"title\":\"cell.js run4theh111z|15\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|16\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1147935.0710903958,428,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28522.90080204185,\"onlineMoneyMade\":1147935.0710903958,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|16\\\"]\",\"title\":\"cell.js run4theh111z|16\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|17\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1090940.5002449749,418,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28355.119032618077,\"onlineMoneyMade\":1090940.5002449749,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|17\\\"]\",\"title\":\"cell.js run4theh111z|17\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|18\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1065414.0943882002,418,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28355.119032618077,\"onlineMoneyMade\":1065414.0943882002,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|18\\\"]\",\"title\":\"cell.js run4theh111z|18\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|19\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[2060143.057076033,426,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28428.523556740976,\"onlineMoneyMade\":2060143.057076033,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|19\\\"]\",\"title\":\"cell.js run4theh111z|19\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|20\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[2209444.1862638565,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28638.250768520695,\"onlineMoneyMade\":2209444.1862638565,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|20\\\"]\",\"title\":\"cell.js run4theh111z|20\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|21\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[2157679.924911226,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28638.250768520695,\"onlineMoneyMade\":2157679.924911226,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|21\\\"]\",\"title\":\"cell.js run4theh111z|21\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|22\"],\"dataMap\":{\"max-hardware\":[0,0,170,28],\"foodnstuff\":[1554677.384813305,432,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28554.359883808807,\"onlineMoneyMade\":1554677.384813305,\"onlineRunningTime\":3322.4099999991695,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|22\\\"]\",\"title\":\"cell.js run4theh111z|22\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|23\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[1110225.7508389065,426,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28470.46899909692,\"onlineMoneyMade\":1110225.7508389065,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|23\\\"]\",\"title\":\"cell.js run4theh111z|23\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|24\"],\"dataMap\":{\"max-hardware\":[0,0,174,26],\"foodnstuff\":[2009178.7945302026,422,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28397.06447497402,\"onlineMoneyMade\":2009178.7945302026,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|24\\\"]\",\"title\":\"cell.js run4theh111z|24\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|25\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[1040659.4581795555,422,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28386.578114385033,\"onlineMoneyMade\":1040659.4581795555,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|25\\\"]\",\"title\":\"cell.js run4theh111z|25\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|26\"],\"dataMap\":{\"max-hardware\":[0,0,172,28],\"foodnstuff\":[1962150.9987418267,422,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28397.06447497402,\"onlineMoneyMade\":1962150.9987418267,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|26\\\"]\",\"title\":\"cell.js run4theh111z|26\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|27\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[2136354.3801483265,434,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28596.30532616475,\"onlineMoneyMade\":2136354.3801483265,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|27\\\"]\",\"title\":\"cell.js run4theh111z|27\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|28\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[2187604.560809273,434,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28596.30532616475,\"onlineMoneyMade\":2187604.560809273,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|28\\\"]\",\"title\":\"cell.js run4theh111z|28\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|29\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[1574679.5012739673,424,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28386.578114385033,\"onlineMoneyMade\":1574679.5012739673,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|29\\\"]\",\"title\":\"cell.js run4theh111z|29\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|30\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[1455861.932411047,430,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28512.414441452864,\"onlineMoneyMade\":1455861.932411047,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|30\\\"]\",\"title\":\"cell.js run4theh111z|30\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|31\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[1421813.7169937333,430,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28512.414441452864,\"onlineMoneyMade\":1421813.7169937333,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|31\\\"]\",\"title\":\"cell.js run4theh111z|31\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|32\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[1753726.7524122826,432,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28554.359883808807,\"onlineMoneyMade\":1753726.7524122826,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|32\\\"]\",\"title\":\"cell.js run4theh111z|32\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|33\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1650898.1098293874,424,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28439.009917329964,\"onlineMoneyMade\":1650898.1098293874,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|33\\\"]\",\"title\":\"cell.js run4theh111z|33\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|34\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1612337.281308301,424,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28439.009917329964,\"onlineMoneyMade\":1612337.281308301,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|34\\\"]\",\"title\":\"cell.js run4theh111z|34\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|35\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1203440.986958074,428,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28522.90080204185,\"onlineMoneyMade\":1203440.986958074,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|35\\\"]\",\"title\":\"cell.js run4theh111z|35\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|36\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1175359.8364124103,428,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28522.90080204185,\"onlineMoneyMade\":1175359.8364124103,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|36\\\"]\",\"title\":\"cell.js run4theh111z|36\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|37\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[1655007.014250284,434,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28596.30532616475,\"onlineMoneyMade\":1655007.014250284,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|37\\\"]\",\"title\":\"cell.js run4theh111z|37\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|38\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[2760324.4801322976,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28638.250768520695,\"onlineMoneyMade\":2760324.4801322976,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|38\\\"]\",\"title\":\"cell.js run4theh111z|38\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|39\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1222943.553784097,428,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28522.90080204185,\"onlineMoneyMade\":1222943.553784097,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|39\\\"]\",\"title\":\"cell.js run4theh111z|39\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|40\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1194410.882544793,428,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28522.90080204185,\"onlineMoneyMade\":1194410.882544793,\"onlineRunningTime\":3322.2099999991697,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|40\\\"]\",\"title\":\"cell.js run4theh111z|40\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|41\"],\"dataMap\":{\"max-hardware\":[0,0,170,30],\"foodnstuff\":[1232194.2611351716,428,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28522.90080204185,\"onlineMoneyMade\":1232194.2611351716,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|41\\\"]\",\"title\":\"cell.js run4theh111z|41\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|42\"],\"dataMap\":{\"max-hardware\":[0,0,168,30],\"foodnstuff\":[1712759.0654278982,432,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28554.359883808807,\"onlineMoneyMade\":1712759.0654278982,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|42\\\"]\",\"title\":\"cell.js run4theh111z|42\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|43\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[280992.508863011,424,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28585.818965575767,\"onlineMoneyMade\":280992.508863011,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|43\\\"]\",\"title\":\"cell.js run4theh111z|43\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|44\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[2570942.4413579223,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":2570942.4413579223,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|44\\\"]\",\"title\":\"cell.js run4theh111z|44\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|45\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[2510752.4542051028,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":2510752.4542051028,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|45\\\"]\",\"title\":\"cell.js run4theh111z|45\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|46\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[2695693.7967094197,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":2695693.7967094197,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|46\\\"]\",\"title\":\"cell.js run4theh111z|46\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|47\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[2352854.961245033,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":2352854.961245033,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|47\\\"]\",\"title\":\"cell.js run4theh111z|47\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|48\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[2297763.767527944,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":2297763.767527944,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|48\\\"]\",\"title\":\"cell.js run4theh111z|48\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|49\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[1820482.4448716897,432,684,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28753.60073499954,\"onlineMoneyMade\":1820482.4448716897,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|49\\\"]\",\"title\":\"cell.js run4theh111z|49\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|50\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[2632577.962658826,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":2632577.962658826,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|50\\\"]\",\"title\":\"cell.js run4theh111z|50\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|51\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[1149218.1067957205,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":1149218.1067957205,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|51\\\"]\",\"title\":\"cell.js run4theh111z|51\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|52\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[1122316.8469914636,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":1122316.8469914636,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|52\\\"]\",\"title\":\"cell.js run4theh111z|52\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|53\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[838959.1934398945,432,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28711.655292643598,\"onlineMoneyMade\":838959.1934398945,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|53\\\"]\",\"title\":\"cell.js run4theh111z|53\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|54\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[1204220.9089259682,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":1204220.9089259682,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|54\\\"]\",\"title\":\"cell.js run4theh111z|54\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|55\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[1176763.9761320087,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":1176763.9761320087,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|55\\\"]\",\"title\":\"cell.js run4theh111z|55\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|56\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[753891.5226989889,432,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28711.655292643598,\"onlineMoneyMade\":753891.5226989889,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|56\\\"]\",\"title\":\"cell.js run4theh111z|56\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|57\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[545882.9998307892,430,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28669.709850287654,\"onlineMoneyMade\":545882.9998307892,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|57\\\"]\",\"title\":\"cell.js run4theh111z|57\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|58\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[1096046.4084171238,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":1096046.4084171238,\"onlineRunningTime\":3322.00999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|58\\\"]\",\"title\":\"cell.js run4theh111z|58\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|59\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[1262613.6165520523,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":1262613.6165520523,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|59\\\"]\",\"title\":\"cell.js run4theh111z|59\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|60\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[1233071.0498297955,436,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28795.546177355485,\"onlineMoneyMade\":1233071.0498297955,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|60\\\"]\",\"title\":\"cell.js run4theh111z|60\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|61\"],\"dataMap\":{\"max-hardware\":[0,0,204,0],\"foodnstuff\":[728894.3075872367,420,682,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":28459.982638507936,\"onlineMoneyMade\":728894.3075872367,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|61\\\"]\",\"title\":\"cell.js run4theh111z|61\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|62\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|62\\\"]\",\"title\":\"cell.js run4theh111z|62\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|63\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|63\\\"]\",\"title\":\"cell.js run4theh111z|63\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|64\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|64\\\"]\",\"title\":\"cell.js run4theh111z|64\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|65\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|65\\\"]\",\"title\":\"cell.js run4theh111z|65\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|66\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|66\\\"]\",\"title\":\"cell.js run4theh111z|66\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|67\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|67\\\"]\",\"title\":\"cell.js run4theh111z|67\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|68\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|68\\\"]\",\"title\":\"cell.js run4theh111z|68\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|69\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|69\\\"]\",\"title\":\"cell.js run4theh111z|69\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|70\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|70\\\"]\",\"title\":\"cell.js run4theh111z|70\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|71\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|71\\\"]\",\"title\":\"cell.js run4theh111z|71\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|72\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|72\\\"]\",\"title\":\"cell.js run4theh111z|72\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|73\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|73\\\"]\",\"title\":\"cell.js run4theh111z|73\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|74\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|74\\\"]\",\"title\":\"cell.js run4theh111z|74\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|75\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|75\\\"]\",\"title\":\"cell.js run4theh111z|75\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|76\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.80999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|76\\\"]\",\"title\":\"cell.js run4theh111z|76\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|77\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|77\\\"]\",\"title\":\"cell.js run4theh111z|77\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|78\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|78\\\"]\",\"title\":\"cell.js run4theh111z|78\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|79\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|79\\\"]\",\"title\":\"cell.js run4theh111z|79\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|80\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|80\\\"]\",\"title\":\"cell.js run4theh111z|80\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|81\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|81\\\"]\",\"title\":\"cell.js run4theh111z|81\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|82\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|82\\\"]\",\"title\":\"cell.js run4theh111z|82\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|83\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|83\\\"]\",\"title\":\"cell.js run4theh111z|83\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|84\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|84\\\"]\",\"title\":\"cell.js run4theh111z|84\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|85\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|85\\\"]\",\"title\":\"cell.js run4theh111z|85\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|86\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|86\\\"]\",\"title\":\"cell.js run4theh111z|86\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|87\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|87\\\"]\",\"title\":\"cell.js run4theh111z|87\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|88\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|88\\\"]\",\"title\":\"cell.js run4theh111z|88\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|89\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|89\\\"]\",\"title\":\"cell.js run4theh111z|89\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|90\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|90\\\"]\",\"title\":\"cell.js run4theh111z|90\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|91\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|91\\\"]\",\"title\":\"cell.js run4theh111z|91\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|92\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|92\\\"]\",\"title\":\"cell.js run4theh111z|92\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|93\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|93\\\"]\",\"title\":\"cell.js run4theh111z|93\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|94\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.60999999917,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|94\\\"]\",\"title\":\"cell.js run4theh111z|94\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|95\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|95\\\"]\",\"title\":\"cell.js run4theh111z|95\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|96\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|96\\\"]\",\"title\":\"cell.js run4theh111z|96\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|97\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|97\\\"]\",\"title\":\"cell.js run4theh111z|97\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|98\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|98\\\"]\",\"title\":\"cell.js run4theh111z|98\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|99\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|99\\\"]\",\"title\":\"cell.js run4theh111z|99\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|100\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|100\\\"]\",\"title\":\"cell.js run4theh111z|100\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|101\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|101\\\"]\",\"title\":\"cell.js run4theh111z|101\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|102\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|102\\\"]\",\"title\":\"cell.js run4theh111z|102\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|103\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|103\\\"]\",\"title\":\"cell.js run4theh111z|103\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|104\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|104\\\"]\",\"title\":\"cell.js run4theh111z|104\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|105\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|105\\\"]\",\"title\":\"cell.js run4theh111z|105\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|106\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|106\\\"]\",\"title\":\"cell.js run4theh111z|106\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|107\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|107\\\"]\",\"title\":\"cell.js run4theh111z|107\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|108\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|108\\\"]\",\"title\":\"cell.js run4theh111z|108\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|109\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|109\\\"]\",\"title\":\"cell.js run4theh111z|109\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|110\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|110\\\"]\",\"title\":\"cell.js run4theh111z|110\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|111\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|111\\\"]\",\"title\":\"cell.js run4theh111z|111\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|112\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|112\\\"]\",\"title\":\"cell.js run4theh111z|112\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|113\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.4099999991704,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|113\\\"]\",\"title\":\"cell.js run4theh111z|113\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|114\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|114\\\"]\",\"title\":\"cell.js run4theh111z|114\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|115\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|115\\\"]\",\"title\":\"cell.js run4theh111z|115\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|116\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|116\\\"]\",\"title\":\"cell.js run4theh111z|116\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|117\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|117\\\"]\",\"title\":\"cell.js run4theh111z|117\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|118\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|118\\\"]\",\"title\":\"cell.js run4theh111z|118\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|119\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|119\\\"]\",\"title\":\"cell.js run4theh111z|119\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|120\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|120\\\"]\",\"title\":\"cell.js run4theh111z|120\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|121\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|121\\\"]\",\"title\":\"cell.js run4theh111z|121\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|122\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|122\\\"]\",\"title\":\"cell.js run4theh111z|122\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|123\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|123\\\"]\",\"title\":\"cell.js run4theh111z|123\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|124\"],\"dataMap\":{\"max-hardware\":[0,0,202,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11220.405830215179,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|124\\\"]\",\"title\":\"cell.js run4theh111z|124\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|125\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|125\\\"]\",\"title\":\"cell.js run4theh111z|125\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z|126\"],\"dataMap\":{\"max-hardware\":[0,0,204,226]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11272.83763316011,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\"run4theh111z\",\"scriptKey\":\"cell.js*[\\\"run4theh111z|126\\\"]\",\"title\":\"cell.js run4theh111z|126\",\"threads\":2,\"temporary\":false}}]}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"32.0.2.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"I.I.I.I\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"I.I.I.I\"}}]]},\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":358,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|0\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[891318.1345941171,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":891318.1345941171,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|0\\\"]\",\"title\":\"cell.js I.I.I.I|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|1\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[880935.0903239083,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":880935.0903239083,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|1\\\"]\",\"title\":\"cell.js I.I.I.I|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|2\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1494108.580590209,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1494108.580590209,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|2\\\"]\",\"title\":\"cell.js I.I.I.I|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|3\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1590853.414185352,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1590853.414185352,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|3\\\"]\",\"title\":\"cell.js I.I.I.I|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|4\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[922049.096903265,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":922049.096903265,\"onlineRunningTime\":3326.409999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|4\\\"]\",\"title\":\"cell.js I.I.I.I|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|5\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[911307.726831553,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":911307.726831553,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|5\\\"]\",\"title\":\"cell.js I.I.I.I|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|6\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[900691.7078827497,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":900691.7078827497,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|6\\\"]\",\"title\":\"cell.js I.I.I.I|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|7\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[890199.574658654,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":890199.574658654,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|7\\\"]\",\"title\":\"cell.js I.I.I.I|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|8\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1565897.6936384414,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1565897.6936384414,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|8\\\"]\",\"title\":\"cell.js I.I.I.I|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|9\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1547687.6592068376,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1547687.6592068376,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|9\\\"]\",\"title\":\"cell.js I.I.I.I|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|10\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1529617.4426449188,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1529617.4426449188,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|10\\\"]\",\"title\":\"cell.js I.I.I.I|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|11\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1511758.5751817375,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1511758.5751817375,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|11\\\"]\",\"title\":\"cell.js I.I.I.I|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|12\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1454902.8523479674,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1454902.8523479674,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|12\\\"]\",\"title\":\"cell.js I.I.I.I|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|13\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1439915.7946778617,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1439915.7946778617,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|13\\\"]\",\"title\":\"cell.js I.I.I.I|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|14\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1423107.9217406053,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1423107.9217406053,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|14\\\"]\",\"title\":\"cell.js I.I.I.I|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|15\"],\"dataMap\":{\"foodnstuff\":[0,0,0,256],\"sigma-cosmetics\":[1472088.8675426466,253,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17092.76776004713,\"onlineMoneyMade\":1472088.8675426466,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|15\\\"]\",\"title\":\"cell.js I.I.I.I|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|16\"],\"dataMap\":{\"foodnstuff\":[0,0,282,28],\"sigma-cosmetics\":[2650845.0351708974,256,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18288.212867191523,\"onlineMoneyMade\":2650845.0351708974,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|16\\\"]\",\"title\":\"cell.js I.I.I.I|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|17\"],\"dataMap\":{\"foodnstuff\":[0,0,282,28],\"sigma-cosmetics\":[2619911.555914242,256,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18288.212867191523,\"onlineMoneyMade\":2619911.555914242,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|17\\\"]\",\"title\":\"cell.js I.I.I.I|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|18\"],\"dataMap\":{\"foodnstuff\":[0,0,282,28],\"sigma-cosmetics\":[2589339.6796006034,256,306,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18288.212867191523,\"onlineMoneyMade\":2589339.6796006034,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|18\\\"]\",\"title\":\"cell.js I.I.I.I|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|19\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|19\\\"]\",\"title\":\"cell.js I.I.I.I|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|20\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|20\\\"]\",\"title\":\"cell.js I.I.I.I|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|21\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|21\\\"]\",\"title\":\"cell.js I.I.I.I|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|22\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.209999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|22\\\"]\",\"title\":\"cell.js I.I.I.I|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|23\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|23\\\"]\",\"title\":\"cell.js I.I.I.I|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|24\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|24\\\"]\",\"title\":\"cell.js I.I.I.I|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|25\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|25\\\"]\",\"title\":\"cell.js I.I.I.I|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|26\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|26\\\"]\",\"title\":\"cell.js I.I.I.I|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|27\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|27\\\"]\",\"title\":\"cell.js I.I.I.I|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|28\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|28\\\"]\",\"title\":\"cell.js I.I.I.I|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|29\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|29\\\"]\",\"title\":\"cell.js I.I.I.I|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|30\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|30\\\"]\",\"title\":\"cell.js I.I.I.I|30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|31\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|31\\\"]\",\"title\":\"cell.js I.I.I.I|31\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|32\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|32\\\"]\",\"title\":\"cell.js I.I.I.I|32\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|33\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|33\\\"]\",\"title\":\"cell.js I.I.I.I|33\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|34\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|34\\\"]\",\"title\":\"cell.js I.I.I.I|34\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|35\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|35\\\"]\",\"title\":\"cell.js I.I.I.I|35\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|36\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|36\\\"]\",\"title\":\"cell.js I.I.I.I|36\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|37\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|37\\\"]\",\"title\":\"cell.js I.I.I.I|37\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|38\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3326.009999999166,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|38\\\"]\",\"title\":\"cell.js I.I.I.I|38\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|39\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|39\\\"]\",\"title\":\"cell.js I.I.I.I|39\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|40\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|40\\\"]\",\"title\":\"cell.js I.I.I.I|40\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|41\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|41\\\"]\",\"title\":\"cell.js I.I.I.I|41\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|42\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|42\\\"]\",\"title\":\"cell.js I.I.I.I|42\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|43\"],\"dataMap\":{\"foodnstuff\":[0,0,282,361]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13485.459717435973,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|43\\\"]\",\"title\":\"cell.js I.I.I.I|43\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|44\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|44\\\"]\",\"title\":\"cell.js I.I.I.I|44\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|45\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|45\\\"]\",\"title\":\"cell.js I.I.I.I|45\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|46\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|46\\\"]\",\"title\":\"cell.js I.I.I.I|46\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|47\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|47\\\"]\",\"title\":\"cell.js I.I.I.I|47\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|48\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|48\\\"]\",\"title\":\"cell.js I.I.I.I|48\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|49\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|49\\\"]\",\"title\":\"cell.js I.I.I.I|49\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|50\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|50\\\"]\",\"title\":\"cell.js I.I.I.I|50\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|51\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|51\\\"]\",\"title\":\"cell.js I.I.I.I|51\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|52\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|52\\\"]\",\"title\":\"cell.js I.I.I.I|52\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|53\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|53\\\"]\",\"title\":\"cell.js I.I.I.I|53\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|54\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|54\\\"]\",\"title\":\"cell.js I.I.I.I|54\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|55\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|55\\\"]\",\"title\":\"cell.js I.I.I.I|55\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|56\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.8099999991664,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|56\\\"]\",\"title\":\"cell.js I.I.I.I|56\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|57\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|57\\\"]\",\"title\":\"cell.js I.I.I.I|57\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|58\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|58\\\"]\",\"title\":\"cell.js I.I.I.I|58\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|59\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|59\\\"]\",\"title\":\"cell.js I.I.I.I|59\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|60\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|60\\\"]\",\"title\":\"cell.js I.I.I.I|60\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|61\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|61\\\"]\",\"title\":\"cell.js I.I.I.I|61\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I|62\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.6099999991666,\"ramUsage\":2,\"server\":\"I.I.I.I\",\"scriptKey\":\"cell.js*[\\\"I.I.I.I|62\\\"]\",\"title\":\"cell.js I.I.I.I|62\",\"threads\":1,\"temporary\":false}}]}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-243052.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":480074422,\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"62.6.9.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"avmnite-02h\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"avmnite-02h\"}}]]},\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":203,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|0\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|0\\\"]\",\"title\":\"cell.js avmnite-02h|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|1\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|1\\\"]\",\"title\":\"cell.js avmnite-02h|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|2\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|2\\\"]\",\"title\":\"cell.js avmnite-02h|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|3\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|3\\\"]\",\"title\":\"cell.js avmnite-02h|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|4\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|4\\\"]\",\"title\":\"cell.js avmnite-02h|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|5\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|5\\\"]\",\"title\":\"cell.js avmnite-02h|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|6\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|6\\\"]\",\"title\":\"cell.js avmnite-02h|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|7\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|7\\\"]\",\"title\":\"cell.js avmnite-02h|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|8\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.209999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|8\\\"]\",\"title\":\"cell.js avmnite-02h|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|9\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|9\\\"]\",\"title\":\"cell.js avmnite-02h|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|10\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|10\\\"]\",\"title\":\"cell.js avmnite-02h|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|11\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|11\\\"]\",\"title\":\"cell.js avmnite-02h|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|12\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|12\\\"]\",\"title\":\"cell.js avmnite-02h|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|13\"],\"dataMap\":{\"foodnstuff\":[0,0,317,333]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13632.268765681776,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|13\\\"]\",\"title\":\"cell.js avmnite-02h|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|14\"],\"dataMap\":{\"foodnstuff\":[0,0,657,59]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15016.468363427917,\"onlineMoneyMade\":0,\"onlineRunningTime\":3325.009999999167,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"scriptKey\":\"cell.js*[\\\"avmnite-02h|14\\\"]\",\"title\":\"cell.js avmnite-02h|14\",\"threads\":1,\"temporary\":false}}]}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-352500-BitRunners.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[1],[8,4],[6,7,5],[1,1,1,8],[3,5,2,7,5]],\"reward\":{\"type\":0,\"name\":\"BitRunners\"}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"87.3.7.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\".\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\".\"}}]]},\"serversOnNetwork\":[\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":4,\"requiredHackingSkill\":541,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\".|0\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\".\",\"scriptKey\":\"cell.js*[\\\".|0\\\"]\",\"title\":\"cell.js .|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\".|1\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\".\",\"scriptKey\":\"cell.js*[\\\".|1\\\"]\",\"title\":\"cell.js .|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\".|2\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\".\",\"scriptKey\":\"cell.js*[\\\".|2\\\"]\",\"title\":\"cell.js .|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\".|3\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.2099999991706,\"ramUsage\":2,\"server\":\".\",\"scriptKey\":\"cell.js*[\\\".|3\\\"]\",\"title\":\"cell.js .|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\".|4\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\".\",\"scriptKey\":\"cell.js*[\\\".|4\\\"]\",\"title\":\"cell.js .|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\".|5\"],\"dataMap\":{\"max-hardware\":[0,0,102,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5636.418816580055,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\".\",\"scriptKey\":\"cell.js*[\\\".|5\\\"]\",\"title\":\"cell.js .|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\".|6\"],\"dataMap\":{\"max-hardware\":[0,0,101,113]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5610.202915107589,\"onlineMoneyMade\":0,\"onlineRunningTime\":3321.0099999991708,\"ramUsage\":2,\"server\":\".\",\"scriptKey\":\"cell.js*[\\\".|6\\\"]\",\"title\":\"cell.js .|6\",\"threads\":1,\"temporary\":false}}]}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"98.9.6.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"CSEC\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"CSEC\"}}]]},\"serversOnNetwork\":[\"n00dles\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":54,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC|0\"],\"dataMap\":{\"max-hardware\":[8823245.385548886,50,226,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7235.588806400463,\"onlineMoneyMade\":8823245.385548886,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"CSEC\",\"scriptKey\":\"cell.js*[\\\"CSEC|0\\\"]\",\"title\":\"cell.js CSEC|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC|1\"],\"dataMap\":{\"max-hardware\":[7407406.433542865,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":7407406.433542865,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"CSEC\",\"scriptKey\":\"cell.js*[\\\"CSEC|1\\\"]\",\"title\":\"cell.js CSEC|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC|2\"],\"dataMap\":{\"max-hardware\":[7329451.659867786,49,225,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":7183.157003455532,\"onlineMoneyMade\":7329451.659867786,\"onlineRunningTime\":3320.4099999991713,\"ramUsage\":2,\"server\":\"CSEC\",\"scriptKey\":\"cell.js*[\\\"CSEC|2\\\"]\",\"title\":\"cell.js CSEC|2\",\"threads\":1,\"temporary\":false}}]}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-117176.cct\",\"type\":\"Total Ways to Sum\",\"data\":70,\"reward\":{\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"2.0.0.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"The-Cave\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"The-Cave\"}}]]},\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":1,\"runningScripts\":[]}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"9.1.9.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[]},\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1,\"runningScripts\":[]}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"16.0.9.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"darkweb\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"darkweb\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[]}},\"vps-absol\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-absol\",\"httpPortOpen\":false,\"ip\":\"76.6.7.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-absol\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-absol\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|0\"],\"dataMap\":{\"sigma-cosmetics\":[3689092.397596026,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3689092.397596026,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"vps-absol\",\"scriptKey\":\"cell.js*[\\\"vps-absol|0\\\"]\",\"title\":\"cell.js vps-absol|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|1\"],\"dataMap\":{\"sigma-cosmetics\":[3646101.712380236,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3646101.712380236,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"vps-absol\",\"scriptKey\":\"cell.js*[\\\"vps-absol|1\\\"]\",\"title\":\"cell.js vps-absol|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|2\"],\"dataMap\":{\"sigma-cosmetics\":[3603619.1567306165,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3603619.1567306165,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"vps-absol\",\"scriptKey\":\"cell.js*[\\\"vps-absol|2\\\"]\",\"title\":\"cell.js vps-absol|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|3\"],\"dataMap\":{\"sigma-cosmetics\":[4275557.959860197,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4275557.959860197,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"vps-absol\",\"scriptKey\":\"cell.js*[\\\"vps-absol|3\\\"]\",\"title\":\"cell.js vps-absol|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|4\"],\"dataMap\":{\"sigma-cosmetics\":[4225687.692323556,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4225687.692323556,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"vps-absol\",\"scriptKey\":\"cell.js*[\\\"vps-absol|4\\\"]\",\"title\":\"cell.js vps-absol|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|5\"],\"dataMap\":{\"sigma-cosmetics\":[4176435.0619097846,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4176435.0619097846,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"vps-absol\",\"scriptKey\":\"cell.js*[\\\"vps-absol|5\\\"]\",\"title\":\"cell.js vps-absol|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|6\"],\"dataMap\":{\"sigma-cosmetics\":[4127779.287286689,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4127779.287286689,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"vps-absol\",\"scriptKey\":\"cell.js*[\\\"vps-absol|6\\\"]\",\"title\":\"cell.js vps-absol|6\",\"threads\":1,\"temporary\":false}}]}},\"vps-arcanine\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-arcanine\",\"httpPortOpen\":false,\"ip\":\"99.6.1.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-arcanine\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-arcanine\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arcanine|0\"],\"dataMap\":{\"sigma-cosmetics\":[3821087.9252995304,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3821087.9252995304,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-arcanine\",\"scriptKey\":\"cell.js*[\\\"vps-arcanine|0\\\"]\",\"title\":\"cell.js vps-arcanine|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arcanine|1\"],\"dataMap\":{\"sigma-cosmetics\":[3776631.2859870307,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3776631.2859870307,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-arcanine\",\"scriptKey\":\"cell.js*[\\\"vps-arcanine|1\\\"]\",\"title\":\"cell.js vps-arcanine|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arcanine|2\"],\"dataMap\":{\"sigma-cosmetics\":[3732585.432703966,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3732585.432703966,\"onlineRunningTime\":3327.209999999165,\"ramUsage\":2,\"server\":\"vps-arcanine\",\"scriptKey\":\"cell.js*[\\\"vps-arcanine|2\\\"]\",\"title\":\"cell.js vps-arcanine|2\",\"threads\":1,\"temporary\":false}}]}},\"vps-buneary\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-buneary\",\"httpPortOpen\":false,\"ip\":\"98.9.7.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-buneary\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-buneary\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|0\"],\"dataMap\":{\"sigma-cosmetics\":[1282530.750847898,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1282530.750847898,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|0\\\"]\",\"title\":\"cell.js vps-buneary|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|1\"],\"dataMap\":{\"sigma-cosmetics\":[1267667.0617599501,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1267667.0617599501,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|1\\\"]\",\"title\":\"cell.js vps-buneary|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|2\"],\"dataMap\":{\"sigma-cosmetics\":[1252879.2458586516,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1252879.2458586516,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|2\\\"]\",\"title\":\"cell.js vps-buneary|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|3\"],\"dataMap\":{\"sigma-cosmetics\":[1238307.6352238418,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1238307.6352238418,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|3\\\"]\",\"title\":\"cell.js vps-buneary|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|4\"],\"dataMap\":{\"sigma-cosmetics\":[1223955.8709569564,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1223955.8709569564,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|4\\\"]\",\"title\":\"cell.js vps-buneary|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|5\"],\"dataMap\":{\"sigma-cosmetics\":[1209725.2482343686,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1209725.2482343686,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|5\\\"]\",\"title\":\"cell.js vps-buneary|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|6\"],\"dataMap\":{\"sigma-cosmetics\":[6886709.486237248,399,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20049.921446141158,\"onlineMoneyMade\":6886709.486237248,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|6\\\"]\",\"title\":\"cell.js vps-buneary|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|7\"],\"dataMap\":{\"sigma-cosmetics\":[6806351.66136539,399,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20049.921446141158,\"onlineMoneyMade\":6806351.66136539,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|7\\\"]\",\"title\":\"cell.js vps-buneary|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|8\"],\"dataMap\":{\"sigma-cosmetics\":[6726931.150092115,399,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20049.921446141158,\"onlineMoneyMade\":6726931.150092115,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|8\\\"]\",\"title\":\"cell.js vps-buneary|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|9\"],\"dataMap\":{\"sigma-cosmetics\":[6648442.553258908,399,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20049.921446141158,\"onlineMoneyMade\":6648442.553258908,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|9\\\"]\",\"title\":\"cell.js vps-buneary|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|10\"],\"dataMap\":{\"sigma-cosmetics\":[6321647.661901434,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":6321647.661901434,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|10\\\"]\",\"title\":\"cell.js vps-buneary|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|11\"],\"dataMap\":{\"sigma-cosmetics\":[6247874.319402414,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":6247874.319402414,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|11\\\"]\",\"title\":\"cell.js vps-buneary|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|12\"],\"dataMap\":{\"sigma-cosmetics\":[6175048.803716349,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":6175048.803716349,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|12\\\"]\",\"title\":\"cell.js vps-buneary|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|13\"],\"dataMap\":{\"sigma-cosmetics\":[6162921.891995427,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":6162921.891995427,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|13\\\"]\",\"title\":\"cell.js vps-buneary|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|14\"],\"dataMap\":{\"sigma-cosmetics\":[6121739.900958218,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":6121739.900958218,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|14\\\"]\",\"title\":\"cell.js vps-buneary|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|15\"],\"dataMap\":{\"sigma-cosmetics\":[5990427.850632429,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":5990427.850632429,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|15\\\"]\",\"title\":\"cell.js vps-buneary|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|16\"],\"dataMap\":{\"sigma-cosmetics\":[5266987.037169713,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":5266987.037169713,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|16\\\"]\",\"title\":\"cell.js vps-buneary|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|17\"],\"dataMap\":{\"sigma-cosmetics\":[4737783.015721456,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4737783.015721456,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|17\\\"]\",\"title\":\"cell.js vps-buneary|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|18\"],\"dataMap\":{\"sigma-cosmetics\":[4682549.970483603,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4682549.970483603,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|18\\\"]\",\"title\":\"cell.js vps-buneary|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|19\"],\"dataMap\":{\"sigma-cosmetics\":[5137187.978603664,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":5137187.978603664,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|19\\\"]\",\"title\":\"cell.js vps-buneary|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|20\"],\"dataMap\":{\"sigma-cosmetics\":[5077259.244926491,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":5077259.244926491,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|20\\\"]\",\"title\":\"cell.js vps-buneary|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|21\"],\"dataMap\":{\"sigma-cosmetics\":[4776843.245025959,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":4776843.245025959,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|21\\\"]\",\"title\":\"cell.js vps-buneary|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|22\"],\"dataMap\":{\"sigma-cosmetics\":[4721157.554019617,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":4721157.554019617,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|22\\\"]\",\"title\":\"cell.js vps-buneary|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|23\"],\"dataMap\":{\"sigma-cosmetics\":[4666116.783724135,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":4666116.783724135,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|23\\\"]\",\"title\":\"cell.js vps-buneary|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|24\"],\"dataMap\":{\"sigma-cosmetics\":[4611725.980138343,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4611725.980138343,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|24\\\"]\",\"title\":\"cell.js vps-buneary|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|25\"],\"dataMap\":{\"sigma-cosmetics\":[4557969.6397680305,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4557969.6397680305,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|25\\\"]\",\"title\":\"cell.js vps-buneary|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|26\"],\"dataMap\":{\"sigma-cosmetics\":[4504835.797239341,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4504835.797239341,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|26\\\"]\",\"title\":\"cell.js vps-buneary|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|27\"],\"dataMap\":{\"sigma-cosmetics\":[4452321.205578737,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4452321.205578737,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|27\\\"]\",\"title\":\"cell.js vps-buneary|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|28\"],\"dataMap\":{\"sigma-cosmetics\":[4400429.630588415,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4400429.630588415,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|28\\\"]\",\"title\":\"cell.js vps-buneary|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|29\"],\"dataMap\":{\"sigma-cosmetics\":[4349137.989641755,398,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20028.948724963186,\"onlineMoneyMade\":4349137.989641755,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|29\\\"]\",\"title\":\"cell.js vps-buneary|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|30\"],\"dataMap\":{\"sigma-cosmetics\":[3866139.496835964,397,557,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":20007.976003785214,\"onlineMoneyMade\":3866139.496835964,\"onlineRunningTime\":3327.409999999165,\"ramUsage\":2,\"server\":\"vps-buneary\",\"scriptKey\":\"cell.js*[\\\"vps-buneary|30\\\"]\",\"title\":\"cell.js vps-buneary|30\",\"threads\":1,\"temporary\":false}}]}},\"vps-charmander\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-charmander\",\"httpPortOpen\":false,\"ip\":\"45.7.7.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-charmander\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-charmander\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-charmander|0\"],\"dataMap\":{\"sigma-cosmetics\":[1328339.4726867948,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1328339.4726867948,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-charmander\",\"scriptKey\":\"cell.js*[\\\"vps-charmander|0\\\"]\",\"title\":\"cell.js vps-charmander|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-charmander|1\"],\"dataMap\":{\"sigma-cosmetics\":[1312890.5907942783,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1312890.5907942783,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-charmander\",\"scriptKey\":\"cell.js*[\\\"vps-charmander|1\\\"]\",\"title\":\"cell.js vps-charmander|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-charmander|2\"],\"dataMap\":{\"sigma-cosmetics\":[1297621.7380021662,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1297621.7380021662,\"onlineRunningTime\":3327.6099999991648,\"ramUsage\":2,\"server\":\"vps-charmander\",\"scriptKey\":\"cell.js*[\\\"vps-charmander|2\\\"]\",\"title\":\"cell.js vps-charmander|2\",\"threads\":1,\"temporary\":false}}]}},\"vps-clefairy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-clefairy\",\"httpPortOpen\":false,\"ip\":\"99.4.8.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-clefairy\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-clefairy\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|0\"],\"dataMap\":{\"sigma-cosmetics\":[1876477.5847153086,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1876477.5847153086,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|0\\\"]\",\"title\":\"cell.js vps-clefairy|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|1\"],\"dataMap\":{\"sigma-cosmetics\":[1854579.6383166742,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1854579.6383166742,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|1\\\"]\",\"title\":\"cell.js vps-clefairy|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|2\"],\"dataMap\":{\"sigma-cosmetics\":[1833004.2995611986,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1833004.2995611986,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|2\\\"]\",\"title\":\"cell.js vps-clefairy|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|3\"],\"dataMap\":{\"sigma-cosmetics\":[1926818.3854489916,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1926818.3854489916,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|3\\\"]\",\"title\":\"cell.js vps-clefairy|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|4\"],\"dataMap\":{\"sigma-cosmetics\":[1904474.660341853,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1904474.660341853,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|4\\\"]\",\"title\":\"cell.js vps-clefairy|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|5\"],\"dataMap\":{\"sigma-cosmetics\":[1882314.0179299505,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1882314.0179299505,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|5\\\"]\",\"title\":\"cell.js vps-clefairy|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|6\"],\"dataMap\":{\"sigma-cosmetics\":[1860349.140576543,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1860349.140576543,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|6\\\"]\",\"title\":\"cell.js vps-clefairy|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|7\"],\"dataMap\":{\"sigma-cosmetics\":[1838714.4699902653,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1838714.4699902653,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|7\\\"]\",\"title\":\"cell.js vps-clefairy|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|8\"],\"dataMap\":{\"sigma-cosmetics\":[1817394.481241903,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1817394.481241903,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|8\\\"]\",\"title\":\"cell.js vps-clefairy|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|9\"],\"dataMap\":{\"sigma-cosmetics\":[1796252.013373219,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1796252.013373219,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|9\\\"]\",\"title\":\"cell.js vps-clefairy|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|10\"],\"dataMap\":{\"sigma-cosmetics\":[1775305.1391209676,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1775305.1391209676,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|10\\\"]\",\"title\":\"cell.js vps-clefairy|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|11\"],\"dataMap\":{\"sigma-cosmetics\":[1754724.274074019,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1754724.274074019,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|11\\\"]\",\"title\":\"cell.js vps-clefairy|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|12\"],\"dataMap\":{\"sigma-cosmetics\":[1554156.8755319132,143,641,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1554156.8755319132,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|12\\\"]\",\"title\":\"cell.js vps-clefairy|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|13\"],\"dataMap\":{\"sigma-cosmetics\":[1536135.7126170588,143,641,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1536135.7126170588,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|13\\\"]\",\"title\":\"cell.js vps-clefairy|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|14\"],\"dataMap\":{\"sigma-cosmetics\":[1518206.7724687816,143,641,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1518206.7724687816,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|14\\\"]\",\"title\":\"cell.js vps-clefairy|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|15\"],\"dataMap\":{\"sigma-cosmetics\":[1500546.528509812,143,641,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1500546.528509812,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|15\\\"]\",\"title\":\"cell.js vps-clefairy|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|16\"],\"dataMap\":{\"sigma-cosmetics\":[1483094.574153289,143,641,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1483094.574153289,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|16\\\"]\",\"title\":\"cell.js vps-clefairy|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|17\"],\"dataMap\":{\"sigma-cosmetics\":[1465836.1922752948,143,641,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1465836.1922752948,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|17\\\"]\",\"title\":\"cell.js vps-clefairy|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|18\"],\"dataMap\":{\"sigma-cosmetics\":[1616751.3641659936,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1616751.3641659936,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|18\\\"]\",\"title\":\"cell.js vps-clefairy|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|19\"],\"dataMap\":{\"sigma-cosmetics\":[1597891.334408183,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1597891.334408183,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|19\\\"]\",\"title\":\"cell.js vps-clefairy|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|20\"],\"dataMap\":{\"sigma-cosmetics\":[1579369.3086709653,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1579369.3086709653,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|20\\\"]\",\"title\":\"cell.js vps-clefairy|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|21\"],\"dataMap\":{\"sigma-cosmetics\":[1562150.4309715014,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1562150.4309715014,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|21\\\"]\",\"title\":\"cell.js vps-clefairy|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|22\"],\"dataMap\":{\"sigma-cosmetics\":[1544023.8937673243,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1544023.8937673243,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|22\\\"]\",\"title\":\"cell.js vps-clefairy|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|23\"],\"dataMap\":{\"sigma-cosmetics\":[1526002.1122953435,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1526002.1122953435,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|23\\\"]\",\"title\":\"cell.js vps-clefairy|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|24\"],\"dataMap\":{\"sigma-cosmetics\":[1508238.7568392057,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1508238.7568392057,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|24\\\"]\",\"title\":\"cell.js vps-clefairy|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|25\"],\"dataMap\":{\"sigma-cosmetics\":[1490681.580412851,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1490681.580412851,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|25\\\"]\",\"title\":\"cell.js vps-clefairy|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|26\"],\"dataMap\":{\"sigma-cosmetics\":[1408333.7970947884,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1408333.7970947884,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|26\\\"]\",\"title\":\"cell.js vps-clefairy|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|27\"],\"dataMap\":{\"sigma-cosmetics\":[1391968.4721312972,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1391968.4721312972,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|27\\\"]\",\"title\":\"cell.js vps-clefairy|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|28\"],\"dataMap\":{\"sigma-cosmetics\":[1375729.2556117403,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1375729.2556117403,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|28\\\"]\",\"title\":\"cell.js vps-clefairy|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|29\"],\"dataMap\":{\"sigma-cosmetics\":[1359777.7442641791,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1359777.7442641791,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|29\\\"]\",\"title\":\"cell.js vps-clefairy|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|30\"],\"dataMap\":{\"sigma-cosmetics\":[1343965.8307025072,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1343965.8307025072,\"onlineRunningTime\":3327.8099999991646,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"scriptKey\":\"cell.js*[\\\"vps-clefairy|30\\\"]\",\"title\":\"cell.js vps-clefairy|30\",\"threads\":1,\"temporary\":false}}]}},\"vps-cubone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-cubone\",\"httpPortOpen\":false,\"ip\":\"7.6.7.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-cubone\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-cubone\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|0\"],\"dataMap\":{\"sigma-cosmetics\":[2392501.914468728,144,641,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16463.586124707974,\"onlineMoneyMade\":2392501.914468728,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|0\\\"]\",\"title\":\"cell.js vps-cubone|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|1\"],\"dataMap\":{\"sigma-cosmetics\":[2364559.2519010073,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2364559.2519010073,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|1\\\"]\",\"title\":\"cell.js vps-cubone|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|2\"],\"dataMap\":{\"sigma-cosmetics\":[2336943.542831152,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2336943.542831152,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|2\\\"]\",\"title\":\"cell.js vps-cubone|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|3\"],\"dataMap\":{\"sigma-cosmetics\":[2279813.0268357648,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2279813.0268357648,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|3\\\"]\",\"title\":\"cell.js vps-cubone|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|4\"],\"dataMap\":{\"sigma-cosmetics\":[2253188.9584202846,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2253188.9584202846,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|4\\\"]\",\"title\":\"cell.js vps-cubone|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|5\"],\"dataMap\":{\"sigma-cosmetics\":[2226876.334678649,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2226876.334678649,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|5\\\"]\",\"title\":\"cell.js vps-cubone|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|6\"],\"dataMap\":{\"sigma-cosmetics\":[1901587.6833638905,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1901587.6833638905,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|6\\\"]\",\"title\":\"cell.js vps-cubone|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|7\"],\"dataMap\":{\"sigma-cosmetics\":[1879397.0298787393,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1879397.0298787393,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|7\\\"]\",\"title\":\"cell.js vps-cubone|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|8\"],\"dataMap\":{\"sigma-cosmetics\":[1857533.6017181862,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1857533.6017181862,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|8\\\"]\",\"title\":\"cell.js vps-cubone|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|9\"],\"dataMap\":{\"sigma-cosmetics\":[2013144.6740674137,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2013144.6740674137,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|9\\\"]\",\"title\":\"cell.js vps-cubone|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|10\"],\"dataMap\":{\"sigma-cosmetics\":[1989781.9025629621,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1989781.9025629621,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|10\\\"]\",\"title\":\"cell.js vps-cubone|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|11\"],\"dataMap\":{\"sigma-cosmetics\":[1966557.8178806647,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1966557.8178806647,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|11\\\"]\",\"title\":\"cell.js vps-cubone|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|12\"],\"dataMap\":{\"sigma-cosmetics\":[1943669.9708229068,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1943669.9708229068,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|12\\\"]\",\"title\":\"cell.js vps-cubone|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|13\"],\"dataMap\":{\"sigma-cosmetics\":[1921032.8662002378,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1921032.8662002378,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|13\\\"]\",\"title\":\"cell.js vps-cubone|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|14\"],\"dataMap\":{\"sigma-cosmetics\":[1898632.2785726886,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":1898632.2785726886,\"onlineRunningTime\":3328.0099999991644,\"ramUsage\":2,\"server\":\"vps-cubone\",\"scriptKey\":\"cell.js*[\\\"vps-cubone|14\\\"]\",\"title\":\"cell.js vps-cubone|14\",\"threads\":1,\"temporary\":false}}]}},\"vps-dartrix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-dartrix\",\"httpPortOpen\":false,\"ip\":\"97.4.9.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-dartrix\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-dartrix\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dartrix|0\"],\"dataMap\":{\"sigma-cosmetics\":[2415379.5248761927,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2415379.5248761927,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-dartrix\",\"scriptKey\":\"cell.js*[\\\"vps-dartrix|0\\\"]\",\"title\":\"cell.js vps-dartrix|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dartrix|1\"],\"dataMap\":{\"sigma-cosmetics\":[2387170.5925979293,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2387170.5925979293,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-dartrix\",\"scriptKey\":\"cell.js*[\\\"vps-dartrix|1\\\"]\",\"title\":\"cell.js vps-dartrix|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dartrix|2\"],\"dataMap\":{\"sigma-cosmetics\":[2359290.7572114207,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2359290.7572114207,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-dartrix\",\"scriptKey\":\"cell.js*[\\\"vps-dartrix|2\\\"]\",\"title\":\"cell.js vps-dartrix|2\",\"threads\":1,\"temporary\":false}}]}},\"vps-dragonite\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-dragonite\",\"httpPortOpen\":false,\"ip\":\"75.3.1.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-dragonite\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-dragonite\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dragonite|0\"],\"dataMap\":{\"sigma-cosmetics\":[2670138.561766803,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2670138.561766803,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-dragonite\",\"scriptKey\":\"cell.js*[\\\"vps-dragonite|0\\\"]\",\"title\":\"cell.js vps-dragonite|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dragonite|1\"],\"dataMap\":{\"sigma-cosmetics\":[2638952.1282018754,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2638952.1282018754,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-dragonite\",\"scriptKey\":\"cell.js*[\\\"vps-dragonite|1\\\"]\",\"title\":\"cell.js vps-dragonite|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dragonite|2\"],\"dataMap\":{\"sigma-cosmetics\":[2608130.709498592,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2608130.709498592,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-dragonite\",\"scriptKey\":\"cell.js*[\\\"vps-dragonite|2\\\"]\",\"title\":\"cell.js vps-dragonite|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dragonite|3\"],\"dataMap\":{\"sigma-cosmetics\":[2577667.512174216,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2577667.512174216,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-dragonite\",\"scriptKey\":\"cell.js*[\\\"vps-dragonite|3\\\"]\",\"title\":\"cell.js vps-dragonite|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dragonite|4\"],\"dataMap\":{\"sigma-cosmetics\":[2547560.7470089826,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2547560.7470089826,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-dragonite\",\"scriptKey\":\"cell.js*[\\\"vps-dragonite|4\\\"]\",\"title\":\"cell.js vps-dragonite|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dragonite|5\"],\"dataMap\":{\"sigma-cosmetics\":[2517806.236376569,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2517806.236376569,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-dragonite\",\"scriptKey\":\"cell.js*[\\\"vps-dragonite|5\\\"]\",\"title\":\"cell.js vps-dragonite|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dragonite|6\"],\"dataMap\":{\"sigma-cosmetics\":[2488400.8453632295,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2488400.8453632295,\"onlineRunningTime\":3328.209999999164,\"ramUsage\":2,\"server\":\"vps-dragonite\",\"scriptKey\":\"cell.js*[\\\"vps-dragonite|6\\\"]\",\"title\":\"cell.js vps-dragonite|6\",\"threads\":1,\"temporary\":false}}]}},\"vps-eevee\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-eevee\",\"httpPortOpen\":false,\"ip\":\"0.9.0.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-eevee\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-eevee\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|0\\\"]\",\"title\":\"cell.js vps-eevee|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|1\\\"]\",\"title\":\"cell.js vps-eevee|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|2\\\"]\",\"title\":\"cell.js vps-eevee|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|3\\\"]\",\"title\":\"cell.js vps-eevee|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|4\\\"]\",\"title\":\"cell.js vps-eevee|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|5\\\"]\",\"title\":\"cell.js vps-eevee|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|6\"],\"dataMap\":{\"sigma-cosmetics\":[3051187.3106130725,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":3051187.3106130725,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|6\\\"]\",\"title\":\"cell.js vps-eevee|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|7\"],\"dataMap\":{\"sigma-cosmetics\":[3065617.1460245796,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":3065617.1460245796,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|7\\\"]\",\"title\":\"cell.js vps-eevee|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|8\"],\"dataMap\":{\"sigma-cosmetics\":[3004943.9547817903,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":3004943.9547817903,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|8\\\"]\",\"title\":\"cell.js vps-eevee|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|9\"],\"dataMap\":{\"sigma-cosmetics\":[2921546.7400535718,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2921546.7400535718,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|9\\\"]\",\"title\":\"cell.js vps-eevee|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|10\"],\"dataMap\":{\"sigma-cosmetics\":[2959568.905405543,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2959568.905405543,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|10\\\"]\",\"title\":\"cell.js vps-eevee|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|11\"],\"dataMap\":{\"sigma-cosmetics\":[2925002.7047308753,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2925002.7047308753,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|11\\\"]\",\"title\":\"cell.js vps-eevee|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|12\"],\"dataMap\":{\"sigma-cosmetics\":[2765907.0760319284,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2765907.0760319284,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|12\\\"]\",\"title\":\"cell.js vps-eevee|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|13\"],\"dataMap\":{\"sigma-cosmetics\":[2733624.7816387075,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2733624.7816387075,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|13\\\"]\",\"title\":\"cell.js vps-eevee|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|14\"],\"dataMap\":{\"sigma-cosmetics\":[2701694.292276051,144,640,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16442.613403530002,\"onlineMoneyMade\":2701694.292276051,\"onlineRunningTime\":3328.409999999164,\"ramUsage\":2,\"server\":\"vps-eevee\",\"scriptKey\":\"cell.js*[\\\"vps-eevee|14\\\"]\",\"title\":\"cell.js vps-eevee|14\",\"threads\":1,\"temporary\":false}}]}},\"vps-ekans\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-ekans\",\"httpPortOpen\":false,\"ip\":\"1.5.6.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-ekans\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-ekans\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-ekans\",\"scriptKey\":\"cell.js*[\\\"vps-ekans|0\\\"]\",\"title\":\"cell.js vps-ekans|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-ekans\",\"scriptKey\":\"cell.js*[\\\"vps-ekans|1\\\"]\",\"title\":\"cell.js vps-ekans|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-ekans\",\"scriptKey\":\"cell.js*[\\\"vps-ekans|2\\\"]\",\"title\":\"cell.js vps-ekans|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-ekans\",\"scriptKey\":\"cell.js*[\\\"vps-ekans|3\\\"]\",\"title\":\"cell.js vps-ekans|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-ekans\",\"scriptKey\":\"cell.js*[\\\"vps-ekans|4\\\"]\",\"title\":\"cell.js vps-ekans|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-ekans\",\"scriptKey\":\"cell.js*[\\\"vps-ekans|5\\\"]\",\"title\":\"cell.js vps-ekans|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|6\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-ekans\",\"scriptKey\":\"cell.js*[\\\"vps-ekans|6\\\"]\",\"title\":\"cell.js vps-ekans|6\",\"threads\":1,\"temporary\":false}}]}},\"vps-gengar\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-gengar\",\"httpPortOpen\":false,\"ip\":\"86.3.0.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-gengar\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-gengar\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-gengar\",\"scriptKey\":\"cell.js*[\\\"vps-gengar|0\\\"]\",\"title\":\"cell.js vps-gengar|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-gengar\",\"scriptKey\":\"cell.js*[\\\"vps-gengar|1\\\"]\",\"title\":\"cell.js vps-gengar|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-gengar\",\"scriptKey\":\"cell.js*[\\\"vps-gengar|2\\\"]\",\"title\":\"cell.js vps-gengar|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-gengar\",\"scriptKey\":\"cell.js*[\\\"vps-gengar|3\\\"]\",\"title\":\"cell.js vps-gengar|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-gengar\",\"scriptKey\":\"cell.js*[\\\"vps-gengar|4\\\"]\",\"title\":\"cell.js vps-gengar|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-gengar\",\"scriptKey\":\"cell.js*[\\\"vps-gengar|5\\\"]\",\"title\":\"cell.js vps-gengar|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|6\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-gengar\",\"scriptKey\":\"cell.js*[\\\"vps-gengar|6\\\"]\",\"title\":\"cell.js vps-gengar|6\",\"threads\":1,\"temporary\":false}}]}},\"vps-latios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-latios\",\"httpPortOpen\":false,\"ip\":\"68.1.3.7\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-latios\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-latios\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-latios|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-latios\",\"scriptKey\":\"cell.js*[\\\"vps-latios|0\\\"]\",\"title\":\"cell.js vps-latios|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-latios|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-latios\",\"scriptKey\":\"cell.js*[\\\"vps-latios|1\\\"]\",\"title\":\"cell.js vps-latios|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-latios|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.609999999164,\"ramUsage\":2,\"server\":\"vps-latios\",\"scriptKey\":\"cell.js*[\\\"vps-latios|2\\\"]\",\"title\":\"cell.js vps-latios|2\",\"threads\":1,\"temporary\":false}}]}},\"vps-marowak\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-marowak\",\"httpPortOpen\":false,\"ip\":\"31.7.7.7\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-marowak\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-marowak\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|0\\\"]\",\"title\":\"cell.js vps-marowak|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,601,70]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|1\\\"]\",\"title\":\"cell.js vps-marowak|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,601,70]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|2\\\"]\",\"title\":\"cell.js vps-marowak|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,601,70]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|3\\\"]\",\"title\":\"cell.js vps-marowak|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,602,69]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|4\\\"]\",\"title\":\"cell.js vps-marowak|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,602,69]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|5\\\"]\",\"title\":\"cell.js vps-marowak|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|6\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,602,69]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|6\\\"]\",\"title\":\"cell.js vps-marowak|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|7\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,602,69]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|7\\\"]\",\"title\":\"cell.js vps-marowak|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|8\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,602,69]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|8\\\"]\",\"title\":\"cell.js vps-marowak|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|9\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|9\\\"]\",\"title\":\"cell.js vps-marowak|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|10\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|10\\\"]\",\"title\":\"cell.js vps-marowak|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|11\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|11\\\"]\",\"title\":\"cell.js vps-marowak|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|12\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|12\\\"]\",\"title\":\"cell.js vps-marowak|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|13\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|13\\\"]\",\"title\":\"cell.js vps-marowak|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|14\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|14\\\"]\",\"title\":\"cell.js vps-marowak|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|15\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|15\\\"]\",\"title\":\"cell.js vps-marowak|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|16\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|16\\\"]\",\"title\":\"cell.js vps-marowak|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|17\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|17\\\"]\",\"title\":\"cell.js vps-marowak|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|18\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|18\\\"]\",\"title\":\"cell.js vps-marowak|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|19\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|19\\\"]\",\"title\":\"cell.js vps-marowak|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|20\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|20\\\"]\",\"title\":\"cell.js vps-marowak|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|21\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|21\\\"]\",\"title\":\"cell.js vps-marowak|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|22\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|22\\\"]\",\"title\":\"cell.js vps-marowak|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|23\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|23\\\"]\",\"title\":\"cell.js vps-marowak|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|24\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|24\\\"]\",\"title\":\"cell.js vps-marowak|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|25\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|25\\\"]\",\"title\":\"cell.js vps-marowak|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|26\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|26\\\"]\",\"title\":\"cell.js vps-marowak|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|27\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.2099999991633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|27\\\"]\",\"title\":\"cell.js vps-marowak|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|28\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|28\\\"]\",\"title\":\"cell.js vps-marowak|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|29\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,603,68]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|29\\\"]\",\"title\":\"cell.js vps-marowak|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|30\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,601,70]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|30\\\"]\",\"title\":\"cell.js vps-marowak|30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|31\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,601,70]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|31\\\"]\",\"title\":\"cell.js vps-marowak|31\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|32\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,601,70]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14072.695910419185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|32\\\"]\",\"title\":\"cell.js vps-marowak|32\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|33\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|33\\\"]\",\"title\":\"cell.js vps-marowak|33\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|34\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|34\\\"]\",\"title\":\"cell.js vps-marowak|34\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|35\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|35\\\"]\",\"title\":\"cell.js vps-marowak|35\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|36\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|36\\\"]\",\"title\":\"cell.js vps-marowak|36\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|37\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|37\\\"]\",\"title\":\"cell.js vps-marowak|37\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|38\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|38\\\"]\",\"title\":\"cell.js vps-marowak|38\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|39\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|39\\\"]\",\"title\":\"cell.js vps-marowak|39\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|40\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|40\\\"]\",\"title\":\"cell.js vps-marowak|40\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|41\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|41\\\"]\",\"title\":\"cell.js vps-marowak|41\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|42\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|42\\\"]\",\"title\":\"cell.js vps-marowak|42\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|43\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|43\\\"]\",\"title\":\"cell.js vps-marowak|43\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|44\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|44\\\"]\",\"title\":\"cell.js vps-marowak|44\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|45\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|45\\\"]\",\"title\":\"cell.js vps-marowak|45\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|46\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.0099999991635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|46\\\"]\",\"title\":\"cell.js vps-marowak|46\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|47\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|47\\\"]\",\"title\":\"cell.js vps-marowak|47\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|48\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|48\\\"]\",\"title\":\"cell.js vps-marowak|48\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|49\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|49\\\"]\",\"title\":\"cell.js vps-marowak|49\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|50\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|50\\\"]\",\"title\":\"cell.js vps-marowak|50\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|51\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|51\\\"]\",\"title\":\"cell.js vps-marowak|51\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|52\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|52\\\"]\",\"title\":\"cell.js vps-marowak|52\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|53\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|53\\\"]\",\"title\":\"cell.js vps-marowak|53\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|54\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|54\\\"]\",\"title\":\"cell.js vps-marowak|54\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|55\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|55\\\"]\",\"title\":\"cell.js vps-marowak|55\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|56\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|56\\\"]\",\"title\":\"cell.js vps-marowak|56\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|57\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,688,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14429.232170444706,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|57\\\"]\",\"title\":\"cell.js vps-marowak|57\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|58\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|58\\\"]\",\"title\":\"cell.js vps-marowak|58\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|59\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|59\\\"]\",\"title\":\"cell.js vps-marowak|59\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|60\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|60\\\"]\",\"title\":\"cell.js vps-marowak|60\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|61\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|61\\\"]\",\"title\":\"cell.js vps-marowak|61\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|62\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,687,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14408.259449266734,\"onlineMoneyMade\":0,\"onlineRunningTime\":3328.8099999991637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"scriptKey\":\"cell.js*[\\\"vps-marowak|62\\\"]\",\"title\":\"cell.js vps-marowak|62\",\"threads\":1,\"temporary\":false}}]}},\"vps-meowth\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-meowth\",\"httpPortOpen\":false,\"ip\":\"20.5.9.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-meowth\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-meowth\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|0\\\"]\",\"title\":\"cell.js vps-meowth|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|1\\\"]\",\"title\":\"cell.js vps-meowth|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|2\\\"]\",\"title\":\"cell.js vps-meowth|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|3\\\"]\",\"title\":\"cell.js vps-meowth|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|4\\\"]\",\"title\":\"cell.js vps-meowth|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|5\\\"]\",\"title\":\"cell.js vps-meowth|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|6\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|6\\\"]\",\"title\":\"cell.js vps-meowth|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|7\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|7\\\"]\",\"title\":\"cell.js vps-meowth|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|8\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|8\\\"]\",\"title\":\"cell.js vps-meowth|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|9\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|9\\\"]\",\"title\":\"cell.js vps-meowth|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|10\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|10\\\"]\",\"title\":\"cell.js vps-meowth|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|11\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|11\\\"]\",\"title\":\"cell.js vps-meowth|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|12\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|12\\\"]\",\"title\":\"cell.js vps-meowth|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|13\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|13\\\"]\",\"title\":\"cell.js vps-meowth|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|14\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|14\\\"]\",\"title\":\"cell.js vps-meowth|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|15\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|15\\\"]\",\"title\":\"cell.js vps-meowth|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|16\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|16\\\"]\",\"title\":\"cell.js vps-meowth|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|17\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|17\\\"]\",\"title\":\"cell.js vps-meowth|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|18\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|18\\\"]\",\"title\":\"cell.js vps-meowth|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|19\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|19\\\"]\",\"title\":\"cell.js vps-meowth|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|20\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|20\\\"]\",\"title\":\"cell.js vps-meowth|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|21\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|21\\\"]\",\"title\":\"cell.js vps-meowth|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|22\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.609999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|22\\\"]\",\"title\":\"cell.js vps-meowth|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|23\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|23\\\"]\",\"title\":\"cell.js vps-meowth|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|24\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|24\\\"]\",\"title\":\"cell.js vps-meowth|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|25\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|25\\\"]\",\"title\":\"cell.js vps-meowth|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|26\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|26\\\"]\",\"title\":\"cell.js vps-meowth|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|27\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|27\\\"]\",\"title\":\"cell.js vps-meowth|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|28\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|28\\\"]\",\"title\":\"cell.js vps-meowth|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|29\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|29\\\"]\",\"title\":\"cell.js vps-meowth|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|30\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,298,315]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12856.278082096818,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.409999999163,\"ramUsage\":2,\"server\":\"vps-meowth\",\"scriptKey\":\"cell.js*[\\\"vps-meowth|30\\\"]\",\"title\":\"cell.js vps-meowth|30\",\"threads\":1,\"temporary\":false}}]}},\"vps-nuzleaf\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-nuzleaf\",\"httpPortOpen\":false,\"ip\":\"98.9.3.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-nuzleaf\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-nuzleaf\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|0\\\"]\",\"title\":\"cell.js vps-nuzleaf|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|1\\\"]\",\"title\":\"cell.js vps-nuzleaf|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|2\\\"]\",\"title\":\"cell.js vps-nuzleaf|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|3\\\"]\",\"title\":\"cell.js vps-nuzleaf|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|4\\\"]\",\"title\":\"cell.js vps-nuzleaf|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|5\\\"]\",\"title\":\"cell.js vps-nuzleaf|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|6\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|6\\\"]\",\"title\":\"cell.js vps-nuzleaf|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|7\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|7\\\"]\",\"title\":\"cell.js vps-nuzleaf|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|8\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|8\\\"]\",\"title\":\"cell.js vps-nuzleaf|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|9\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|9\\\"]\",\"title\":\"cell.js vps-nuzleaf|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|10\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|10\\\"]\",\"title\":\"cell.js vps-nuzleaf|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|11\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|11\\\"]\",\"title\":\"cell.js vps-nuzleaf|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|12\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|12\\\"]\",\"title\":\"cell.js vps-nuzleaf|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|13\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|13\\\"]\",\"title\":\"cell.js vps-nuzleaf|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-nuzleaf|14\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3329.8099999991628,\"ramUsage\":2,\"server\":\"vps-nuzleaf\",\"scriptKey\":\"cell.js*[\\\"vps-nuzleaf|14\\\"]\",\"title\":\"cell.js vps-nuzleaf|14\",\"threads\":1,\"temporary\":false}}]}},\"vps-pikachu\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-pikachu\",\"httpPortOpen\":false,\"ip\":\"75.2.6.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-pikachu\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-pikachu\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-pikachu|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-pikachu\",\"scriptKey\":\"cell.js*[\\\"vps-pikachu|0\\\"]\",\"title\":\"cell.js vps-pikachu|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-pikachu|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-pikachu\",\"scriptKey\":\"cell.js*[\\\"vps-pikachu|1\\\"]\",\"title\":\"cell.js vps-pikachu|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-pikachu|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-pikachu\",\"scriptKey\":\"cell.js*[\\\"vps-pikachu|2\\\"]\",\"title\":\"cell.js vps-pikachu|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-pikachu|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-pikachu\",\"scriptKey\":\"cell.js*[\\\"vps-pikachu|3\\\"]\",\"title\":\"cell.js vps-pikachu|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-pikachu|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-pikachu\",\"scriptKey\":\"cell.js*[\\\"vps-pikachu|4\\\"]\",\"title\":\"cell.js vps-pikachu|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-pikachu|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-pikachu\",\"scriptKey\":\"cell.js*[\\\"vps-pikachu|5\\\"]\",\"title\":\"cell.js vps-pikachu|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-pikachu|6\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-pikachu\",\"scriptKey\":\"cell.js*[\\\"vps-pikachu|6\\\"]\",\"title\":\"cell.js vps-pikachu|6\",\"threads\":1,\"temporary\":false}}]}},\"vps-rattata\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-rattata\",\"httpPortOpen\":false,\"ip\":\"72.9.6.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-rattata\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-rattata\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|0\\\"]\",\"title\":\"cell.js vps-rattata|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|1\\\"]\",\"title\":\"cell.js vps-rattata|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|2\\\"]\",\"title\":\"cell.js vps-rattata|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|3\\\"]\",\"title\":\"cell.js vps-rattata|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|4\\\"]\",\"title\":\"cell.js vps-rattata|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|5\\\"]\",\"title\":\"cell.js vps-rattata|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|6\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|6\\\"]\",\"title\":\"cell.js vps-rattata|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|7\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|7\\\"]\",\"title\":\"cell.js vps-rattata|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|8\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|8\\\"]\",\"title\":\"cell.js vps-rattata|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|9\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|9\\\"]\",\"title\":\"cell.js vps-rattata|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|10\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|10\\\"]\",\"title\":\"cell.js vps-rattata|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|11\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|11\\\"]\",\"title\":\"cell.js vps-rattata|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|12\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|12\\\"]\",\"title\":\"cell.js vps-rattata|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|13\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|13\\\"]\",\"title\":\"cell.js vps-rattata|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|14\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,250,354]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12667.523591495072,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.0099999991626,\"ramUsage\":2,\"server\":\"vps-rattata\",\"scriptKey\":\"cell.js*[\\\"vps-rattata|14\\\"]\",\"title\":\"cell.js vps-rattata|14\",\"threads\":1,\"temporary\":false}}]}},\"vps-scorbunny\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-scorbunny\",\"httpPortOpen\":false,\"ip\":\"43.5.2.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-scorbunny\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-scorbunny\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-scorbunny|0\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-scorbunny\",\"scriptKey\":\"cell.js*[\\\"vps-scorbunny|0\\\"]\",\"title\":\"cell.js vps-scorbunny|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-scorbunny|1\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-scorbunny\",\"scriptKey\":\"cell.js*[\\\"vps-scorbunny|1\\\"]\",\"title\":\"cell.js vps-scorbunny|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-scorbunny|2\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-scorbunny\",\"scriptKey\":\"cell.js*[\\\"vps-scorbunny|2\\\"]\",\"title\":\"cell.js vps-scorbunny|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-scorbunny|3\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-scorbunny\",\"scriptKey\":\"cell.js*[\\\"vps-scorbunny|3\\\"]\",\"title\":\"cell.js vps-scorbunny|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-scorbunny|4\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-scorbunny\",\"scriptKey\":\"cell.js*[\\\"vps-scorbunny|4\\\"]\",\"title\":\"cell.js vps-scorbunny|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-scorbunny|5\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-scorbunny\",\"scriptKey\":\"cell.js*[\\\"vps-scorbunny|5\\\"]\",\"title\":\"cell.js vps-scorbunny|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-scorbunny|6\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-scorbunny\",\"scriptKey\":\"cell.js*[\\\"vps-scorbunny|6\\\"]\",\"title\":\"cell.js vps-scorbunny|6\",\"threads\":1,\"temporary\":false}}]}},\"vps-treecko\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-treecko\",\"httpPortOpen\":false,\"ip\":\"69.3.9.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-treecko\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-treecko\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|0\"],\"dataMap\":{\"n00dles\":[13066295.122449761,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13066295.122449761,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|0\\\"]\",\"title\":\"cell.js vps-treecko|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|1\"],\"dataMap\":{\"n00dles\":[13274299.832591018,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13274299.832591018,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|1\\\"]\",\"title\":\"cell.js vps-treecko|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|2\"],\"dataMap\":{\"n00dles\":[13039930.283367177,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13039930.283367177,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|2\\\"]\",\"title\":\"cell.js vps-treecko|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|3\"],\"dataMap\":{\"n00dles\":[12891726.131169982,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":12891726.131169982,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|3\\\"]\",\"title\":\"cell.js vps-treecko|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|4\"],\"dataMap\":{\"n00dles\":[12737953.110405827,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":12737953.110405827,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|4\\\"]\",\"title\":\"cell.js vps-treecko|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|5\"],\"dataMap\":{\"n00dles\":[12715267.731497003,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":12715267.731497003,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|5\\\"]\",\"title\":\"cell.js vps-treecko|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|6\"],\"dataMap\":{\"n00dles\":[12589680.42920035,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":12589680.42920035,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|6\\\"]\",\"title\":\"cell.js vps-treecko|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|7\"],\"dataMap\":{\"n00dles\":[13353509.19233805,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":13353509.19233805,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|7\\\"]\",\"title\":\"cell.js vps-treecko|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|8\"],\"dataMap\":{\"n00dles\":[13548131.913672103,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":13548131.913672103,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|8\\\"]\",\"title\":\"cell.js vps-treecko|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|9\"],\"dataMap\":{\"n00dles\":[13400175.406646695,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":13400175.406646695,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|9\\\"]\",\"title\":\"cell.js vps-treecko|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|10\"],\"dataMap\":{\"n00dles\":[13240343.965925895,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":13240343.965925895,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|10\\\"]\",\"title\":\"cell.js vps-treecko|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|11\"],\"dataMap\":{\"n00dles\":[13110945.72189122,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":13110945.72189122,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|11\\\"]\",\"title\":\"cell.js vps-treecko|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|12\"],\"dataMap\":{\"n00dles\":[12958159.066132676,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":12958159.066132676,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|12\\\"]\",\"title\":\"cell.js vps-treecko|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|13\"],\"dataMap\":{\"n00dles\":[12827061.411447141,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":12827061.411447141,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|13\\\"]\",\"title\":\"cell.js vps-treecko|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|14\"],\"dataMap\":{\"n00dles\":[13703033.491042882,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13703033.491042882,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|14\\\"]\",\"title\":\"cell.js vps-treecko|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|15\"],\"dataMap\":{\"n00dles\":[13539307.589331273,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13539307.589331273,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|15\\\"]\",\"title\":\"cell.js vps-treecko|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|16\"],\"dataMap\":{\"n00dles\":[13402057.859675378,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13402057.859675378,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|16\\\"]\",\"title\":\"cell.js vps-treecko|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|17\"],\"dataMap\":{\"n00dles\":[13331788.478822699,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13331788.478822699,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|17\\\"]\",\"title\":\"cell.js vps-treecko|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|18\"],\"dataMap\":{\"n00dles\":[13172753.139249874,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13172753.139249874,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|18\\\"]\",\"title\":\"cell.js vps-treecko|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|19\"],\"dataMap\":{\"n00dles\":[13028940.448589599,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13028940.448589599,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|19\\\"]\",\"title\":\"cell.js vps-treecko|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|20\"],\"dataMap\":{\"n00dles\":[12877442.468893817,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":12877442.468893817,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|20\\\"]\",\"title\":\"cell.js vps-treecko|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|21\"],\"dataMap\":{\"n00dles\":[12723849.49169896,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":12723849.49169896,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|21\\\"]\",\"title\":\"cell.js vps-treecko|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|22\"],\"dataMap\":{\"n00dles\":[13436294.227866523,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13436294.227866523,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|22\\\"]\",\"title\":\"cell.js vps-treecko|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|23\"],\"dataMap\":{\"n00dles\":[13276766.9508898,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13276766.9508898,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|23\\\"]\",\"title\":\"cell.js vps-treecko|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|24\"],\"dataMap\":{\"n00dles\":[13213147.793967864,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13213147.793967864,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|24\\\"]\",\"title\":\"cell.js vps-treecko|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|25\"],\"dataMap\":{\"n00dles\":[13315137.425947832,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13315137.425947832,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|25\\\"]\",\"title\":\"cell.js vps-treecko|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|26\"],\"dataMap\":{\"n00dles\":[13156067.54762453,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13156067.54762453,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|26\\\"]\",\"title\":\"cell.js vps-treecko|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|27\"],\"dataMap\":{\"n00dles\":[13000379.671122842,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13000379.671122842,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|27\\\"]\",\"title\":\"cell.js vps-treecko|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|28\"],\"dataMap\":{\"n00dles\":[12949678.514883956,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":12949678.514883956,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|28\\\"]\",\"title\":\"cell.js vps-treecko|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|29\"],\"dataMap\":{\"n00dles\":[13180415.543047188,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13180415.543047188,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|29\\\"]\",\"title\":\"cell.js vps-treecko|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|30\"],\"dataMap\":{\"n00dles\":[13505661.662913565,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":13505661.662913565,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|30\\\"]\",\"title\":\"cell.js vps-treecko|30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|31\"],\"dataMap\":{\"n00dles\":[13405136.37414641,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":13405136.37414641,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|31\\\"]\",\"title\":\"cell.js vps-treecko|31\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|32\"],\"dataMap\":{\"n00dles\":[13406512.594013408,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":13406512.594013408,\"onlineRunningTime\":3331.4099999991613,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|32\\\"]\",\"title\":\"cell.js vps-treecko|32\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|33\"],\"dataMap\":{\"n00dles\":[13574859.65412137,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":13574859.65412137,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|33\\\"]\",\"title\":\"cell.js vps-treecko|33\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|34\"],\"dataMap\":{\"n00dles\":[13287536.565333793,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":13287536.565333793,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|34\\\"]\",\"title\":\"cell.js vps-treecko|34\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|35\"],\"dataMap\":{\"n00dles\":[13130032.458629739,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":13130032.458629739,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|35\\\"]\",\"title\":\"cell.js vps-treecko|35\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|36\"],\"dataMap\":{\"n00dles\":[13260418.551809296,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":13260418.551809296,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|36\\\"]\",\"title\":\"cell.js vps-treecko|36\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|37\"],\"dataMap\":{\"n00dles\":[13305954.493266456,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":13305954.493266456,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|37\\\"]\",\"title\":\"cell.js vps-treecko|37\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|38\"],\"dataMap\":{\"n00dles\":[14112149.329323702,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":14112149.329323702,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|38\\\"]\",\"title\":\"cell.js vps-treecko|38\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|39\"],\"dataMap\":{\"n00dles\":[13944283.7893912,1237,333,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18109.94473717882,\"onlineMoneyMade\":13944283.7893912,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|39\\\"]\",\"title\":\"cell.js vps-treecko|39\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|40\"],\"dataMap\":{\"n00dles\":[14131986.504019465,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":14131986.504019465,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|40\\\"]\",\"title\":\"cell.js vps-treecko|40\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|41\"],\"dataMap\":{\"n00dles\":[14101483.006269705,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":14101483.006269705,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|41\\\"]\",\"title\":\"cell.js vps-treecko|41\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|42\"],\"dataMap\":{\"n00dles\":[14014712.117811546,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":14014712.117811546,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|42\\\"]\",\"title\":\"cell.js vps-treecko|42\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|43\"],\"dataMap\":{\"n00dles\":[13849905.551748607,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13849905.551748607,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|43\\\"]\",\"title\":\"cell.js vps-treecko|43\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|44\"],\"dataMap\":{\"n00dles\":[13690263.210152367,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13690263.210152367,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|44\\\"]\",\"title\":\"cell.js vps-treecko|44\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|45\"],\"dataMap\":{\"n00dles\":[13550990.257850023,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13550990.257850023,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|45\\\"]\",\"title\":\"cell.js vps-treecko|45\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|46\"],\"dataMap\":{\"n00dles\":[13410405.914908556,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13410405.914908556,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|46\\\"]\",\"title\":\"cell.js vps-treecko|46\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|47\"],\"dataMap\":{\"n00dles\":[13253438.694088653,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13253438.694088653,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|47\\\"]\",\"title\":\"cell.js vps-treecko|47\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|48\"],\"dataMap\":{\"n00dles\":[13208614.689040372,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13208614.689040372,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|48\\\"]\",\"title\":\"cell.js vps-treecko|48\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|49\"],\"dataMap\":{\"n00dles\":[13067569.772563322,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13067569.772563322,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|49\\\"]\",\"title\":\"cell.js vps-treecko|49\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|50\"],\"dataMap\":{\"n00dles\":[12915183.986391349,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":12915183.986391349,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|50\\\"]\",\"title\":\"cell.js vps-treecko|50\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|51\"],\"dataMap\":{\"n00dles\":[12761402.148791436,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":12761402.148791436,\"onlineRunningTime\":3331.2099999991615,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|51\\\"]\",\"title\":\"cell.js vps-treecko|51\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|52\"],\"dataMap\":{\"n00dles\":[12610694.855503796,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":12610694.855503796,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|52\\\"]\",\"title\":\"cell.js vps-treecko|52\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|53\"],\"dataMap\":{\"n00dles\":[12461778.573537972,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":12461778.573537972,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|53\\\"]\",\"title\":\"cell.js vps-treecko|53\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|54\"],\"dataMap\":{\"n00dles\":[13267370.103493193,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":13267370.103493193,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|54\\\"]\",\"title\":\"cell.js vps-treecko|54\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|55\"],\"dataMap\":{\"n00dles\":[12493491.254217483,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":12493491.254217483,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|55\\\"]\",\"title\":\"cell.js vps-treecko|55\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|56\"],\"dataMap\":{\"n00dles\":[12388581.532871779,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":12388581.532871779,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|56\\\"]\",\"title\":\"cell.js vps-treecko|56\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|57\"],\"dataMap\":{\"n00dles\":[12537724.236193439,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":12537724.236193439,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|57\\\"]\",\"title\":\"cell.js vps-treecko|57\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|58\"],\"dataMap\":{\"n00dles\":[12407672.149998885,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":12407672.149998885,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|58\\\"]\",\"title\":\"cell.js vps-treecko|58\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|59\"],\"dataMap\":{\"n00dles\":[12259471.181093363,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":12259471.181093363,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|59\\\"]\",\"title\":\"cell.js vps-treecko|59\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|60\"],\"dataMap\":{\"n00dles\":[12114526.69449891,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":12114526.69449891,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|60\\\"]\",\"title\":\"cell.js vps-treecko|60\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|61\"],\"dataMap\":{\"n00dles\":[11970078.748199252,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":11970078.748199252,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|61\\\"]\",\"title\":\"cell.js vps-treecko|61\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|62\"],\"dataMap\":{\"n00dles\":[11869792.796136536,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":11869792.796136536,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|62\\\"]\",\"title\":\"cell.js vps-treecko|62\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|63\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[8070613.027444908,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":8070613.027444908,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|63\\\"]\",\"title\":\"cell.js vps-treecko|63\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|64\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7887968.003887311,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7887968.003887311,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|64\\\"]\",\"title\":\"cell.js vps-treecko|64\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|65\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[8672150.578825038,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":8672150.578825038,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|65\\\"]\",\"title\":\"cell.js vps-treecko|65\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|66\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[8568511.956942072,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":8568511.956942072,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|66\\\"]\",\"title\":\"cell.js vps-treecko|66\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|67\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7983367.308042616,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7983367.308042616,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|67\\\"]\",\"title\":\"cell.js vps-treecko|67\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|68\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[8466113.664028319,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":8466113.664028319,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|68\\\"]\",\"title\":\"cell.js vps-treecko|68\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|69\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[8364941.558704849,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":8364941.558704849,\"onlineRunningTime\":3331.0099999991617,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|69\\\"]\",\"title\":\"cell.js vps-treecko|69\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|70\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[8264975.720962709,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":8264975.720962709,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|70\\\"]\",\"title\":\"cell.js vps-treecko|70\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|71\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[8166210.728782718,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":8166210.728782718,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|71\\\"]\",\"title\":\"cell.js vps-treecko|71\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|72\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7899395.589252279,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":7899395.589252279,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|72\\\"]\",\"title\":\"cell.js vps-treecko|72\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|73\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7994677.556520782,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":7994677.556520782,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|73\\\"]\",\"title\":\"cell.js vps-treecko|73\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|74\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[8068039.835876201,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":8068039.835876201,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|74\\\"]\",\"title\":\"cell.js vps-treecko|74\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|75\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7975480.563405904,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":7975480.563405904,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|75\\\"]\",\"title\":\"cell.js vps-treecko|75\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|76\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7856182.576080541,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7856182.576080541,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|76\\\"]\",\"title\":\"cell.js vps-treecko|76\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|77\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7656256.15263861,645,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":7656256.15263861,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|77\\\"]\",\"title\":\"cell.js vps-treecko|77\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|78\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6596449.285227527,642,207,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14868.610679123061,\"onlineMoneyMade\":6596449.285227527,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|78\\\"]\",\"title\":\"cell.js vps-treecko|78\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|79\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7190657.847963651,645,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":7190657.847963651,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|79\\\"]\",\"title\":\"cell.js vps-treecko|79\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|80\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7104749.317782501,645,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":7104749.317782501,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|80\\\"]\",\"title\":\"cell.js vps-treecko|80\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|81\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7023096.740069265,645,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":7023096.740069265,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|81\\\"]\",\"title\":\"cell.js vps-treecko|81\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|82\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7087765.942124647,645,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":7087765.942124647,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|82\\\"]\",\"title\":\"cell.js vps-treecko|82\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|83\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6946379.786383798,645,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":6946379.786383798,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|83\\\"]\",\"title\":\"cell.js vps-treecko|83\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|84\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6386277.179440929,645,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":6386277.179440929,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|84\\\"]\",\"title\":\"cell.js vps-treecko|84\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|85\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6610816.19862163,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":6610816.19862163,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|85\\\"]\",\"title\":\"cell.js vps-treecko|85\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|86\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6531847.633565547,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":6531847.633565547,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|86\\\"]\",\"title\":\"cell.js vps-treecko|86\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|87\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6453823.955927949,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":6453823.955927949,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|87\\\"]\",\"title\":\"cell.js vps-treecko|87\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|88\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6376733.840952255,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":6376733.840952255,\"onlineRunningTime\":3330.809999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|88\\\"]\",\"title\":\"cell.js vps-treecko|88\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|89\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6300566.099837501,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":6300566.099837501,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|89\\\"]\",\"title\":\"cell.js vps-treecko|89\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|90\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6225309.678103417,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":6225309.678103417,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|90\\\"]\",\"title\":\"cell.js vps-treecko|90\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|91\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6852442.930362695,645,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":6852442.930362695,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|91\\\"]\",\"title\":\"cell.js vps-treecko|91\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|92\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6786820.011670589,646,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":6786820.011670589,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|92\\\"]\",\"title\":\"cell.js vps-treecko|92\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|93\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6705744.731229415,646,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14891.68067241883,\"onlineMoneyMade\":6705744.731229415,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|93\\\"]\",\"title\":\"cell.js vps-treecko|93\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|94\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6512449.794288658,643,206,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14868.610679123061,\"onlineMoneyMade\":6512449.794288658,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|94\\\"]\",\"title\":\"cell.js vps-treecko|94\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|95\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6759512.190704851,649,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":6759512.190704851,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|95\\\"]\",\"title\":\"cell.js vps-treecko|95\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|96\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[6717144.300319034,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":6717144.300319034,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|96\\\"]\",\"title\":\"cell.js vps-treecko|96\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|97\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7475557.782534874,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7475557.782534874,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|97\\\"]\",\"title\":\"cell.js vps-treecko|97\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|98\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7386496.697929287,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7386496.697929287,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|98\\\"]\",\"title\":\"cell.js vps-treecko|98\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|99\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7298995.664669895,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7298995.664669895,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|99\\\"]\",\"title\":\"cell.js vps-treecko|99\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|100\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7520793.663149362,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7520793.663149362,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|100\\\"]\",\"title\":\"cell.js vps-treecko|100\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|101\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7430946.3262850465,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7430946.3262850465,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|101\\\"]\",\"title\":\"cell.js vps-treecko|101\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|102\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7748431.031660087,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7748431.031660087,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|102\\\"]\",\"title\":\"cell.js vps-treecko|102\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|103\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7293548.010346019,648,205,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14914.750665714599,\"onlineMoneyMade\":7293548.010346019,\"onlineRunningTime\":3330.609999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|103\\\"]\",\"title\":\"cell.js vps-treecko|103\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|104\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7564882.783770737,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7564882.783770737,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|104\\\"]\",\"title\":\"cell.js vps-treecko|104\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|105\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[7656104.462757357,651,204,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14937.820659010367,\"onlineMoneyMade\":7656104.462757357,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|105\\\"]\",\"title\":\"cell.js vps-treecko|105\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|106\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,242],\"n00dles\":[0,0,418,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9897.027123884916,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|106\\\"]\",\"title\":\"cell.js vps-treecko|106\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|107\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|107\\\"]\",\"title\":\"cell.js vps-treecko|107\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|108\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|108\\\"]\",\"title\":\"cell.js vps-treecko|108\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|109\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|109\\\"]\",\"title\":\"cell.js vps-treecko|109\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|110\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|110\\\"]\",\"title\":\"cell.js vps-treecko|110\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|111\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|111\\\"]\",\"title\":\"cell.js vps-treecko|111\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|112\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|112\\\"]\",\"title\":\"cell.js vps-treecko|112\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|113\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|113\\\"]\",\"title\":\"cell.js vps-treecko|113\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|114\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|114\\\"]\",\"title\":\"cell.js vps-treecko|114\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|115\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|115\\\"]\",\"title\":\"cell.js vps-treecko|115\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|116\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|116\\\"]\",\"title\":\"cell.js vps-treecko|116\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|117\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|117\\\"]\",\"title\":\"cell.js vps-treecko|117\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|118\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|118\\\"]\",\"title\":\"cell.js vps-treecko|118\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|119\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|119\\\"]\",\"title\":\"cell.js vps-treecko|119\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|120\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|120\\\"]\",\"title\":\"cell.js vps-treecko|120\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|121\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|121\\\"]\",\"title\":\"cell.js vps-treecko|121\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|122\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.409999999162,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|122\\\"]\",\"title\":\"cell.js vps-treecko|122\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|123\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|123\\\"]\",\"title\":\"cell.js vps-treecko|123\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|124\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|124\\\"]\",\"title\":\"cell.js vps-treecko|124\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|125\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|125\\\"]\",\"title\":\"cell.js vps-treecko|125\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-treecko|126\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,556]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11660.832974952424,\"onlineMoneyMade\":0,\"onlineRunningTime\":3330.2099999991624,\"ramUsage\":2,\"server\":\"vps-treecko\",\"scriptKey\":\"cell.js*[\\\"vps-treecko|126\\\"]\",\"title\":\"cell.js vps-treecko|126\",\"threads\":1,\"temporary\":false}}]}},\"vps-vulpix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-vulpix\",\"httpPortOpen\":false,\"ip\":\"97.3.4.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-vulpix\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-vulpix\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|0\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|0\\\"]\",\"title\":\"cell.js vps-vulpix|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|1\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|1\\\"]\",\"title\":\"cell.js vps-vulpix|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|2\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|2\\\"]\",\"title\":\"cell.js vps-vulpix|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|3\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|3\\\"]\",\"title\":\"cell.js vps-vulpix|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|4\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|4\\\"]\",\"title\":\"cell.js vps-vulpix|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|5\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|5\\\"]\",\"title\":\"cell.js vps-vulpix|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|6\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|6\\\"]\",\"title\":\"cell.js vps-vulpix|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|7\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|7\\\"]\",\"title\":\"cell.js vps-vulpix|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|8\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|8\\\"]\",\"title\":\"cell.js vps-vulpix|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|9\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|9\\\"]\",\"title\":\"cell.js vps-vulpix|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|10\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|10\\\"]\",\"title\":\"cell.js vps-vulpix|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|11\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|11\\\"]\",\"title\":\"cell.js vps-vulpix|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|12\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|12\\\"]\",\"title\":\"cell.js vps-vulpix|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|13\"],\"dataMap\":{\"n00dles\":[6262387.764847016,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6262387.764847016,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|13\\\"]\",\"title\":\"cell.js vps-vulpix|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|14\"],\"dataMap\":{\"n00dles\":[6187567.445909507,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6187567.445909507,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|14\\\"]\",\"title\":\"cell.js vps-vulpix|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|15\"],\"dataMap\":{\"n00dles\":[6450354.264605789,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6450354.264605789,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|15\\\"]\",\"title\":\"cell.js vps-vulpix|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|16\"],\"dataMap\":{\"n00dles\":[6383095.918416375,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6383095.918416375,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|16\\\"]\",\"title\":\"cell.js vps-vulpix|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|17\"],\"dataMap\":{\"n00dles\":[6315138.172198197,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6315138.172198197,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|17\\\"]\",\"title\":\"cell.js vps-vulpix|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|18\"],\"dataMap\":{\"n00dles\":[6240199.357147811,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6240199.357147811,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|18\\\"]\",\"title\":\"cell.js vps-vulpix|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|19\"],\"dataMap\":{\"n00dles\":[6170294.34257465,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6170294.34257465,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|19\\\"]\",\"title\":\"cell.js vps-vulpix|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|20\"],\"dataMap\":{\"n00dles\":[6097330.34461774,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6097330.34461774,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|20\\\"]\",\"title\":\"cell.js vps-vulpix|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|21\"],\"dataMap\":{\"n00dles\":[6024736.706696961,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6024736.706696961,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|21\\\"]\",\"title\":\"cell.js vps-vulpix|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|22\"],\"dataMap\":{\"n00dles\":[5954026.8278186815,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5954026.8278186815,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|22\\\"]\",\"title\":\"cell.js vps-vulpix|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|23\"],\"dataMap\":{\"n00dles\":[6174827.429039547,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6174827.429039547,\"onlineRunningTime\":3332.2099999991606,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|23\\\"]\",\"title\":\"cell.js vps-vulpix|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|24\"],\"dataMap\":{\"n00dles\":[6102768.980547231,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6102768.980547231,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|24\\\"]\",\"title\":\"cell.js vps-vulpix|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|25\"],\"dataMap\":{\"n00dles\":[6033377.015751558,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6033377.015751558,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|25\\\"]\",\"title\":\"cell.js vps-vulpix|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|26\"],\"dataMap\":{\"n00dles\":[5982839.227487335,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5982839.227487335,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|26\\\"]\",\"title\":\"cell.js vps-vulpix|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|27\"],\"dataMap\":{\"n00dles\":[5902281.770487389,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5902281.770487389,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|27\\\"]\",\"title\":\"cell.js vps-vulpix|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|28\"],\"dataMap\":{\"n00dles\":[5831771.492250967,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5831771.492250967,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|28\\\"]\",\"title\":\"cell.js vps-vulpix|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|29\"],\"dataMap\":{\"n00dles\":[5762109.90871092,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5762109.90871092,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|29\\\"]\",\"title\":\"cell.js vps-vulpix|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|30\"],\"dataMap\":{\"n00dles\":[5694253.172314114,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5694253.172314114,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|30\\\"]\",\"title\":\"cell.js vps-vulpix|30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|31\"],\"dataMap\":{\"n00dles\":[5633111.110594285,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5633111.110594285,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|31\\\"]\",\"title\":\"cell.js vps-vulpix|31\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|32\"],\"dataMap\":{\"n00dles\":[5565836.299271398,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5565836.299271398,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|32\\\"]\",\"title\":\"cell.js vps-vulpix|32\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|33\"],\"dataMap\":{\"n00dles\":[5944506.933974956,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5944506.933974956,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|33\\\"]\",\"title\":\"cell.js vps-vulpix|33\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|34\"],\"dataMap\":{\"n00dles\":[6162458.325444551,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6162458.325444551,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|34\\\"]\",\"title\":\"cell.js vps-vulpix|34\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|35\"],\"dataMap\":{\"n00dles\":[6089341.747040736,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6089341.747040736,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|35\\\"]\",\"title\":\"cell.js vps-vulpix|35\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|36\"],\"dataMap\":{\"n00dles\":[6017576.388987831,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":6017576.388987831,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|36\\\"]\",\"title\":\"cell.js vps-vulpix|36\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|37\"],\"dataMap\":{\"n00dles\":[5945687.241214862,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5945687.241214862,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|37\\\"]\",\"title\":\"cell.js vps-vulpix|37\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|38\"],\"dataMap\":{\"n00dles\":[5920184.273434395,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5920184.273434395,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|38\\\"]\",\"title\":\"cell.js vps-vulpix|38\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|39\"],\"dataMap\":{\"n00dles\":[5915537.3124206755,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5915537.3124206755,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|39\\\"]\",\"title\":\"cell.js vps-vulpix|39\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|40\"],\"dataMap\":{\"n00dles\":[5844872.137101181,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5844872.137101181,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|40\\\"]\",\"title\":\"cell.js vps-vulpix|40\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|41\"],\"dataMap\":{\"n00dles\":[5771261.439919871,591,545,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13103.75619199675,\"onlineMoneyMade\":5771261.439919871,\"onlineRunningTime\":3332.0099999991608,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|41\\\"]\",\"title\":\"cell.js vps-vulpix|41\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|42\"],\"dataMap\":{\"n00dles\":[14286329.55055065,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":14286329.55055065,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|42\\\"]\",\"title\":\"cell.js vps-vulpix|42\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|43\"],\"dataMap\":{\"n00dles\":[14124282.794821138,1240,332,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18133.01473047459,\"onlineMoneyMade\":14124282.794821138,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|43\\\"]\",\"title\":\"cell.js vps-vulpix|43\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|44\"],\"dataMap\":{\"n00dles\":[14997854.399933267,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":14997854.399933267,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|44\\\"]\",\"title\":\"cell.js vps-vulpix|44\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|45\"],\"dataMap\":{\"n00dles\":[14818894.068481883,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":14818894.068481883,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|45\\\"]\",\"title\":\"cell.js vps-vulpix|45\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|46\"],\"dataMap\":{\"n00dles\":[14641822.860870108,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":14641822.860870108,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|46\\\"]\",\"title\":\"cell.js vps-vulpix|46\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|47\"],\"dataMap\":{\"n00dles\":[14467826.785864582,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":14467826.785864582,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|47\\\"]\",\"title\":\"cell.js vps-vulpix|47\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|48\"],\"dataMap\":{\"n00dles\":[14308471.961707594,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":14308471.961707594,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|48\\\"]\",\"title\":\"cell.js vps-vulpix|48\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|49\"],\"dataMap\":{\"n00dles\":[14855760.831684045,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":14855760.831684045,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|49\\\"]\",\"title\":\"cell.js vps-vulpix|49\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|50\"],\"dataMap\":{\"n00dles\":[14671881.726955608,1246,330,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18179.154717066136,\"onlineMoneyMade\":14671881.726955608,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|50\\\"]\",\"title\":\"cell.js vps-vulpix|50\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|51\"],\"dataMap\":{\"n00dles\":[15051735.429413838,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":15051735.429413838,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|51\\\"]\",\"title\":\"cell.js vps-vulpix|51\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|52\"],\"dataMap\":{\"n00dles\":[14874642.503445093,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":14874642.503445093,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|52\\\"]\",\"title\":\"cell.js vps-vulpix|52\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|53\"],\"dataMap\":{\"n00dles\":[15482635.265822785,1249,329,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18202.22471036191,\"onlineMoneyMade\":15482635.265822785,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|53\\\"]\",\"title\":\"cell.js vps-vulpix|53\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|54\"],\"dataMap\":{\"n00dles\":[15017003.020059243,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":15017003.020059243,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|54\\\"]\",\"title\":\"cell.js vps-vulpix|54\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|55\"],\"dataMap\":{\"n00dles\":[14501550.517299138,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":14501550.517299138,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|55\\\"]\",\"title\":\"cell.js vps-vulpix|55\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|56\"],\"dataMap\":{\"n00dles\":[14321259.372730758,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":14321259.372730758,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|56\\\"]\",\"title\":\"cell.js vps-vulpix|56\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|57\"],\"dataMap\":{\"n00dles\":[14153158.713998502,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":14153158.713998502,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|57\\\"]\",\"title\":\"cell.js vps-vulpix|57\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|58\"],\"dataMap\":{\"n00dles\":[14060457.321185645,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":14060457.321185645,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|58\\\"]\",\"title\":\"cell.js vps-vulpix|58\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|59\"],\"dataMap\":{\"n00dles\":[13893190.386157988,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":13893190.386157988,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|59\\\"]\",\"title\":\"cell.js vps-vulpix|59\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|60\"],\"dataMap\":{\"n00dles\":[13823558.348307079,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":13823558.348307079,\"onlineRunningTime\":3331.809999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|60\\\"]\",\"title\":\"cell.js vps-vulpix|60\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|61\"],\"dataMap\":{\"n00dles\":[13663074.54154113,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":13663074.54154113,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|61\\\"]\",\"title\":\"cell.js vps-vulpix|61\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-vulpix|62\"],\"dataMap\":{\"n00dles\":[13499826.866503177,1243,331,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.084723770364,\"onlineMoneyMade\":13499826.866503177,\"onlineRunningTime\":3331.609999999161,\"ramUsage\":2,\"server\":\"vps-vulpix\",\"scriptKey\":\"cell.js*[\\\"vps-vulpix|62\\\"]\",\"title\":\"cell.js vps-vulpix|62\",\"threads\":1,\"temporary\":false}}]}},\"vps-zigzagoon\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-zigzagoon\",\"httpPortOpen\":false,\"ip\":\"91.7.5.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-zigzagoon\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-zigzagoon\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|0\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|0\\\"]\",\"title\":\"cell.js vps-zigzagoon|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|1\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|1\\\"]\",\"title\":\"cell.js vps-zigzagoon|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|2\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|2\\\"]\",\"title\":\"cell.js vps-zigzagoon|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|3\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|3\\\"]\",\"title\":\"cell.js vps-zigzagoon|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|4\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|4\\\"]\",\"title\":\"cell.js vps-zigzagoon|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|5\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|5\\\"]\",\"title\":\"cell.js vps-zigzagoon|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|6\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|6\\\"]\",\"title\":\"cell.js vps-zigzagoon|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|7\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|7\\\"]\",\"title\":\"cell.js vps-zigzagoon|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|8\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|8\\\"]\",\"title\":\"cell.js vps-zigzagoon|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|9\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|9\\\"]\",\"title\":\"cell.js vps-zigzagoon|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|10\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|10\\\"]\",\"title\":\"cell.js vps-zigzagoon|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|11\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|11\\\"]\",\"title\":\"cell.js vps-zigzagoon|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|12\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|12\\\"]\",\"title\":\"cell.js vps-zigzagoon|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|13\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|13\\\"]\",\"title\":\"cell.js vps-zigzagoon|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-zigzagoon|14\"],\"dataMap\":{\"n00dles\":[0,0,740,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.897519434557,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.4099999991604,\"ramUsage\":2,\"server\":\"vps-zigzagoon\",\"scriptKey\":\"cell.js*[\\\"vps-zigzagoon|14\\\"]\",\"title\":\"cell.js vps-zigzagoon|14\",\"threads\":1,\"temporary\":false}}]}},\"vps-arbok\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-arbok\",\"httpPortOpen\":false,\"ip\":\"59.4.6.9\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-arbok\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-arbok\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|0\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|0\\\"]\",\"title\":\"cell.js vps-arbok|0\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|1\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|1\\\"]\",\"title\":\"cell.js vps-arbok|1\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|2\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|2\\\"]\",\"title\":\"cell.js vps-arbok|2\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|3\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|3\\\"]\",\"title\":\"cell.js vps-arbok|3\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|4\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|4\\\"]\",\"title\":\"cell.js vps-arbok|4\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|5\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|5\\\"]\",\"title\":\"cell.js vps-arbok|5\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|6\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|6\\\"]\",\"title\":\"cell.js vps-arbok|6\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|7\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|7\\\"]\",\"title\":\"cell.js vps-arbok|7\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|8\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|8\\\"]\",\"title\":\"cell.js vps-arbok|8\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|9\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|9\\\"]\",\"title\":\"cell.js vps-arbok|9\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|10\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|10\\\"]\",\"title\":\"cell.js vps-arbok|10\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|11\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|11\\\"]\",\"title\":\"cell.js vps-arbok|11\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|12\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|12\\\"]\",\"title\":\"cell.js vps-arbok|12\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|13\"],\"dataMap\":{\"n00dles\":[0,0,0,1190]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":13726.646010982657,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|13\\\"]\",\"title\":\"cell.js vps-arbok|13\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|14\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|14\\\"]\",\"title\":\"cell.js vps-arbok|14\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|15\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|15\\\"]\",\"title\":\"cell.js vps-arbok|15\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|16\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|16\\\"]\",\"title\":\"cell.js vps-arbok|16\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|17\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|17\\\"]\",\"title\":\"cell.js vps-arbok|17\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|18\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|18\\\"]\",\"title\":\"cell.js vps-arbok|18\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|19\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|19\\\"]\",\"title\":\"cell.js vps-arbok|19\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|20\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|20\\\"]\",\"title\":\"cell.js vps-arbok|20\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|21\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.809999999159,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|21\\\"]\",\"title\":\"cell.js vps-arbok|21\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|22\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|22\\\"]\",\"title\":\"cell.js vps-arbok|22\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|23\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|23\\\"]\",\"title\":\"cell.js vps-arbok|23\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|24\"],\"dataMap\":{\"n00dles\":[0,0,246,992]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":14280.325850081104,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|24\\\"]\",\"title\":\"cell.js vps-arbok|24\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|25\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|25\\\"]\",\"title\":\"cell.js vps-arbok|25\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|26\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|26\\\"]\",\"title\":\"cell.js vps-arbok|26\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|27\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|27\\\"]\",\"title\":\"cell.js vps-arbok|27\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|28\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|28\\\"]\",\"title\":\"cell.js vps-arbok|28\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|29\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|29\\\"]\",\"title\":\"cell.js vps-arbok|29\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|30\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|30\\\"]\",\"title\":\"cell.js vps-arbok|30\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|31\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|31\\\"]\",\"title\":\"cell.js vps-arbok|31\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|32\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|32\\\"]\",\"title\":\"cell.js vps-arbok|32\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|33\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|33\\\"]\",\"title\":\"cell.js vps-arbok|33\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|34\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|34\\\"]\",\"title\":\"cell.js vps-arbok|34\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|35\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|35\\\"]\",\"title\":\"cell.js vps-arbok|35\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|36\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|36\\\"]\",\"title\":\"cell.js vps-arbok|36\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|37\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|37\\\"]\",\"title\":\"cell.js vps-arbok|37\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|38\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|38\\\"]\",\"title\":\"cell.js vps-arbok|38\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|39\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.6099999991593,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|39\\\"]\",\"title\":\"cell.js vps-arbok|39\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|40\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|40\\\"]\",\"title\":\"cell.js vps-arbok|40\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|41\"],\"dataMap\":{\"n00dles\":[0,0,652,666]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":15203.12558191185,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|41\\\"]\",\"title\":\"cell.js vps-arbok|41\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|42\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|42\\\"]\",\"title\":\"cell.js vps-arbok|42\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|43\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|43\\\"]\",\"title\":\"cell.js vps-arbok|43\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|44\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|44\\\"]\",\"title\":\"cell.js vps-arbok|44\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|45\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|45\\\"]\",\"title\":\"cell.js vps-arbok|45\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|46\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|46\\\"]\",\"title\":\"cell.js vps-arbok|46\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|47\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|47\\\"]\",\"title\":\"cell.js vps-arbok|47\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|48\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|48\\\"]\",\"title\":\"cell.js vps-arbok|48\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|49\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|49\\\"]\",\"title\":\"cell.js vps-arbok|49\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|50\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|50\\\"]\",\"title\":\"cell.js vps-arbok|50\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|51\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|51\\\"]\",\"title\":\"cell.js vps-arbok|51\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|52\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|52\\\"]\",\"title\":\"cell.js vps-arbok|52\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|53\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|53\\\"]\",\"title\":\"cell.js vps-arbok|53\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|54\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|54\\\"]\",\"title\":\"cell.js vps-arbok|54\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|55\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|55\\\"]\",\"title\":\"cell.js vps-arbok|55\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|56\"],\"dataMap\":{\"n00dles\":[0,0,1052,344]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16102.855320446828,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|56\\\"]\",\"title\":\"cell.js vps-arbok|56\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|57\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.4099999991595,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|57\\\"]\",\"title\":\"cell.js vps-arbok|57\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|58\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|58\\\"]\",\"title\":\"cell.js vps-arbok|58\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|59\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|59\\\"]\",\"title\":\"cell.js vps-arbok|59\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|60\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|60\\\"]\",\"title\":\"cell.js vps-arbok|60\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|61\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|61\\\"]\",\"title\":\"cell.js vps-arbok|61\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|62\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|62\\\"]\",\"title\":\"cell.js vps-arbok|62\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|63\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|63\\\"]\",\"title\":\"cell.js vps-arbok|63\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|64\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|64\\\"]\",\"title\":\"cell.js vps-arbok|64\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|65\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|65\\\"]\",\"title\":\"cell.js vps-arbok|65\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|66\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|66\\\"]\",\"title\":\"cell.js vps-arbok|66\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|67\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|67\\\"]\",\"title\":\"cell.js vps-arbok|67\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|68\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|68\\\"]\",\"title\":\"cell.js vps-arbok|68\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|69\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|69\\\"]\",\"title\":\"cell.js vps-arbok|69\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|70\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|70\\\"]\",\"title\":\"cell.js vps-arbok|70\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|71\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|71\\\"]\",\"title\":\"cell.js vps-arbok|71\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|72\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|72\\\"]\",\"title\":\"cell.js vps-arbok|72\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|73\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|73\\\"]\",\"title\":\"cell.js vps-arbok|73\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|74\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|74\\\"]\",\"title\":\"cell.js vps-arbok|74\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|75\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|75\\\"]\",\"title\":\"cell.js vps-arbok|75\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|76\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.2099999991597,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|76\\\"]\",\"title\":\"cell.js vps-arbok|76\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|77\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|77\\\"]\",\"title\":\"cell.js vps-arbok|77\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|78\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|78\\\"]\",\"title\":\"cell.js vps-arbok|78\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|79\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|79\\\"]\",\"title\":\"cell.js vps-arbok|79\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|80\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|80\\\"]\",\"title\":\"cell.js vps-arbok|80\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|81\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|81\\\"]\",\"title\":\"cell.js vps-arbok|81\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|82\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|82\\\"]\",\"title\":\"cell.js vps-arbok|82\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|83\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|83\\\"]\",\"title\":\"cell.js vps-arbok|83\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|84\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|84\\\"]\",\"title\":\"cell.js vps-arbok|84\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|85\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|85\\\"]\",\"title\":\"cell.js vps-arbok|85\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|86\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|86\\\"]\",\"title\":\"cell.js vps-arbok|86\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|87\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|87\\\"]\",\"title\":\"cell.js vps-arbok|87\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|88\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|88\\\"]\",\"title\":\"cell.js vps-arbok|88\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|89\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|89\\\"]\",\"title\":\"cell.js vps-arbok|89\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|90\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|90\\\"]\",\"title\":\"cell.js vps-arbok|90\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|91\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|91\\\"]\",\"title\":\"cell.js vps-arbok|91\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|92\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3333.00999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|92\\\"]\",\"title\":\"cell.js vps-arbok|92\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|93\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|93\\\"]\",\"title\":\"cell.js vps-arbok|93\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|94\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|94\\\"]\",\"title\":\"cell.js vps-arbok|94\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|95\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|95\\\"]\",\"title\":\"cell.js vps-arbok|95\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|96\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|96\\\"]\",\"title\":\"cell.js vps-arbok|96\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|97\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|97\\\"]\",\"title\":\"cell.js vps-arbok|97\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|98\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|98\\\"]\",\"title\":\"cell.js vps-arbok|98\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|99\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|99\\\"]\",\"title\":\"cell.js vps-arbok|99\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|100\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|100\\\"]\",\"title\":\"cell.js vps-arbok|100\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|101\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|101\\\"]\",\"title\":\"cell.js vps-arbok|101\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|102\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|102\\\"]\",\"title\":\"cell.js vps-arbok|102\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|103\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|103\\\"]\",\"title\":\"cell.js vps-arbok|103\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|104\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|104\\\"]\",\"title\":\"cell.js vps-arbok|104\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|105\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|105\\\"]\",\"title\":\"cell.js vps-arbok|105\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|106\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|106\\\"]\",\"title\":\"cell.js vps-arbok|106\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|107\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|107\\\"]\",\"title\":\"cell.js vps-arbok|107\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|108\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|108\\\"]\",\"title\":\"cell.js vps-arbok|108\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|109\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|109\\\"]\",\"title\":\"cell.js vps-arbok|109\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|110\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|110\\\"]\",\"title\":\"cell.js vps-arbok|110\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|111\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.80999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|111\\\"]\",\"title\":\"cell.js vps-arbok|111\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|112\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|112\\\"]\",\"title\":\"cell.js vps-arbok|112\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|113\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|113\\\"]\",\"title\":\"cell.js vps-arbok|113\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|114\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|114\\\"]\",\"title\":\"cell.js vps-arbok|114\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|115\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|115\\\"]\",\"title\":\"cell.js vps-arbok|115\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|116\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|116\\\"]\",\"title\":\"cell.js vps-arbok|116\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|117\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|117\\\"]\",\"title\":\"cell.js vps-arbok|117\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|118\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|118\\\"]\",\"title\":\"cell.js vps-arbok|118\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|119\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|119\\\"]\",\"title\":\"cell.js vps-arbok|119\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|120\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|120\\\"]\",\"title\":\"cell.js vps-arbok|120\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|121\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|121\\\"]\",\"title\":\"cell.js vps-arbok|121\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|122\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|122\\\"]\",\"title\":\"cell.js vps-arbok|122\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|123\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|123\\\"]\",\"title\":\"cell.js vps-arbok|123\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|124\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|124\\\"]\",\"title\":\"cell.js vps-arbok|124\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|125\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|125\\\"]\",\"title\":\"cell.js vps-arbok|125\",\"threads\":2,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|126\"],\"dataMap\":{\"n00dles\":[0,0,1480,0]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17071.795038869113,\"onlineMoneyMade\":0,\"onlineRunningTime\":3332.60999999916,\"ramUsage\":2,\"server\":\"vps-arbok\",\"scriptKey\":\"cell.js*[\\\"vps-arbok|126\\\"]\",\"title\":\"cell.js vps-arbok|126\",\"threads\":2,\"temporary\":false}}]}},\"vps-bonsly\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-bonsly\",\"httpPortOpen\":false,\"ip\":\"51.7.2.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-bonsly\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-bonsly\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|0\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|0\\\"]\",\"title\":\"cell.js vps-bonsly|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|1\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|1\\\"]\",\"title\":\"cell.js vps-bonsly|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|2\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|2\\\"]\",\"title\":\"cell.js vps-bonsly|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|3\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|3\\\"]\",\"title\":\"cell.js vps-bonsly|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|4\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|4\\\"]\",\"title\":\"cell.js vps-bonsly|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|5\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|5\\\"]\",\"title\":\"cell.js vps-bonsly|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|6\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|6\\\"]\",\"title\":\"cell.js vps-bonsly|6\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|7\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|7\\\"]\",\"title\":\"cell.js vps-bonsly|7\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|8\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|8\\\"]\",\"title\":\"cell.js vps-bonsly|8\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|9\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|9\\\"]\",\"title\":\"cell.js vps-bonsly|9\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|10\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|10\\\"]\",\"title\":\"cell.js vps-bonsly|10\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|11\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|11\\\"]\",\"title\":\"cell.js vps-bonsly|11\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|12\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|12\\\"]\",\"title\":\"cell.js vps-bonsly|12\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|13\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|13\\\"]\",\"title\":\"cell.js vps-bonsly|13\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|14\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|14\\\"]\",\"title\":\"cell.js vps-bonsly|14\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|15\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|15\\\"]\",\"title\":\"cell.js vps-bonsly|15\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|16\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|16\\\"]\",\"title\":\"cell.js vps-bonsly|16\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|17\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|17\\\"]\",\"title\":\"cell.js vps-bonsly|17\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|18\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|18\\\"]\",\"title\":\"cell.js vps-bonsly|18\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|19\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|19\\\"]\",\"title\":\"cell.js vps-bonsly|19\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|20\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|20\\\"]\",\"title\":\"cell.js vps-bonsly|20\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|21\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|21\\\"]\",\"title\":\"cell.js vps-bonsly|21\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|22\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|22\\\"]\",\"title\":\"cell.js vps-bonsly|22\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|23\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|23\\\"]\",\"title\":\"cell.js vps-bonsly|23\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|24\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|24\\\"]\",\"title\":\"cell.js vps-bonsly|24\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|25\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|25\\\"]\",\"title\":\"cell.js vps-bonsly|25\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|26\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|26\\\"]\",\"title\":\"cell.js vps-bonsly|26\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|27\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|27\\\"]\",\"title\":\"cell.js vps-bonsly|27\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|28\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.4099999991586,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|28\\\"]\",\"title\":\"cell.js vps-bonsly|28\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|29\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|29\\\"]\",\"title\":\"cell.js vps-bonsly|29\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|30\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|30\\\"]\",\"title\":\"cell.js vps-bonsly|30\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|31\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|31\\\"]\",\"title\":\"cell.js vps-bonsly|31\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|32\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|32\\\"]\",\"title\":\"cell.js vps-bonsly|32\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|33\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|33\\\"]\",\"title\":\"cell.js vps-bonsly|33\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|34\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|34\\\"]\",\"title\":\"cell.js vps-bonsly|34\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|35\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|35\\\"]\",\"title\":\"cell.js vps-bonsly|35\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|36\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|36\\\"]\",\"title\":\"cell.js vps-bonsly|36\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|37\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|37\\\"]\",\"title\":\"cell.js vps-bonsly|37\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|38\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|38\\\"]\",\"title\":\"cell.js vps-bonsly|38\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|39\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|39\\\"]\",\"title\":\"cell.js vps-bonsly|39\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|40\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|40\\\"]\",\"title\":\"cell.js vps-bonsly|40\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|41\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|41\\\"]\",\"title\":\"cell.js vps-bonsly|41\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|42\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|42\\\"]\",\"title\":\"cell.js vps-bonsly|42\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|43\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|43\\\"]\",\"title\":\"cell.js vps-bonsly|43\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|44\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|44\\\"]\",\"title\":\"cell.js vps-bonsly|44\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|45\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|45\\\"]\",\"title\":\"cell.js vps-bonsly|45\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|46\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|46\\\"]\",\"title\":\"cell.js vps-bonsly|46\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|47\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.2099999991588,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|47\\\"]\",\"title\":\"cell.js vps-bonsly|47\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|48\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|48\\\"]\",\"title\":\"cell.js vps-bonsly|48\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|49\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|49\\\"]\",\"title\":\"cell.js vps-bonsly|49\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|50\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|50\\\"]\",\"title\":\"cell.js vps-bonsly|50\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|51\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|51\\\"]\",\"title\":\"cell.js vps-bonsly|51\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|52\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|52\\\"]\",\"title\":\"cell.js vps-bonsly|52\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|53\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|53\\\"]\",\"title\":\"cell.js vps-bonsly|53\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|54\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|54\\\"]\",\"title\":\"cell.js vps-bonsly|54\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|55\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|55\\\"]\",\"title\":\"cell.js vps-bonsly|55\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|56\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|56\\\"]\",\"title\":\"cell.js vps-bonsly|56\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|57\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|57\\\"]\",\"title\":\"cell.js vps-bonsly|57\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|58\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|58\\\"]\",\"title\":\"cell.js vps-bonsly|58\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|59\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|59\\\"]\",\"title\":\"cell.js vps-bonsly|59\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|60\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|60\\\"]\",\"title\":\"cell.js vps-bonsly|60\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|61\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|61\\\"]\",\"title\":\"cell.js vps-bonsly|61\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|62\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.009999999159,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"scriptKey\":\"cell.js*[\\\"vps-bonsly|62\\\"]\",\"title\":\"cell.js vps-bonsly|62\",\"threads\":1,\"temporary\":false}}]}},\"vps-diglet\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-diglet\",\"httpPortOpen\":false,\"ip\":\"83.0.0.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-diglet\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-diglet\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-diglet|0\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-diglet\",\"scriptKey\":\"cell.js*[\\\"vps-diglet|0\\\"]\",\"title\":\"cell.js vps-diglet|0\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-diglet|1\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-diglet\",\"scriptKey\":\"cell.js*[\\\"vps-diglet|1\\\"]\",\"title\":\"cell.js vps-diglet|1\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-diglet|2\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-diglet\",\"scriptKey\":\"cell.js*[\\\"vps-diglet|2\\\"]\",\"title\":\"cell.js vps-diglet|2\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-diglet|3\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-diglet\",\"scriptKey\":\"cell.js*[\\\"vps-diglet|3\\\"]\",\"title\":\"cell.js vps-diglet|3\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-diglet|4\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-diglet\",\"scriptKey\":\"cell.js*[\\\"vps-diglet|4\\\"]\",\"title\":\"cell.js vps-diglet|4\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-diglet|5\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-diglet\",\"scriptKey\":\"cell.js*[\\\"vps-diglet|5\\\"]\",\"title\":\"cell.js vps-diglet|5\",\"threads\":1,\"temporary\":false}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-diglet|6\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.6099999991584,\"ramUsage\":2,\"server\":\"vps-diglet\",\"scriptKey\":\"cell.js*[\\\"vps-diglet|6\\\"]\",\"title\":\"cell.js vps-diglet|6\",\"threads\":1,\"temporary\":false}}]}},\"vps-poochyena\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-poochyena\",\"httpPortOpen\":false,\"ip\":\"54.7.3.3\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"scripts\":{\"ctor\":\"JSONMap\",\"data\":[[\"utils.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\\n\",\"filename\":\"utils.js\",\"server\":\"vps-poochyena\"}}],[\"cell.js\",{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"server\":\"vps-poochyena\"}}]]},\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":{\"ctor\":\"JSONMap\",\"data\":[]},\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-poochyena|0\"],\"dataMap\":{\"n00dles\":[0,0,0,595]},\"filename\":\"cell.js\",\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":6863.323005491328,\"onlineMoneyMade\":0,\"onlineRunningTime\":3334.809999999158,\"ramUsage\":2,\"server\":\"vps-poochyena\",\"scriptKey\":\"cell.js*[\\\"vps-poochyena|0\\\"]\",\"title\":\"cell.js vps-poochyena|0\",\"threads\":1,\"temporary\":false}}]}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"favor\":0,\"playerReputation\":0}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"favor\":11.8763,\"isBanned\":false,\"isMember\":true,\"playerReputation\":668838.627103387}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":177.7539,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":168.7446,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"favor\":78.525,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":1.0212,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"favor\":64.19149999999999,\"isBanned\":false,\"isMember\":true,\"playerReputation\":2482.9042391552202}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":7.6979,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":67.5874,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"favor\":0,\"isBanned\":false,\"isMember\":false,\"playerReputation\":0}}}","AliasesSave":"{\"analyse\":\"analyze\",\"traceroute\":\"./traceroute.js\",\"reach\":\"./reach.js\",\"biotic\":\"./biotic.js\"}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":13874.507739444412,\"lastPrice\":13861.971694138305,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.41,\"b\":true,\"otlkMag\":10.343862732750118,\"otlkMagForecast\":70.44573300214044,\"cap\":207322696,\"spreadPerc\":0.4,\"shareTxForMovement\":47842,\"shareTxUntilMovement\":23314,\"totalShares\":122900000,\"maxShares\":24600000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":38279.62842253786,\"lastPrice\":38243.35603516567,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.43,\"b\":false,\"otlkMag\":19.670601218491168,\"otlkMagForecast\":29.062008504222263,\"cap\":470437673,\"spreadPerc\":0.2,\"shareTxForMovement\":53975,\"shareTxUntilMovement\":32025,\"totalShares\":97400000,\"maxShares\":19500000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":8131.32210712178,\"lastPrice\":8143.876938779002,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":13.07854131405186,\"otlkMagForecast\":37.14368725704868,\"cap\":243954584,\"spreadPerc\":0.4,\"shareTxForMovement\":64549,\"shareTxUntilMovement\":64549,\"totalShares\":118100000,\"maxShares\":23600000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":13875.360867095611,\"lastPrice\":13854.275333603595,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":9.63043283567157,\"otlkMagForecast\":39.45265844653403,\"cap\":338462197,\"spreadPerc\":0.4,\"shareTxForMovement\":64638,\"shareTxUntilMovement\":64638,\"totalShares\":60200000,\"maxShares\":12000000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":23055.899648205384,\"lastPrice\":23090.989606540603,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":12.36514741320072,\"otlkMagForecast\":61.44685871055164,\"cap\":772970255,\"spreadPerc\":0.5,\"shareTxForMovement\":56012,\"shareTxUntilMovement\":56012,\"totalShares\":52900000,\"maxShares\":10600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":12816.375818829862,\"lastPrice\":12846.90679413755,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.08,\"b\":true,\"otlkMag\":12.637720232910775,\"otlkMagForecast\":61.36905467509789,\"cap\":82304325,\"spreadPerc\":0.2,\"shareTxForMovement\":49156,\"shareTxUntilMovement\":15638,\"totalShares\":33000000,\"maxShares\":6600000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":37863.185564243715,\"lastPrice\":37793.16200146193,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.84,\"b\":false,\"otlkMag\":8.30014361244817,\"otlkMagForecast\":40.2017094624627,\"cap\":307819828,\"spreadPerc\":0.6,\"shareTxForMovement\":42330,\"shareTxUntilMovement\":42330,\"totalShares\":118100000,\"maxShares\":23600000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":32433.04300571004,\"lastPrice\":32521.750655187083,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.24,\"b\":false,\"otlkMag\":16.108211347038974,\"otlkMagForecast\":34.99847565914491,\"cap\":635507436,\"spreadPerc\":0.2,\"shareTxForMovement\":62684,\"shareTxUntilMovement\":40333,\"totalShares\":62600000,\"maxShares\":12500000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":35748.108568229654,\"lastPrice\":35685.13923839264,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":5.38959801013019,\"otlkMagForecast\":57.85676290313263,\"cap\":90233001,\"spreadPerc\":0.9,\"shareTxForMovement\":103993,\"shareTxUntilMovement\":103993,\"totalShares\":58000000,\"maxShares\":11600000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":12977.642248034446,\"lastPrice\":12995.676080715863,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.63,\"b\":false,\"otlkMag\":10.538771238222745,\"otlkMagForecast\":39.35051446925277,\"cap\":145205004,\"spreadPerc\":1,\"shareTxForMovement\":106369,\"shareTxUntilMovement\":98951,\"totalShares\":143400000,\"maxShares\":28700000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":21554.197396613552,\"lastPrice\":21580.345863693037,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":true,\"otlkMag\":7.216359774166678,\"otlkMagForecast\":58.50815563264921,\"cap\":221853916,\"spreadPerc\":0.2,\"shareTxForMovement\":38695,\"shareTxUntilMovement\":38695,\"totalShares\":46200000,\"maxShares\":9200000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":3123.721950861943,\"lastPrice\":3129.096210707636,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.78,\"b\":false,\"otlkMag\":6.820601857949525,\"otlkMagForecast\":41.70799116411152,\"cap\":75909201,\"spreadPerc\":0.9,\"shareTxForMovement\":82112,\"shareTxUntilMovement\":82112,\"totalShares\":116600000,\"maxShares\":23300000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":19609.34979413195,\"lastPrice\":19639.194271153276,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":false,\"otlkMag\":7.729348371012082,\"otlkMagForecast\":41.91500590156382,\"cap\":146756471,\"spreadPerc\":0.4,\"shareTxForMovement\":53597,\"shareTxUntilMovement\":53597,\"totalShares\":38700000,\"maxShares\":7700000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":14848.15912602891,\"lastPrice\":14831.801675985542,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.5,\"b\":false,\"otlkMag\":9.984656141805276,\"otlkMagForecast\":39.98442125503587,\"cap\":176113461,\"spreadPerc\":1,\"shareTxForMovement\":103278,\"shareTxUntilMovement\":77772,\"totalShares\":50100000,\"maxShares\":10000000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":15295.527411005578,\"lastPrice\":15316.107439905201,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":6.05371197709349,\"otlkMagForecast\":56.975295260997925,\"cap\":97291670,\"spreadPerc\":0.4,\"shareTxForMovement\":63895,\"shareTxUntilMovement\":63895,\"totalShares\":52700000,\"maxShares\":10500000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":15308.545469295084,\"lastPrice\":15331.506666564346,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.68,\"b\":false,\"otlkMag\":6.021518349851317,\"otlkMagForecast\":44.671514062830255,\"cap\":54071504,\"spreadPerc\":0.5,\"shareTxForMovement\":107020,\"shareTxUntilMovement\":107020,\"totalShares\":52800000,\"maxShares\":10600000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":28853.459879188435,\"lastPrice\":28903.737726843297,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":8.11365693405737,\"otlkMagForecast\":58.147885368277954,\"cap\":335670116,\"spreadPerc\":0.4,\"shareTxForMovement\":67410,\"shareTxUntilMovement\":67410,\"totalShares\":41100000,\"maxShares\":8200000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":25749.405865682347,\"lastPrice\":25780.643748457835,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":true,\"otlkMag\":10.441952901057746,\"otlkMagForecast\":59.89914385693733,\"cap\":309987626,\"spreadPerc\":0.9,\"shareTxForMovement\":112689,\"shareTxUntilMovement\":112689,\"totalShares\":28400000,\"maxShares\":5700000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":26928.139710224335,\"lastPrice\":26883.074208370097,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":true,\"otlkMag\":6.270903180741237,\"otlkMagForecast\":56.450257785104895,\"cap\":541254848,\"spreadPerc\":0.4,\"shareTxForMovement\":113464,\"shareTxUntilMovement\":113464,\"totalShares\":26300000,\"maxShares\":5300000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":2143.155406039424,\"lastPrice\":2131.168429836417,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.55,\"b\":false,\"otlkMag\":6.885355552882073,\"otlkMagForecast\":45.5154432174322,\"cap\":37076283,\"spreadPerc\":1.1,\"shareTxForMovement\":31132,\"shareTxUntilMovement\":31132,\"totalShares\":75700000,\"maxShares\":15100000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":6162.049098684503,\"lastPrice\":6178.767007590398,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.23,\"b\":false,\"otlkMag\":6.576605340297486,\"otlkMagForecast\":43.206696297853966,\"cap\":41814569,\"spreadPerc\":0.9,\"shareTxForMovement\":44406,\"shareTxUntilMovement\":44406,\"totalShares\":66300000,\"maxShares\":13300000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":4638.152367819329,\"lastPrice\":4632.532412733085,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.55,\"b\":true,\"otlkMag\":5.371512931277527,\"otlkMagForecast\":54.62924077624082,\"cap\":32516857,\"spreadPerc\":0.9,\"shareTxForMovement\":71076,\"shareTxUntilMovement\":71076,\"totalShares\":35200000,\"maxShares\":7000000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":918.1162369265799,\"lastPrice\":914.1239479874707,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.98,\"b\":true,\"otlkMag\":8.184138860758098,\"otlkMagForecast\":58.29970074054121,\"cap\":100403863,\"spreadPerc\":0.8,\"shareTxForMovement\":82223,\"shareTxUntilMovement\":82223,\"totalShares\":42000000,\"maxShares\":8400000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":2627.3338598566984,\"lastPrice\":2636.432292910077,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.57,\"b\":false,\"otlkMag\":6.375247256642596,\"otlkMagForecast\":45.006541070300266,\"cap\":35440029,\"spreadPerc\":0.9,\"shareTxForMovement\":69642,\"shareTxUntilMovement\":69642,\"totalShares\":33300000,\"maxShares\":6700000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":6665.022849822759,\"lastPrice\":6678.547970806809,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.92,\"b\":false,\"otlkMag\":3.834054086294167,\"otlkMagForecast\":49.1213824351549,\"cap\":107421695,\"spreadPerc\":0.5,\"shareTxForMovement\":90136,\"shareTxUntilMovement\":90136,\"totalShares\":38700000,\"maxShares\":7700000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":1985.8268812929925,\"lastPrice\":1995.2880944058325,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.16,\"b\":true,\"otlkMag\":4.235748411261175,\"otlkMagForecast\":50.65865394286836,\"cap\":28753350,\"spreadPerc\":0.9,\"shareTxForMovement\":32143,\"shareTxUntilMovement\":32143,\"totalShares\":14300000,\"maxShares\":2900000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":1798.0456501176513,\"lastPrice\":1794.0883815785803,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1,\"b\":true,\"otlkMag\":5.259311720604386,\"otlkMagForecast\":57.511752679766964,\"cap\":24370602,\"spreadPerc\":1.1,\"shareTxForMovement\":82213,\"shareTxUntilMovement\":82213,\"totalShares\":40900000,\"maxShares\":8200000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":3863.6255042874504,\"lastPrice\":3856.8198320857505,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":false,\"otlkMag\":1.4775952070134868,\"otlkMagForecast\":46.367760901157205,\"cap\":27228318,\"spreadPerc\":0.9,\"shareTxForMovement\":99493,\"shareTxUntilMovement\":99493,\"totalShares\":10300000,\"maxShares\":2100000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":1289.2781835650533,\"lastPrice\":1294.6529565626063,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.89,\"b\":false,\"otlkMag\":2.087686121572208,\"otlkMagForecast\":47.12492867230451,\"cap\":3169653,\"spreadPerc\":1.3,\"shareTxForMovement\":20139,\"shareTxUntilMovement\":20139,\"totalShares\":19600000,\"maxShares\":3900000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":104.01790612257281,\"lastPrice\":104.66950171185157,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.84,\"b\":true,\"otlkMag\":5.297152680891258,\"otlkMagForecast\":54.80219802382406,\"cap\":4237470,\"spreadPerc\":1.1,\"shareTxForMovement\":35975,\"shareTxUntilMovement\":35975,\"totalShares\":162800000,\"maxShares\":32600000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":173.56051582968482,\"lastPrice\":172.9615515633796,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.57,\"b\":false,\"otlkMag\":14.923228046853946,\"otlkMagForecast\":38.41046916515883,\"cap\":24624522,\"spreadPerc\":1,\"shareTxForMovement\":34199,\"shareTxUntilMovement\":34199,\"totalShares\":90300000,\"maxShares\":18100000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":17447.906647930675,\"lastPrice\":17474.846366693484,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":7.336743923744072,\"otlkMagForecast\":41.909084364569715,\"cap\":119071959,\"spreadPerc\":0.8,\"shareTxForMovement\":186602,\"shareTxUntilMovement\":186602,\"totalShares\":16300000,\"maxShares\":3300000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":26470.436323459584,\"lastPrice\":26432.53940183809,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":11.440937398072341,\"otlkMagForecast\":62.519023753720305,\"cap\":313998708,\"spreadPerc\":0.9,\"shareTxForMovement\":167241,\"shareTxUntilMovement\":167241,\"totalShares\":20800000,\"maxShares\":4200000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":333910,\"lastUpdate\":1698741742301,\"ticksUntilCycle\":13}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":10,\"AutoexecScript\":\"\",\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"EnableHistorySearch\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":2,\"opened\":true},\"EditorTheme\":{\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}},\"base\":\"vs-dark\",\"inherit\":true},\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":true,\"MonacoTabSize\":2,\"MonacoDetectIndentation\":false,\"MonacoFontFamily\":\"Lucida Console\",\"MonacoFontSize\":20,\"MonacoFontLigatures\":false,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"MonacoCursorStyle\":\"line\",\"MonacoCursorBlinking\":\"blink\",\"hideTrailingDecimalZeros\":false,\"hideThousandsSeparator\":false,\"useEngineeringNotation\":false,\"disableSuffixes\":false}","VersionSave":"35","AllGangsSave":"","LastExportBonus":"1698741745885","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"fragments\":[],\"isBonusCharging\":false,\"storedCycles\":0}}"}}