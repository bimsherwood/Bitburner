{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":230,\"hp\":12,\"max_hp\":12,\"strength\":20,\"defense\":20,\"dexterity\":20,\"agility\":20,\"charisma\":35,\"intelligence\":0,\"hacking_chance_mult\":1.24124,\"hacking_speed_mult\":1.24124,\"hacking_money_mult\":1.24124,\"hacking_grow_mult\":1.24124,\"hacking_exp\":169833.48892987028,\"strength_exp\":325.5871819199813,\"defense_exp\":325.5871819199813,\"dexterity_exp\":325.5871819199813,\"agility_exp\":325.5871819199813,\"charisma_exp\":651.1743638399626,\"intelligence_exp\":0,\"hacking_mult\":1.24124,\"strength_mult\":1.24124,\"defense_mult\":1.24124,\"dexterity_mult\":1.24124,\"agility_mult\":1.24124,\"charisma_mult\":1.3405392,\"hacking_exp_mult\":1.24124,\"strength_exp_mult\":1.24124,\"defense_exp_mult\":1.24124,\"dexterity_exp_mult\":1.24124,\"agility_exp_mult\":1.24124,\"charisma_exp_mult\":1.24124,\"company_rep_mult\":1.24124,\"faction_rep_mult\":1.24124,\"money\":318194.4915739588,\"city\":\"Sector-12\",\"location\":\"Alpha Enterprises\",\"jobs\":{\"Joe's Guns\":\"Employee\"},\"companyName\":\"Joe's Guns\",\"currentServer\":\"home\",\"purchasedServers\":[\"vps-absol\",\"vps-arbok\",\"vps-arcanine\",\"vps-bonsly\",\"vps-buneary\",\"vps-charmander\",\"vps-clefairy\",\"vps-cubone\",\"vps-dartrix\",\"vps-diglet\",\"vps-dragonite\",\"vps-eevee\",\"vps-ekans\",\"vps-gengar\",\"vps-marowak\",\"vps-meowth\",\"vps-pikachu\",\"vps-rattata\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":60368.599999991995,\"ram\":4,\"totalMoneyGenerated\":11609395.75814249,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":60308.39999999205,\"ram\":4,\"totalMoneyGenerated\":11608108.687051337,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":60248.39999999211,\"ram\":4,\"totalMoneyGenerated\":11606594.981051678,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":60248.1999999921,\"ram\":4,\"totalMoneyGenerated\":11604316.969748398,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":60188.19999999216,\"ram\":4,\"totalMoneyGenerated\":11602575.930642737,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":59947.99999999238,\"ram\":4,\"totalMoneyGenerated\":11595101.580123542,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":59347.79999999292,\"ram\":4,\"totalMoneyGenerated\":11563343.447911913,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":58627.79999999358,\"ram\":4,\"totalMoneyGenerated\":11489223.120090269,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":1,\"level\":96,\"moneyGainRatePerSecond\":198.17063642375993,\"onlineTimeSeconds\":56407.5999999956,\"ram\":4,\"totalMoneyGenerated\":11149655.553653153,\"name\":\"hacknet-node-8\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"Netburners\",\"NiteSec\"],\"factionInvitations\":[],\"queuedAugmentations\":[],\"augmentations\":[],\"sourceFiles\":[{\"lvl\":2,\"n\":1},{\"lvl\":1,\"n\":3}],\"numPeopleKilled\":0,\"karma\":0,\"crime_money_mult\":1.24124,\"crime_success_mult\":1.24124,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Faction\",\"workCostMult\":5,\"workExpMult\":4,\"currentWorkFactionName\":\"NiteSec\",\"currentWorkFactionDescription\":\"carrying out hacking contracts\",\"workHackExpGainRate\":0.186186,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0.2928053333333333,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":12.846833999999989,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":20.203567999999997,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":100,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":16600,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":72000000,\"work_money_mult\":1.3405392,\"hacknet_node_money_mult\":1.24124,\"hacknet_node_purchase_cost_mult\":0.75924,\"hacknet_node_ram_cost_mult\":0.75924,\"hacknet_node_core_cost_mult\":0.75924,\"hacknet_node_level_cost_mult\":0.75924,\"hasWseAccount\":false,\"hasTixApiAccess\":false,\"has4SData\":false,\"has4SDataTixApi\":false,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":1,\"lastUpdate\":1643766798700,\"totalPlaytime\":2988387000,\"playtimeSinceLastAug\":60409000,\"playtimeSinceLastBitnode\":60409000,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":0,\"hacknet\":103828316.02842505,\"hacknet_expenses\":-4554286.718534578,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":317194.4915739588,\"work\":483165.18169939215,\"servers\":-99440000,\"other\":0,\"augmentations\":0}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":0,\"hacknet\":103828316.02842505,\"hacknet_expenses\":-4554286.718534578,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":317194.4915739588,\"work\":483165.18169939215,\"servers\":-99440000,\"other\":0,\"augmentations\":0}},\"scriptProdSinceLastAug\":0,\"exploits\":[\"N00dles\"],\"achievements\":[{\"ID\":\"SF1.1\",\"unlockedOn\":1641675692814},{\"ID\":\"NS2\",\"unlockedOn\":1641675692833},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1641675692835},{\"ID\":\"CORPORATION\",\"unlockedOn\":1641675692837},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1641681152839},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1641682892838},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1641720476074},{\"ID\":\"TOR\",\"unlockedOn\":1641723476086},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1641727796085},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1641727796089},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1641727856070},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1641799780764},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1641814264172},{\"ID\":\"4S\",\"unlockedOn\":1641975418701},{\"ID\":\"NITESEC\",\"unlockedOn\":1642056532162},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1642061872136},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1642062772133},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1642067572141},{\"ID\":\"DONATION\",\"unlockedOn\":1642163691476},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1642215220681},{\"ID\":\"TRAVEL\",\"unlockedOn\":1642332715556},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1642367327040},{\"ID\":\"FROZE\",\"unlockedOn\":1642487469491},{\"ID\":\"N00DLES\",\"unlockedOn\":1642490949506},{\"ID\":\"REPUTATION_10M\",\"unlockedOn\":1642575587094},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1643093827472},{\"ID\":\"SF3.1\",\"unlockedOn\":1643274787396},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1643613920959},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1643613920988},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1643620701336},{\"ID\":\"CORPORATION_BRIBE\",\"unlockedOn\":1643698803558}],\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"3.8.2.3\",\"isConnectedTo\":true,\"maxRam\":32,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"fl1ght.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\"],\"ramUsed\":14.65,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[2],\"dataMap\":{},\"filename\":\"biotic.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":53289.205,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7073.009999995758,\"pid\":1,\"ramUsage\":14.65,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///dabc65ad-eeaa-4726-99bd-bf5d45e74dad\",\"moduleSequenceNumber\":105033},{\"filename\":\"utils.js\",\"url\":\"blob:file:///2e4e11a7-ca2b-4e91-afca-2cd5426a60a8\",\"moduleSequenceNumber\":105033},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///6fe5fa63-52f8-49b6-88de-6c9fa6bf7992\",\"moduleSequenceNumber\":105017},{\"filename\":\"vps.js\",\"url\":\"blob:file:///f8ee9a6b-daf0-4283-a451-43c6bf3521c5\",\"moduleSequenceNumber\":105021},{\"filename\":\"utils.js\",\"url\":\"blob:file:///d536b6f6-6df2-418f-b2cd-900ca37ff8be\",\"moduleSequenceNumber\":105033},{\"filename\":\"utils.js\",\"url\":\"blob:file:///f7692798-0732-4c57-9232-c1f4a4e85564\",\"moduleSequenceNumber\":105033},{\"filename\":\"root-server.js\",\"url\":\"blob:file:///99f03db6-8737-417f-bfe2-ec4330213fa8\",\"moduleSequenceNumber\":105020},{\"filename\":\"utils.js\",\"url\":\"blob:file:///66bd0b78-84bf-4e87-8d8b-f6c6c3ca2274\",\"moduleSequenceNumber\":105033},{\"filename\":\"install-cell.js\",\"url\":\"blob:file:///7f452d1f-36c5-46b1-9e72-4b45695fb7a4\",\"moduleSequenceNumber\":105032},{\"filename\":\"utils.js\",\"url\":\"blob:file:///d37f53c6-c370-48fb-b706-712fc95c61d7\",\"moduleSequenceNumber\":105033},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///c0a780dd-29de-42a0-902e-f0ac2c4c0d2b\",\"moduleSequenceNumber\":105017},{\"filename\":\"utils.js\",\"url\":\"blob:file:///c7cffecd-7bf3-4a44-be44-e6f39329bf6a\",\"moduleSequenceNumber\":105033},{\"filename\":\"find-server.js\",\"url\":\"blob:file:///33617ce5-988b-410c-87df-8abc416f5acc\",\"moduleSequenceNumber\":105025},{\"filename\":\"utils.js\",\"url\":\"blob:file:///899d4ee3-2e4f-4704-8a01-74a51e964f8b\",\"moduleSequenceNumber\":105033},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///0a6eb28f-04fa-4802-ad0e-f51867870114\",\"moduleSequenceNumber\":105017},{\"filename\":\"biotic.js\",\"url\":\"blob:file:///cc122a86-dd6c-4ec7-9317-ce2e9ecef07d\",\"moduleSequenceNumber\":105044}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport function InstallThief (ns){\\n  \\n  var scriptName = \\\"thief.js\\\";\\n  var utilsName = \\\"utils.js\\\";\\n  \\n  async function sendScript(host){\\n    await ns.scp(scriptName, host);\\n    await ns.scp(utilsName, host);\\n  }\\n  \\n  async function removeScript(host){\\n    await ns.rm(scriptName, host);\\n    await ns.rm(utilsName, host);\\n  }\\n  \\n  async function stopScript(host){\\n    await ns.scriptKill(scriptName, host);\\n  }\\n  \\n  async function startScript(host, target, threadCount){\\n    await ns.exec(scriptName, host, threadCount, target);\\n  }\\n  \\n  async function install(host, target, threadCount) {\\n    await stopScript(host);\\n    await sendScript(host);\\n    await startScript(host, target, threadCount);\\n  }\\n  \\n  async function installMax(host, target) {\\n    var ramRequired = await ns.getScriptRam(scriptName);\\n    await stopScript(host);\\n    var ramMax = await ns.getServerMaxRam(host);\\n    var ramUsed = await ns.getServerUsedRam(host);\\n    var ramAvailable = ramMax - ramUsed;\\n    var threadCount = Math.floor(ramAvailable / ramRequired);\\n    await sendScript(host);\\n    if (threadCount > 0){\\n      await startScript(host, target, threadCount);\\n    }\\n  }\\n\\n  async function uninstall(host) {\\n    await stopScript(host);\\n    await removeScript(host);\\n  }\\n  \\n  return {\\n    install,\\n    installMax,\\n    uninstall\\n  };\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  install-thief.js install <host> <target> <threads>\\\");\\n  ns.tprint(\\\"  install-thief.js install-max <host> <target>\\\");\\n  ns.tprint(\\\"  install-thief.js uninstall <host>\\\");\\n}\\n\\nfunction readArgs(ns){\\n  \\n  var argc  = ns.args.length;\\n  if(argc <= 0){\\n    return null;\\n  }\\n  \\n  var command = ns.args[0];\\n  if (command == \\\"install\\\" && argc == 4){\\n    var host = ns.args[1];\\n    var target = ns.args[2];\\n    var threads = ns.args[3];\\n    return {\\n      mode: \\\"install\\\",\\n      host: host,\\n      target: target,\\n      threads: threads\\n    };\\n  } else if (command == \\\"install-max\\\" && argc == 3){\\n    var host = ns.args[1];\\n    var target = ns.args[2];\\n    return {\\n      mode: \\\"install-max\\\",\\n      host: host,\\n      target: target\\n    };\\n  } else if(command == \\\"uninstall\\\" && argc == 2) {\\n    var host = ns.args[1];\\n    return {\\n      mode: \\\"uninstall\\\",\\n      host: host\\n    };\\n  } else {\\n    return null;\\n  }\\n  \\n}\\n\\nexport async function main(ns) {\\n  var installThief = new InstallThief(ns);\\n  var options = readArgs(ns);\\n  if (options == null){\\n    printHelp(ns);\\n  } else if(options.mode == \\\"install\\\"){\\n    await installThief.install(options.host, options.target, options.threads);\\n  } else if(options.mode == \\\"install-max\\\"){\\n    await installThief.installMax(options.host, options.target);\\n  } else if(options.mode == \\\"uninstall\\\"){\\n    await installThief.uninstall(options.host);\\n  } else {\\n    printHelp(ns);\\n  }\\n}\",\"filename\":\"install-thief.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"install-thief.js\",\"url\":\"blob:file:///9126d822-67d4-4460-beee-1de55208545f\"}],\"dependents\":[],\"ramUsage\":5.7,\"server\":\"home\",\"moduleSequenceNumber\":81,\"_hash\":\"0f3b7ef3c2e9d3e667797a624a542ec5091804d3e5176e973956098b5141cb04\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach } from \\\"utils.js\\\";\\n\\nexport function Crawler(ns, options){\\n  \\n  var resultLimit = options.resultLimit;\\n  var rootHost = options.rootHost;\\n  \\n  // These host names have already been scanned.\\n  var completeHosts = [];\\n  \\n  // These host names are recently discovered and\\n  // may not have been scanned.\\n  var discoveredHosts = [];\\n  \\n  // Returns false when there is no more work to do.\\n  async function step(){\\n    \\n    // Run out\\n    if(discoveredHosts.length == 0){\\n      return false;\\n    }\\n    \\n    // Result limit reached\\n    if(discoveredHosts.length >= resultLimit){\\n      return false;\\n    }\\n    \\n    // Processing\\n    var hostname = discoveredHosts.pop();\\n    var alreadyScanned = completeHosts.indexOf(hostname) >= 0;\\n    if (!alreadyScanned){\\n      completeHosts.push(hostname);\\n      var siblings = await ns.scan(hostname);\\n      forEach(siblings, function(i, e){\\n        discoveredHosts.push(e);\\n      });\\n    }\\n    return true;\\n    \\n  }\\n  \\n  async function crawl(){\\n    discoveredHosts.push(rootHost);\\n    while(await step()){\\n      await ns.sleep(10);\\n    }\\n    return completeHosts;\\n  }\\n  \\n  return {\\n    crawl\\n  };\\n  \\n}\",\"filename\":\"crawler.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///aa74eb12-590d-4ca3-8f29-85b8bd84232b\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///2aa5749e-7362-45a2-b845-8008ea0c1f37\"},{\"filename\":\"database.js\",\"url\":\"blob:file:///6c5a029b-41a8-4082-8894-42995b541748\"},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///4df1f741-2d72-4f26-9107-230560380b52\"}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":82,\"_hash\":\"4025bb3b12bef0fdbdc8e7663a1357bfdd9b6973b5a57353f9cfc24aa38ef6a7\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { Cache } from \\\"./cache.js\\\";\\nimport { Crawler } from \\\"./crawler.js\\\";\\nimport { InstallThief } from \\\"./install-thief.js\\\";\\nimport { rootServer } from \\\"./root-server.js\\\";\\nimport { ServerFinder } from \\\"./find-server.js\\\";\\nimport { forEach, forEachAsync } from \\\"./utils.js\\\";\\nimport { getVpsNames, VpsManager } from \\\"./vps.js\\\";\\n\\nexport function Reach(ns, options){\\n  \\n  var targetLimit = options.targets;\\n  var crawler = options.crawler;\\n  var installer = options.installer;\\n  var decommission = options.decommission;\\n  var trace = options.trace;\\n  \\n  var serverTargets = null;\\n  \\n  async function init(){\\n    var cacheCtxt = new Cache(ns, \\\"reach\\\");\\n    var cache = await cacheCtxt.open();\\n    serverTargets = cache.load(\\\"server-targets\\\");\\n    if (serverTargets == null){\\n      serverTargets = { };\\n      cache.save(\\\"server-targets\\\", serverTargets);\\n    }\\n  }\\n  \\n  function getCurrentServerTarget(server){\\n    return serverTargets[server] || null;\\n  }\\n  \\n  function setCurrentServerTarget(server, target){\\n    serverTargets[server] = target;\\n  }\\n  \\n  async function generateSchedule(servers){\\n    \\n    var hostFinder = new ServerFinder(ns, {\\n      hostnames: servers,\\n      limit: null,\\n      onlyWithRootAccess: true,\\n      onlyNotHome: true,\\n      onlyWithMoney: false,\\n      onlyNotMine: false\\n    });\\n    var bestHosts = await hostFinder.findBestHosts();\\n    var targetFinder = new ServerFinder(ns, {\\n      hostnames: servers,\\n      limit: targetLimit,\\n      onlyWithRootAccess: true,\\n      onlyNotHome: true,\\n      onlyWithMoney: true,\\n      onlyNotMine: true\\n    });\\n    var bestTargets = await targetFinder.findBestTargets();\\n    \\n    var schedule = {};\\n    if(bestTargets.length > 0){\\n      forEach(bestHosts, function(i, host){\\n        var correspondingTargetIndex = i % bestTargets.length;\\n        var correspondingTarget = bestTargets[correspondingTargetIndex];\\n        schedule[host] = correspondingTarget;\\n      });\\n    }\\n    return schedule;\\n    \\n  }\\n  \\n  async function tryRootServer(hostname){\\n    var success = await rootServer(ns, hostname);\\n    if (success){\\n      await trace(\\\"Rooted server \\\" + hostname);\\n    }\\n  }\\n  \\n  async function tryInstall(hostname, target){\\n    var canInstall =\\n      await ns.hasRootAccess(hostname) &&\\n      await ns.hasRootAccess(target) &&\\n      hostname != \\\"home\\\";\\n    if (canInstall){\\n      await trace(\\\"Updating: \\\" + hostname + \\\" targeting \\\" + target);\\n      await installer.installMax(hostname, target);\\n      setCurrentServerTarget(hostname, target);\\n    }\\n  }\\n  \\n  async function deployOn(host){\\n    var servers = await crawler.crawl();\\n    var currentTarget = getCurrentServerTarget(host);\\n    var target;\\n    if(currentTarget != null){\\n      target = currentTarget;\\n    } else {\\n      var newSchedule = await generateSchedule(servers);\\n      target = newSchedule[host];\\n      await trace(\\\"New server \\\" + host);\\n      await trace(newSchedule);\\n    }\\n    if(target != null){\\n      await tryInstall(host, target);\\n    } else {\\n      await trace(\\\"No target allocated to \\\", host);\\n      return;\\n    }\\n  }\\n  \\n  async function deployEverywhere(forceReinstall){\\n    \\n    // Root servers\\n    var servers = await crawler.crawl();\\n    await forEachAsync(servers, async function(i, e){\\n      await tryRootServer(e);\\n    });\\n    \\n    // Schedule hosts and targets\\n    var schedule = await generateSchedule(servers);\\n    await forEachAsync(servers, async function(i, e){\\n      var newTarget = schedule[e];\\n      var currentTarget = getCurrentServerTarget(e);\\n      var reinstall =\\n        newTarget != currentTarget ||\\n        forceReinstall;\\n      if (reinstall && newTarget){\\n        await tryInstall(e, newTarget);\\n      }\\n    });\\n    \\n  }\\n  \\n  async function removeEverywhere(){\\n    var servers = await crawler.crawl();\\n    await forEachAsync(servers, async function(i, e){\\n      if(e != \\\"home\\\"){\\n        await installer.uninstall(e);\\n      }\\n    });\\n  }\\n  \\n  async function upgradeVps(){\\n    var vpsHosts = await getVpsNames();\\n    var manager = new VpsManager(ns, {\\n      hostnames: vpsHosts,\\n      decommission: decommission,\\n      commission: deployOn,\\n      trace: trace\\n    });\\n    await manager.upgrade();\\n  }\\n  \\n  async function manage(){\\n    var upgradePeriod = 60*1000;\\n    var scanPeriod = 5*upgradePeriod;\\n    for(;;){\\n      await deployEverywhere(false);\\n      for(var i = 0; i < scanPeriod; i += upgradePeriod){\\n        await upgradeVps();\\n        await ns.sleep(upgradePeriod);\\n      }\\n    }\\n  }\\n  \\n  return {\\n    init,\\n    deployEverywhere,\\n    deployOn,\\n    manage,\\n    removeEverywhere\\n  };\\n  \\n}\\n\\nexport async function main(ns) {\\n  \\n  var scanLazy =\\n    ns.args.length == 2 &&\\n    ns.args[0] == \\\"scan\\\" &&\\n    ns.args[1] != \\\"--force\\\";\\n  var scanForce =\\n    ns.args.length == 3 &&\\n    ns.args[0] == \\\"scan\\\" &&\\n    ns.args[2] == \\\"--force\\\";\\n  var scan = scanLazy || scanForce;\\n  var install =\\n    ns.args.length == 3 &&\\n    ns.args[0] == \\\"install\\\";\\n  var manage =\\n    ns.args.length == 2 &&\\n    ns.args[0] == \\\"manage\\\";\\n  var uninstall = \\n    ns.args.length == 1 &&\\n    ns.args[0] == \\\"uninstall\\\";\\n  \\n  var crawler = new Crawler(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var installer = new InstallThief(ns);\\n  var reach = new Reach(ns, {\\n    targets: ns.args[1],\\n    crawler: crawler,\\n    installer: installer,\\n    decommission: async function(hostname){ await ns.killall(hostname); },\\n    trace: manage ? ns.print : ns.tprint\\n  });\\n  \\n  if(scan){\\n    await reach.init();\\n    await reach.deployEverywhere(scanForce);\\n    ns.tprint(\\\"Done.\\\");\\n  } else if (install){\\n    var host = ns.args[2];\\n    await reach.init();\\n    await reach.deployOn(host);\\n    ns.tprint(\\\"Done.\\\");\\n  } else if (manage){\\n    await reach.init();\\n    await reach.manage();\\n  } else if (uninstall){\\n    await reach.init();\\n    await reach.removeEverywhere();\\n  } else {\\n    ns.tprint(\\\"Usage:\\\");\\n    ns.tprint(\\\"  reach.js scan <target limit> [--force]\\\");\\n    ns.tprint(\\\"  reach.js install <target limit> <host>\\\");\\n    ns.tprint(\\\"  reach.js manage <target limit>\\\");\\n    ns.tprint(\\\"  reach.js uninstall\\\");\\n  }\\n  \\n}\",\"filename\":\"reach.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"cache.js\",\"url\":\"blob:file:///001faa14-1772-479e-859f-ebc2c3e4a5ad\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///5ad2f1b7-de29-43e9-a1c9-5ad05b72656b\"},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///c822f0c8-6247-4649-b673-59aa32110c2a\"},{\"filename\":\"install-thief.js\",\"url\":\"blob:file:///2993a482-7a0c-43e9-82f8-170a56f8c46e\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///5ad2f1b7-de29-43e9-a1c9-5ad05b72656b\"},{\"filename\":\"root-server.js\",\"url\":\"blob:file:///a17a3384-75ea-46bd-9713-a08f83e82af0\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///5ad2f1b7-de29-43e9-a1c9-5ad05b72656b\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///5ad2f1b7-de29-43e9-a1c9-5ad05b72656b\"},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///c822f0c8-6247-4649-b673-59aa32110c2a\"},{\"filename\":\"find-server.js\",\"url\":\"blob:file:///591a9172-9124-41a9-a5cf-944f7f122f6c\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///5ad2f1b7-de29-43e9-a1c9-5ad05b72656b\"},{\"filename\":\"install-thief.js\",\"url\":\"blob:file:///2993a482-7a0c-43e9-82f8-170a56f8c46e\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///5ad2f1b7-de29-43e9-a1c9-5ad05b72656b\"},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///c822f0c8-6247-4649-b673-59aa32110c2a\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///5ad2f1b7-de29-43e9-a1c9-5ad05b72656b\"},{\"filename\":\"vps.js\",\"url\":\"blob:file:///2c6b91b2-90bc-4403-871b-d0cb35b046a9\"},{\"filename\":\"reach.js\",\"url\":\"blob:file:///ee8dbcc9-fbdf-4f87-96cd-7e6fbc876261\"}],\"dependents\":[],\"ramUsage\":14.55,\"server\":\"home\",\"moduleSequenceNumber\":83,\"_hash\":\"f6e74a99b8ec72b385246edbacfd7bb47e36c924cb4446216504133cfb72097e\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar caches = { };\\n\\nexport function Cache(ns, name){\\n  \\n  var localhost = ns.getHostname();\\n  var cache = null;\\n  \\n  function load(key){\\n    return cache[key];\\n  }\\n\\n  function save(key, value){\\n    cache[key] = value;\\n  }\\n  \\n  async function open(){\\n    \\n    if (typeof(caches[name]) == \\\"undefined\\\"){\\n      caches[name] = { };\\n    }\\n    cache = caches[name];\\n    \\n    return {\\n      load,\\n      save\\n    };\\n    \\n  }\\n  \\n  return {\\n    open\\n  };\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cache.js <cache-name> <key>\\\");\\n  ns.tprint(\\\"  cache.js <cache-name> <key> <value>\\\");\\n}\\n\\nexport async function main(ns){\\n  if (ns.args.length == 2){\\n    var dbName = ns.args[0];\\n    var key = ns.args[1];\\n    var cache = await (new Cache(ns, dbName)).open();\\n    ns.tprint(cache.load(key));\\n  } else if (ns.args.length == 3){\\n    var dbName = ns.args[0];\\n    var key = ns.args[1];\\n    var value = ns.args[2];\\n    var cache = await (new Cache(ns, dbName)).open();\\n    cache.save(key, value);\\n  } else {\\n    printHelp(ns);\\n  }\\n}\",\"filename\":\"cache.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"cache.js\",\"url\":\"blob:file:///97d096f0-4230-4d44-adff-5848b25dc87b\"}],\"dependents\":[],\"ramUsage\":1.65,\"server\":\"home\",\"moduleSequenceNumber\":84,\"_hash\":\"a52876974d759dc067cc9195f25882e6a0837254b2a06b0396ee79155e47dbcb\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEachAsync } from \\\"./utils.js\\\";\\n\\nexport async function portPoppers(ns){\\n  \\n  var possiblePoppers = [\\n    { bin: \\\"FTPCrack.exe\\\", invoke: ns.ftpcrack },\\n    { bin: \\\"BruteSSH.exe\\\", invoke: ns.brutessh },\\n    { bin: \\\"relaySMTP.exe\\\", invoke: ns.relaysmtp },\\n    { bin: \\\"HTTPWorm.exe\\\", invoke: ns.httpworm },\\n    { bin: \\\"SQLInject.exe\\\", invoke: ns.sqlinject }\\n  ];\\n  \\n  var installedPopppers = [];\\n  await forEachAsync(possiblePoppers, async function(i, e){\\n    if (await ns.fileExists(e.bin, \\\"home\\\")){\\n      installedPopppers.push(e);\\n    }\\n  });\\n  \\n  return installedPopppers;\\n  \\n}\\n\\nexport async function isVulnerable(ns, hostname) {\\n  var poppers = await portPoppers(ns);\\n  var myLevel = await ns.getHackingLevel();\\n  var requiredLevel = await ns.getServerRequiredHackingLevel(hostname);\\n  var portsRequired = await ns.getServerNumPortsRequired(hostname);\\n  return myLevel >= requiredLevel && poppers.length >= portsRequired;\\n}\\n\\nexport async function rootServer(ns, hostname){\\n  var hasRootAccess = await ns.hasRootAccess(hostname);\\n  var vulnerable = await isVulnerable(ns, hostname);\\n  if(!hasRootAccess && vulnerable){\\n    var poppers = await portPoppers(ns);\\n    await forEachAsync(poppers, async function(i, e){\\n      await e.invoke(hostname);\\n    });\\n    await ns.nuke(hostname);\\n    return true;\\n  } else {\\n    return false;\\n  }\\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  root-server.js <hostname>\\\");\\n}\\n\\nexport async function main(ns) {\\n  if (ns.args.length == 1){\\n    if(await rootServer(ns, ns.args[0])){\\n      ns.tprint(\\\"Success\\\");\\n    } else {\\n      ns.tprint(\\\"Failed\\\");\\n    }\\n  } else {\\n    printHelp(ns);\\n  }\\n}\",\"filename\":\"root-server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f8211d09-b368-4730-876f-7cb31ac74038\",\"moduleSequenceNumber\":70136},{\"filename\":\"root-server.js\",\"url\":\"blob:file:///43ed2d55-efc7-4f6a-a185-21b815a7e82c\",\"moduleSequenceNumber\":70252}],\"dependents\":[],\"ramUsage\":2.3,\"server\":\"home\",\"moduleSequenceNumber\":85,\"_hash\":\"c9ce84eef4d7eb129f762891298baeb41c5091a781cff0bc1643da1ff24af3b6\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { Crawler } from \\\"crawler.js\\\"\\nimport { forEachAsync } from \\\"utils.js\\\"\\n\\nexport function getVpsNames(){\\n  return [\\n    \\\"vps-absol\\\",\\n    \\\"vps-arbok\\\",\\n    \\\"vps-arcanine\\\",\\n    \\\"vps-bonsly\\\",\\n    \\\"vps-buneary\\\",\\n    \\\"vps-charmander\\\",\\n    \\\"vps-clefairy\\\",\\n    \\\"vps-cubone\\\",\\n    \\\"vps-dartrix\\\",\\n    \\\"vps-diglet\\\",\\n    \\\"vps-dragonite\\\",\\n    \\\"vps-eevee\\\",\\n    \\\"vps-ekans\\\",\\n    \\\"vps-gengar\\\",\\n    \\\"vps-marowak\\\",\\n    \\\"vps-meowth\\\",\\n    \\\"vps-pikachu\\\",\\n    \\\"vps-rattata\\\",\\n    \\\"vps-scorbunny\\\",\\n    \\\"vps-vulpix\\\"\\n  ];\\n}\\n\\nasync function quote(ns, size){\\n  var dollars = await ns.getPurchasedServerCost(size);\\n  var kilodollars = dollars / 1000;\\n  ns.tprint(\\\"$\\\" + kilodollars + \\\"k\\\");\\n}\\n\\nasync function buy(ns, name, size){\\n  var newServer = await ns.purchaseServer(name, size);\\n  if (newServer == \\\"\\\"){\\n    ns.tprint(\\\"Failed to purchase server.\\\");\\n  }\\n}\\n\\nasync function sell(ns, name){\\n  var success = await ns.deleteServer(name);\\n  if (!success){\\n    ns.tprint(\\\"Failed to sell server.\\\");\\n  }\\n}\\n\\nfunction Vps(ns, options){\\n  \\n  var hostname = options.hostname;\\n  var decommission = options.decommission;\\n  var commission = options.commission;\\n  var trace = options.trace;\\n  \\n  async function getSize(){\\n    var exists = await ns.serverExists(hostname);\\n    if (exists){\\n      return await ns.getServerMaxRam(hostname);\\n    } else {\\n      return 0;\\n    }\\n  }\\n  \\n  async function quote(size){\\n    return await ns.getPurchasedServerCost(size);\\n  }\\n  \\n  async function install(size){\\n    var exists = await ns.serverExists(hostname);\\n    if (exists){\\n      await decommission(hostname);\\n      var deleteSuccess = await ns.deleteServer(hostname);\\n      if(!deleteSuccess){\\n        await trace(\\\"Failed to delete server \\\" + hostname);\\n        return false;\\n      }\\n    }\\n    var boughtServerName = await ns.purchaseServer(hostname, size);\\n    if(boughtServerName == hostname){\\n      await ns.sleep(100);\\n      await commission(hostname);\\n      return true;\\n    } else {\\n      await trace(\\\"Failed to buy server \\\" + hostname);\\n      return false;\\n    }\\n  }\\n  \\n  async function considerUpgrade(levelIncrease){\\n    \\n    var currentSize = await getSize();\\n    var newSize;\\n    if (currentSize > 0){\\n      var newSize = currentSize * 2**levelIncrease;\\n    } else {\\n      var newSize = 2**(levelIncrease + 2); // At least 8\\n    }\\n    \\n    async function quoteNewSize(){\\n      return await quote(newSize);\\n    }\\n    \\n    async function installNewSize(){\\n      return await install(newSize);\\n    }\\n    \\n    return {\\n      hostname: hostname,\\n      size: newSize,\\n      quote: quoteNewSize,\\n      install: installNewSize\\n    };\\n    \\n  }\\n\\n  async function currentState(){\\n    \\n    var currentSize = await getSize();\\n    \\n    async function quoteNothing(){\\n      return 0;\\n    }\\n    \\n    async function doNothing(){ }\\n    \\n    return {\\n      hostname: hostname,\\n      size: currentSize,\\n      quote: quoteNothing,\\n      install: doNothing\\n    };\\n    \\n  }\\n  \\n  return {\\n    hostname,\\n    currentState,\\n    considerUpgrade\\n  };\\n  \\n}\\n\\nexport function VpsManager(ns, options){\\n  \\n  var hostnames = options.hostnames;\\n  var decommission = options.decommission;\\n  var commission = options.commission;\\n  var trace = options.trace;\\n  \\n  var servers = hostnames.map(\\n    function(hostname){\\n      return new Vps(ns, {\\n        hostname,\\n        decommission,\\n        commission,\\n        trace\\n      });\\n    });\\n    \\n  async function quoteAll(proposals){\\n    var quote = 0;\\n    await forEachAsync(proposals, async function(i, e){\\n      quote += await e.upgrade.quote();\\n    });\\n    return quote;\\n  }\\n  \\n  async function currentPortfolio(){\\n    var serverStates = [];\\n    await forEachAsync(servers, async function(i, e){\\n      serverStates.push({\\n        server: e,\\n        levelIncrease: 0,\\n        upgrade: await e.currentState()\\n      });\\n    });\\n    return serverStates;\\n  }\\n  \\n  async function planUpgrade(){\\n    \\n    var proposals = await currentPortfolio();\\n    proposals.sort(function(a, b){ return a.upgrade.size - b.upgrade.size; });\\n    \\n    for(var i = 0; i < proposals.length; i++){\\n      \\n      // Current proposal\\n      var proposal = proposals[i];\\n      var server = proposal.server;\\n      var levelIncreaseBefore = proposal.levelIncrease;\\n      var upgradeBefore = proposal.upgrade;\\n      var quoteBefore = await upgradeBefore.quote();\\n      var totalQuoteBefore = await quoteAll(proposals);\\n      \\n      // Upgrade Server as much as possible\\n      for(var levelIncreaseAfter = levelIncreaseBefore; ; levelIncreaseAfter++){\\n        \\n        var upgradeAfter = await server.considerUpgrade(levelIncreaseAfter);\\n        var quoteAfter = await upgradeAfter.quote();\\n        var totalQuoteAfter = totalQuoteBefore - quoteBefore + quoteAfter;\\n        \\n        // Can afford it? Update the proposal\\n        var funds = await ns.getServerMoneyAvailable(\\\"home\\\");\\n        if(totalQuoteAfter <= funds){\\n          proposal.levelIncrease = levelIncreaseAfter;\\n          proposal.upgrade = upgradeAfter;\\n        } else {\\n          break;\\n        }\\n        \\n      }\\n      \\n    }\\n    \\n    return proposals;\\n    \\n  }\\n  \\n  async function traceUpgrade(proposals){\\n    await forEachAsync(proposals, async function(i, e){\\n      if(e.levelIncrease > 0){\\n        await trace(e.server.hostname + \\\": +\\\" + e.levelIncrease);\\n      }\\n    });\\n  }\\n  \\n  async function executeUpgrade(proposals){\\n    await forEachAsync(proposals, async function(i, e){\\n      await e.upgrade.install();\\n    });\\n  }\\n  \\n  async function upgrade(){\\n    var proposals = await planUpgrade();\\n    await traceUpgrade(proposals);\\n    await executeUpgrade(proposals);\\n  }\\n  \\n  return {\\n    upgrade\\n  }\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  vps.js quote <log2(ram)>\\\");\\n  ns.tprint(\\\"  vps.js buy <name> <log2(ram)>\\\");\\n  ns.tprint(\\\"  vps.js sell <name>\\\");\\n  ns.tprint(\\\"  vps.js upgrade\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  var crawler = new Crawler(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var managerOptions = {\\n    hostnames: getVpsNames(),\\n    decommission: async function(hostname){\\n        await ns.killall(hostname);\\n      },\\n    commission: async function(hostname) {\\n        ns.tprint(hostname, \\\" has been upgraded.\\\");\\n      },\\n    trace: async function(msg){\\n        ns.tprint(msg);\\n      }\\n  };\\n\\n  if (ns.args.length == 2 && ns.args[0] == \\\"quote\\\"){\\n    await quote(ns, 2**ns.args[1]);\\n  } else if (ns.args.length == 3 && ns.args[0] == \\\"buy\\\"){\\n    await buy(ns, ns.args[1], 2**ns.args[2]);\\n  } else if (ns.args.length == 2 && ns.args[0] == \\\"sell\\\"){\\n    await sell(ns, ns.args[1]);\\n  } else if (ns.args.length == 1 && ns.args[0] == \\\"upgrade\\\"){\\n    var manager = new VpsManager(ns, managerOptions);\\n    await manager.upgrade();\\n    ns.tprint(\\\"Done.\\\");\\n  } else {\\n    printHelp(ns);\\n  }\\n\\n}\",\"filename\":\"vps.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c726714e-8b27-4bae-828e-5c696a34102d\",\"moduleSequenceNumber\":18805},{\"filename\":\"utils.js\",\"url\":\"blob:file:///c726714e-8b27-4bae-828e-5c696a34102d\",\"moduleSequenceNumber\":10513},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///b911fa4b-4aec-4710-b46f-f2bd36bbd9ab\",\"moduleSequenceNumber\":10497},{\"filename\":\"vps.js\",\"url\":\"blob:file:///249efe06-3eb2-43c1-a94d-4e4cb689f255\",\"moduleSequenceNumber\":19802}],\"dependents\":[],\"ramUsage\":12.3,\"server\":\"home\",\"moduleSequenceNumber\":86,\"_hash\":\"07af330d2c08d12f19c068cc5b76df1eaffb3e6436678415f124734a3bb388e3\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach, forEachAsync } from \\\"./utils.js\\\";\\nimport { Crawler } from \\\"./crawler.js\\\";\\n\\nexport async function listFiles(ns, hostname, pattern){\\n  var files = await ns.ls(hostname, pattern);\\n  forEach(files, function(i, e){\\n    ns.tprint(hostname + \\\"/\\\" + e);\\n  });\\n}\\n\\nexport async function main(ns){\\n  var pattern;\\n  if (ns.args.length == 0){\\n    pattern = \\\"\\\";\\n    ns.tprint(\\\"Searching\\\");\\n  } else {\\n    pattern = ns.args[0];\\n    ns.tprint(\\\"Searching with pattern \\\" + pattern);\\n  }\\n  var crawler = new Crawler(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var servers = await crawler.crawl();\\n  await forEachAsync(servers, async function(i, e){\\n    await listFiles(ns, e, pattern);\\n  });\\n  ns.tprint(\\\"Done.\\\");\\n}\",\"filename\":\"file-recon.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c67b6977-ff18-4af1-89d8-6ed6d81253bf\"},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///19650f04-b10c-49db-abb2-521404cc59c3\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///c67b6977-ff18-4af1-89d8-6ed6d81253bf\"},{\"filename\":\"file-recon.js\",\"url\":\"blob:file:///540d7b1b-e9ef-4edb-aa3e-6d8f0ab708b3\"}],\"dependents\":[],\"ramUsage\":2,\"server\":\"home\",\"moduleSequenceNumber\":87,\"_hash\":\"7103908f2c782029167b2d492223b33e8437563f85b452f643bbe0fd693585de\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEachAsync } from \\\"utils.js\\\";\\n\\nfunction defaultOptions(){\\n  return {\\n    maxNodes: 64,\\n    maxNodeLevel: 200,\\n    maxNodeRam: 64,\\n    maxNodeCores: 16\\n  };\\n};\\n\\nexport function NodeNurse(ns, options){\\n  \\n  var maxNodes = options.maxNodes;\\n  var maxNodeLevel = options.maxNodeLevel;\\n  var maxNodeRam = options.maxNodeRam;\\n  var maxNodeCores = options.maxNodeCores;\\n  \\n  async function buyNodes(){\\n    while(await ns.hacknet.numNodes() < maxNodes){\\n      var currentFunds = await ns.getServerMoneyAvailable(\\\"home\\\");\\n      var cost = await ns.hacknet.getPurchaseNodeCost();\\n      if (cost > currentFunds) break;\\n      var newNode = await ns.hacknet.purchaseNode();\\n      if (newNode < 0) {\\n        ns.print(\\\"Attempted node purchase failed\\\");\\n        break;\\n      }\\n      await ns.sleep(100);\\n    }\\n  }\\n  \\n  async function nodesByLowest(getSize){\\n    var nodeCount = await ns.hacknet.numNodes();\\n    var scored = [];\\n    for(var i = 0; i < nodeCount; i++){\\n      scored.push({\\n        index: i,\\n        score: await getSize(i)\\n      });\\n    }\\n    return scored\\n      .sort(function(a, b){\\n        return a.score - b.score;\\n      })\\n      .map(function(x){\\n        return x.index;\\n      });\\n  }\\n  \\n  async function increaseOn(\\n      nodeId,\\n      max,\\n      getSize,\\n      getCost,\\n      upgrade){\\n    \\n    if(await getSize(nodeId) >= max) return false;\\n    \\n    var currentFunds = await ns.getServerMoneyAvailable(\\\"home\\\");\\n    var cost = await getCost(nodeId, 1);\\n    if (cost > currentFunds) return false;\\n    \\n    var success = await upgrade(nodeId);\\n    if (!success) {\\n      ns.print(\\\"Attempted upgrade failed\\\");\\n    };\\n    \\n    return success;\\n      \\n  }\\n  \\n  async function increase(max, getSize, getCost, upgrade){\\n    for(var success = true; success; ){\\n      var nodes = await nodesByLowest(getSize);\\n      var success = await increaseOn(\\n          nodes[0],\\n          max,\\n          getSize,\\n          getCost,\\n          upgrade);\\n    }\\n  }\\n  \\n  async function getCoreCount(i){\\n    var stats = await ns.hacknet.getNodeStats(i);\\n    return stats.cores;\\n  }\\n  \\n  async function getRamSize(i){\\n    var stats = await ns.hacknet.getNodeStats(i);\\n    return stats.ram;\\n  }\\n  \\n  async function getLevel(i){\\n    var stats = await ns.hacknet.getNodeStats(i);\\n    return stats.level;\\n  }\\n  \\n  async function maintain(){\\n    await buyNodes();\\n    await increase(\\n      maxNodeRam,\\n      getRamSize,\\n      ns.hacknet.getRamUpgradeCost,\\n      ns.hacknet.upgradeRam);\\n    await increase(\\n      maxNodeLevel,\\n      getLevel,\\n      ns.hacknet.getLevelUpgradeCost,\\n      ns.hacknet.upgradeLevel);\\n    await increase(\\n      maxNodeCores,\\n      getCoreCount,\\n      ns.hacknet.getCoreUpgradeCost,\\n      ns.hacknet.upgradeCore);\\n  }\\n  \\n  return {\\n    maintain\\n  };\\n  \\n}\\n\\nexport async function main(ns){\\n  var nurse = new NodeNurse(ns, defaultOptions());\\n  for(;;){\\n    await nurse.maintain();\\n    await ns.sleep(60 * 1000);\\n  }\\n}\",\"filename\":\"node-nurse.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///2b1b8d85-5dca-4ab7-8741-198d3b01013a\",\"moduleSequenceNumber\":109486},{\"filename\":\"node-nurse.js\",\"url\":\"blob:file:///77dc7274-c20a-4dd6-b79a-45bf42773265\",\"moduleSequenceNumber\":109526}],\"dependents\":[],\"ramUsage\":5.7,\"server\":\"home\",\"moduleSequenceNumber\":88,\"_hash\":\"a276b71393812607edd49edc731049a02f9076596d11a6d45f028adeb018d3e3\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach, pushAll } from \\\"./utils.js\\\";\\n\\nfunction HostCollection(hostnames){\\n  \\n  var items = [...hostnames];\\n  \\n  function addAll(newHostnames){\\n    pushAll(items, newHostnames);\\n  }\\n  \\n  function notContains(hostname){\\n    return items.indexOf(hostname) < 0;\\n  }\\n  \\n  return {\\n    addAll,\\n    notContains\\n  }\\n  \\n}\\n\\nfunction ServerRoute (ns, knownHosts, parentRoute, hostname){\\n  \\n  function getRoute(){\\n    return [hostname].concat([...parentRoute]);\\n  }\\n  \\n  async function findChildren(){\\n    var neighbours = await ns.scan(hostname);\\n    var newHosts = neighbours.filter(knownHosts.notContains);\\n    knownHosts.addAll(newHosts);\\n    var children = newHosts.map(function(childHostname){\\n        return new ServerRoute(ns, knownHosts, getRoute(), childHostname);\\n      });\\n    return children;\\n  }\\n  \\n  return {\\n    hostname,\\n    getRoute,\\n    findChildren\\n  }\\n  \\n}\\n\\nexport function TraceRoute (ns, options){\\n  \\n  var resultLimit = options.resultLimit;\\n  var rootHost = options.rootHost;\\n  \\n  async function crawl(){\\n    \\n    var knownHostCollection = new HostCollection([rootHost]);\\n    var rootRoute = new ServerRoute(ns, knownHostCollection, [], rootHost);\\n    var unscannedHosts = [rootRoute];\\n    var scannedHosts = [];\\n    \\n    while(unscannedHosts.length > 0){\\n      \\n      var nextHost = unscannedHosts.pop();\\n      \\n      var resultLimitReached =\\n        unscannedHosts.length > resultLimit ||\\n        scannedHosts.length > resultLimit;\\n      if(resultLimitReached){\\n        ns.print(\\\"Trace route result limit reached.\\\");\\n        break;\\n      }\\n      \\n      var children = await nextHost.findChildren();\\n      pushAll(unscannedHosts, children);\\n      scannedHosts.push(nextHost);\\n      \\n    }\\n    \\n    return scannedHosts;\\n    \\n  }\\n  \\n  return {\\n    crawl\\n  };\\n  \\n}\\n\\nfunction printRoute(ns, route, connectMode){\\n  var hostnames = route.getRoute().reverse();\\n  var joiner = connectMode ? \\\"; connect \\\" : \\\" -> \\\";\\n  ns.tprint(hostnames.join(joiner));\\n}\\n\\nexport async function main(ns){\\n  \\n  var traceRoute = new TraceRoute(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var allRoutes = await traceRoute.crawl();\\n  \\n  var connectMode;\\n  if(ns.args.length >= 2 && ns.args[1] == \\\"--connect\\\"){\\n    connectMode = true;\\n  } else {\\n    connectMode = false;\\n  }\\n  \\n  var matchingRoutes;\\n  if(ns.args.length == 0){\\n    matchingRoutes = allRoutes;\\n  } else {\\n    var targetHostname = ns.args[0];\\n    matchingRoutes = allRoutes\\n      .filter(function(route){\\n        return route.hostname == targetHostname;\\n      });\\n  }\\n  \\n  forEach(matchingRoutes, function(i, route){\\n    printRoute(ns, route, connectMode);\\n  });\\n\\n}\",\"filename\":\"traceroute.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5224f33f-4d12-47b5-b0e3-82060ac415d0\",\"moduleSequenceNumber\":98},{\"filename\":\"traceroute.js\",\"url\":\"blob:file:///369e46bf-2510-402e-8996-b6a6b1433616\",\"moduleSequenceNumber\":561}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":561,\"_hash\":\"e1474497c6446d8519124e4b8a14bc416e43a9519a2030143a8aeec4e8561e5c\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach, forEachAsync } from \\\"utils.js\\\";\\nimport { Crawler } from \\\"crawler.js\\\";\\n\\n// Lists the rooted servers in order of max money descending\\nexport async function findBestTargets(ns, hostnames, options){\\n  return await findBestServers(\\n    ns,\\n    hostnames,\\n    compareTargets,\\n    await generateFilter(options),\\n    options.limit);\\n}\\n\\nexport function ServerFinder(ns, options){\\n  \\n  var hostnames = options.hostnames;\\n  var limit = options.limit;\\n  var onlyWithRootAccess = options.onlyWithRootAccess;\\n  var onlyWithMoney = options.onlyWithMoney;\\n  var onlyNotMine = options.onlyNotMine;\\n  var onlyNotHome = options.onlyNotHome;\\n    \\n  async function profileServers(){\\n    var profiles = [];\\n    await forEachAsync(hostnames, async function(i, e){\\n      if(await ns.serverExists(e)){\\n        profiles.push({\\n          hostname: e,\\n          hasRootAccess: await ns.hasRootAccess(e),\\n          maxMoney: await ns.getServerMaxMoney(e),\\n          maxRam: await ns.getServerMaxRam(e),\\n          minSecurity: await ns.getServerMinSecurityLevel(e),\\n        });\\n      }\\n    });\\n    return profiles;\\n  }\\n  \\n  function getHostname(profile){\\n    return profile.hostname;\\n  }\\n  \\n  async function generateFilter(){\\n    \\n    var filters = [];\\n    \\n    if(onlyWithMoney){\\n      filters.push(function(serverProfile){\\n        return serverProfile.maxMoney > 0;\\n      });\\n    }\\n    \\n    if(onlyWithRootAccess){\\n      filters.push(function(serverProfile){\\n        return serverProfile.hasRootAccess;\\n      });\\n    }\\n    \\n    if(onlyNotMine){\\n      var myServers = await ns.getPurchasedServers();\\n      myServers.push(\\\"home\\\");\\n      filters.push(function(serverProfile){\\n        return myServers.indexOf(serverProfile.hostname) < 0;\\n      });\\n    }\\n    \\n    if(onlyNotHome){\\n      filters.push(function(serverProfile){\\n        return serverProfile.hostname != \\\"home\\\";\\n      });\\n    }\\n    \\n    return function(serverProfile){\\n      var passing = true;\\n      forEach(filters, function(i, e){\\n        passing = passing && e(serverProfile);\\n      });\\n      return passing;\\n    };\\n    \\n  }\\n  \\n  function scoreTarget(profile){\\n    var securityScore = profile.minSecurity;\\n    return profile.maxMoney / (1 + securityScore);\\n  }\\n  \\n  function scoreHost(profile){\\n    return profile.maxRam;\\n  }\\n  \\n  function compareTargetsDesc(a, b){\\n    return scoreTarget(b) - scoreTarget(a);\\n  }\\n  \\n  function compareHostsDesc(a, b){\\n    return scoreHost(b) - scoreHost(a);\\n  }\\n  \\n  async function findBest(compareDesc){\\n    var profiles = await profileServers();\\n    var filter = await generateFilter();\\n    return profiles\\n      .filter(filter)\\n      .sort(compareDesc)\\n      .slice(0, limit || Infinity)\\n      .map(getHostname);\\n  }\\n  \\n  async function findBestTargets(){\\n    return await findBest(compareTargetsDesc);\\n  }\\n  \\n  async function findBestHosts(){\\n    return await findBest(compareHostsDesc);\\n  }\\n  \\n  return {\\n    findBestTargets,\\n    findBestHosts\\n  };\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  find-server.js host <limit>\\\");\\n  ns.tprint(\\\"  find-server.js target <limit>\\\");\\n}\\n\\nexport async function main(ns){\\n  \\n  var findHosts = ns.args.length == 2 && ns.args[0] == \\\"host\\\";\\n  var findTargets = ns.args.length == 2 && ns.args[0] == \\\"target\\\";\\n  var showHelp = !findHosts && !findTargets;\\n  \\n  if(showHelp){\\n    printHelp(ns);\\n    return;\\n  }\\n  \\n  var crawler = new Crawler(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var servers = await crawler.crawl();\\n  \\n  var serverFinder = new ServerFinder(ns, {\\n    hostnames: servers,\\n    limit: ns.args[1],\\n    onlyWithMoney: findTargets,\\n    onlyWithRootAccess: true,\\n    onlyNotMine: findTargets,\\n    onlyNotHome: true\\n  });\\n  \\n  var results;\\n  if (findHosts){\\n    results = await serverFinder.findBestHosts();\\n  } else {\\n    results = await serverFinder.findBestTargets();\\n  }\\n  \\n  forEach(results, function(i, e){\\n    ns.tprint(i+1, \\\": \\\", e);\\n  });\\n  \\n}\",\"filename\":\"find-server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///1803e445-2594-4d07-87ca-5bc473bbccc5\",\"moduleSequenceNumber\":4972},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///3baa1ebf-d17f-4914-9ede-0a4d824dd312\",\"moduleSequenceNumber\":4956},{\"filename\":\"utils.js\",\"url\":\"blob:file:///63fee864-961c-4b17-bb7c-a20d1514cc16\",\"moduleSequenceNumber\":4972},{\"filename\":\"find-server.js\",\"url\":\"blob:file:///672f8744-14e5-4413-8892-f234e0a03c64\",\"moduleSequenceNumber\":78269}],\"dependents\":[],\"ramUsage\":4.5,\"server\":\"home\",\"moduleSequenceNumber\":90,\"_hash\":\"6b4fff39e553596149ce43a9b61a8a3d7186821cb09975a9f78c1a89b56007ec\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { Cache } from \\\"cache.js\\\";\\nimport { DatabaseClient } from \\\"database-client.js\\\"\\nimport {\\n    safeLoop,\\n    portSend,\\n    portTryReceive,\\n    portPeek,\\n    portClear\\n  } from \\\"utils.js\\\";\\n\\nfunction DatabaseResponse(request, value){\\n  \\n  return {\\n    type: \\\"response\\\",\\n    channel: request.channel,\\n    database: request.database,\\n    key: request.key,\\n    value: value\\n  }\\n  \\n}\\n\\nfunction DatabaseServer(ns){\\n  \\n  var responseTTL = 5000;\\n  var pollPeriod = 10;\\n  var lastResponseChannel = null;\\n  var lastResponseLife = 0;\\n  \\n  function clearResponseTimeout(){\\n    lastResponseChannel = null;\\n    lastResponseLife = 0;\\n  }\\n  \\n  async function serviceReadRequest(request){\\n    var cache = new Cache(ns, \\\"db-\\\" + request.database);\\n    var cacheCtxt = await cache.open();\\n    var value = cacheCtxt.load(request.key);\\n    var response = DatabaseResponse(request, value);\\n    await portSend(ns, \\\"db\\\", response);\\n  }\\n  \\n  async function serviceWriteRequest(request){\\n    var cache = new Cache(ns, \\\"db-\\\" + request.database);\\n    var cacheCtxt = await cache.open();\\n    cacheCtxt.save(request.key, request.value);\\n  }\\n  \\n  async function serviceResponse(response){\\n    if(response.channel == lastResponseChannel){\\n      lastResponseLife += pollPeriod;\\n    } else {\\n      lastResponseLife = 0;\\n    }\\n    lastResponseChannel = response.channel;\\n    if (lastResponseLife > responseTTL){\\n      await portTryReceive(ns, \\\"db\\\");\\n    }\\n  }\\n  \\n  async function run(){\\n    await portClear(ns, \\\"db\\\");\\n    for(;;){\\n      \\n      var message = await portPeek(ns, \\\"db\\\");\\n      if (message == \\\"NULL PORT DATA\\\") {\\n        await ns.sleep(10*pollPeriod);\\n      } else if (message.type == \\\"read\\\") {\\n        ns.print(\\\"Read request: \\\", message);\\n        await portTryReceive(ns, \\\"db\\\");\\n        await serviceReadRequest(message);\\n        await ns.sleep(pollPeriod);\\n      } else if (message.type == \\\"write\\\") {\\n        ns.print(\\\"Write request: \\\", message);\\n        await portTryReceive(ns, \\\"db\\\");\\n        await serviceWriteRequest(message);\\n        await ns.sleep(pollPeriod);\\n      } else if (message.type == \\\"response\\\"){\\n        ns.print(\\\"Unconsumed response: \\\", message);\\n        await serviceResponse(message);\\n        await ns.sleep(pollPeriod);\\n      } else {\\n        ns.print(\\\"Bad message: \\\", message);\\n        await portTryReceive(ns, \\\"db\\\");\\n      }\\n      \\n    }\\n  }\\n  \\n  return {\\n    run: run\\n  }\\n  \\n}\\n\\nexport async function main(ns){\\n  if(ns.args.length == 1 && ns.args[0] == \\\"server\\\"){\\n    var server = new DatabaseServer(ns);\\n    await server.run();\\n  } else if (ns.args.length == 3 && ns.args[0] == \\\"read\\\"){\\n    var database = ns.args[1];\\n    var key = ns.args[2];\\n    var client = new DatabaseClient(ns, database);\\n    var result = await client.read(key);\\n    ns.tprint(result);\\n  } else if (ns.args.length == 4 && ns.args[0] == \\\"write\\\"){\\n    var database = ns.args[1];\\n    var key = ns.args[2];\\n    var value = ns.args[3];\\n    var client = new DatabaseClient(ns, database);\\n    await client.write(key, value);\\n  } else {\\n    ns.tprint(\\\"Usage:\\\");\\n    ns.tprint(\\\"  database.js server\\\");\\n    ns.tprint(\\\"  database.js read <database> <key>\\\");\\n    ns.tprint(\\\"  database.js write <database> <key> <value>\\\");\\n  }\\n}\",\"filename\":\"database.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"cache.js\",\"url\":\"blob:file:///6feee1ca-7a2c-4801-8357-1eb8dd831b47\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///afdabf7e-85f5-4575-a6f7-8af7cff7886d\"},{\"filename\":\"database-client.js\",\"url\":\"blob:file:///21a5d50d-d07f-4636-9e67-0634f560907f\"},{\"filename\":\"utils.js\",\"url\":\"blob:file:///afdabf7e-85f5-4575-a6f7-8af7cff7886d\"},{\"filename\":\"database.js\",\"url\":\"blob:file:///8cced23a-49c1-4659-914e-629fa527c46b\"}],\"dependents\":[],\"ramUsage\":2.65,\"server\":\"home\",\"moduleSequenceNumber\":91,\"_hash\":\"4e40dae1298784a72e33175ab484ddcccb2039b0a4e47674f975079b9246a636\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { portSend, portTryReceive, portPeek } from \\\"utils.js\\\";\\n\\nasync function DatabaseReadRequest(ns, database, key){\\n  \\n  var channel =\\n    await ns.getHostname() +\\n    \\\"|\\\" + await ns.getScriptName() +\\n    \\\"|\\\" + ns.args.join(\\\"|\\\") +\\n    \\\"|\\\" + database\\n    \\\"|\\\" + key;\\n  \\n  return {\\n    type: \\\"read\\\",\\n    channel: channel,\\n    database: database,\\n    key: key\\n  }\\n  \\n}\\n\\nasync function DatabaseWriteRequest(ns, database, key, value){\\n  \\n  var channel =\\n    await ns.getHostname() +\\n    \\\"|\\\" + await ns.getScriptName() +\\n    \\\"|\\\" + ns.args.join(\\\"|\\\") +\\n    \\\"|\\\" + database\\n    \\\"|\\\" + key;\\n  \\n  return {\\n    type: \\\"write\\\",\\n    channel: channel,\\n    database: database,\\n    key: key,\\n    value: value\\n  }\\n  \\n}\\n\\nexport function DatabaseClient(ns, database){\\n  \\n  async function sendReadRequest(key){\\n    var request = await DatabaseReadRequest(ns, database, key);\\n    await portSend(ns, \\\"db\\\", request);\\n    return request;\\n  }\\n  \\n  async function sendWriteRequest(key, value){\\n    var request = await DatabaseWriteRequest(ns, database, key, value);\\n    await portSend(ns, \\\"db\\\", request);\\n    return request;\\n  }\\n  \\n  async function awaitReadResponse(request){\\n    var timeout = 5000;\\n    var pollPeriod = 10;\\n    for(var time = 0; time < timeout; time += pollPeriod){\\n      await ns.sleep(pollPeriod);\\n      var message = await portPeek(ns, \\\"db\\\");\\n      var myResponse =\\n        message != null &&\\n        message.type == \\\"response\\\" &&\\n        message.channel == request.channel;\\n      if (myResponse){\\n        await portTryReceive(ns, \\\"db\\\");\\n        return message.value;\\n      }\\n    }\\n    ns.print(\\\"Database read timeout: \\\", request);\\n  }\\n  \\n  async function read(key){\\n    var request = await sendReadRequest(key);\\n    return await awaitReadResponse(request);\\n  }\\n  \\n  async function write(key, value){\\n    var request = await sendWriteRequest(key, value);\\n  }\\n  \\n  return {\\n    read: read,\\n    write: write\\n  }\\n  \\n}\",\"filename\":\"database-client.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.65,\"server\":\"home\",\"moduleSequenceNumber\":92,\"_hash\":\"f450c96752c2bafce28d5e430eb3974079395d6eaf1e716c871f4f0bed5d05b5\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop, forEach, forEachAsync } from \\\"./utils.js\\\";\\n\\nvar transactionCost = 100*1000;\\nvar packetSize = 1000*1000*1000;\\nvar buyInGrowth = 0.55;\\nvar sellGrowth = 0.5;\\n  \\nasync function analyseMarket(ns){\\n  var symbols = await ns.stock.getSymbols();\\n  var profiles = [];\\n  await forEachAsync(symbols, async function(i, e){\\n    var position = await ns.stock.getPosition(e);\\n    var ownedShares = position[0];\\n    var maxShares = await ns.stock.getMaxShares(e);\\n    profiles.push({\\n      symbol: e,\\n      shares: ownedShares,\\n      askPrice: await ns.stock.getAskPrice(e),\\n      bidPrice: await ns.stock.getBidPrice(e),\\n      growthChance: await ns.stock.getForecast(e),\\n      maxShares: maxShares,\\n      availableShares: maxShares - ownedShares\\n    });\\n  });\\n  return profiles;\\n}\\n\\nfunction bestForecast(profiles){\\n  return profiles\\n    .filter(function(profile){\\n      var maxPurchase = profile.askPrice * profile.availableShares;\\n      return maxPurchase > packetSize;\\n    })\\n    .sort(function(a,b){\\n      return b.growthChance - a.growthChance\\n    })\\n    [0];\\n}\\n\\nasync function sellRisky(ns, profiles){\\n  await forEachAsync(profiles, async function(i ,e){\\n    var sellValue = e.bidPrice * e.shares;\\n    var sell =\\n      sellValue > transactionCost &&\\n      e.growthChance <= sellGrowth;\\n    if(sell){\\n      ns.tprint(\\n        \\\"Selling \\\",\\n        e.symbol,\\n        \\\" \\\",\\n        ns.nFormat(e.shares * e.bidPrice, '($ 0.00 a)'));\\n      await ns.stock.sell(e.symbol, e.shares);\\n    }\\n  });\\n}\\n\\nasync function buyBest(ns, profiles){\\n  var funds = await ns.getServerMoneyAvailable(\\\"home\\\");\\n  var bestStock = bestForecast(profiles);\\n  if(bestStock.growthChance > buyInGrowth){\\n    var maxPurchase = bestStock.askPrice * bestStock.availableShares;\\n    var maxPackets = Math.floor(maxPurchase / packetSize);\\n    var fundablePackets = Math.floor((funds - transactionCost) / packetSize);\\n    var packets = Math.min(maxPackets, fundablePackets);\\n    var shares = Math.floor(packets * packetSize / bestStock.askPrice);\\n    if(packets > 0){\\n      ns.tprint(\\n        \\\"Buying \\\",\\n        bestStock.symbol,\\n        \\\" \\\",\\n        ns.nFormat(shares * bestStock.askPrice, '($ 0.00 a)'));\\n      await ns.stock.buy(bestStock.symbol, shares);\\n    }\\n  }\\n}\\n\\nasync function printNetWorth(ns, analysis){\\n  var total = 0;\\n  forEach(analysis, function(i, e){\\n    if(e.shares > 0){\\n      total += e.shares * e.bidPrice;\\n    }\\n  });\\n  ns.tprint(\\\"Current value: \\\", ns.nFormat(total, '($ 0.00 a)'));\\n}\\n\\nexport async function main(ns){\\n  \\n  async function loop(f){\\n    for(;;){\\n      var analysis = await analyseMarket(ns);\\n      await f(ns, analysis);\\n      await ns.sleep(6*1000);\\n    }\\n  }\\n  \\n  var f;\\n  if(ns.args.length == 1 && ns.args[0] == \\\"buy\\\"){\\n    await loop(buyBest);\\n  } else if(ns.args.length == 1 && ns.args[0] == \\\"sell\\\"){\\n    await loop(sellRisky);\\n  } else if(ns.args.length == 1 && ns.args[0] == \\\"show-value\\\"){\\n    var analysis = await analyseMarket(ns);\\n    await printNetWorth(ns, analysis);\\n    return;\\n  } else {\\n    ns.tprint(\\\"Usage:\\\");\\n    ns.tprint(\\\"  bubble-rider.js buy\\\");\\n    ns.tprint(\\\"  bubble-rider.js sell\\\");\\n    ns.tprint(\\\"  bubble-rider.js show-value\\\");\\n    return;\\n  }\\n  \\n}\",\"filename\":\"bubble-rider.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///65aead6a-ad1c-4e31-bfec-9ce422fc8386\",\"moduleSequenceNumber\":105033},{\"filename\":\"bubble-rider.js\",\"url\":\"blob:file:///021d8a2c-62a9-44de-9417-37d8f5cad676\",\"moduleSequenceNumber\":105101}],\"dependents\":[],\"ramUsage\":19.2,\"server\":\"home\",\"moduleSequenceNumber\":93,\"_hash\":\"ee32c0b455c5088b6758b07a176d0728c86cde88cd275a7ed203c827ba57068c\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { Crawler } from \\\"crawler.js\\\";\\nimport { ServerFinder } from \\\"find-server.js\\\";\\nimport { Cell, InstallCell } from \\\"install-cell.js\\\";\\nimport { rootServer } from \\\"root-server.js\\\";\\nimport { forEach, forEachAsync, safeLoop } from \\\"utils.js\\\";\\nimport { getVpsNames, VpsManager } from \\\"vps.js\\\";\\n\\nvar _bioticState;\\n\\nfunction getBioticState(){\\n  if(typeof(_bioticState) === \\\"undefined\\\"){\\n    _bioticState = {};\\n  }\\n  if(typeof(_bioticState.cellPool) === \\\"undefined\\\"){\\n    _bioticState.cellPool = new CellPool();\\n  }\\n  return _bioticState;\\n}\\n\\n// A distribution of jobs that a collection of Cells can handle.\\nfunction Schedule(weaken, grow, hack){\\n\\n  var total = weaken + grow + hack;\\n  var weakenProportion = weaken / total;\\n  var growProportion = grow / total;\\n  var hackProportion = 1 - weakenProportion - growProportion;\\n\\n  return {\\n    weaken: weakenProportion,\\n    grow: growProportion,\\n    hack: hackProportion\\n  };\\n\\n}\\n\\n// An allocation of work to a given target\\nfunction Allocation(target, cells, schedule){\\n  \\n  async function assignWork(assignCell){\\n    \\n    var totalCells = cells.length;\\n    var totalWeaken = Math.ceil(totalCells * schedule.weaken);\\n    var totalGrow = Math.floor(totalCells * schedule.grow);\\n    var totalHack = Math.floor(totalCells * schedule.hack);\\n    \\n    for(var i = 0; i < totalWeaken; i++){\\n      var cell = cells[i];\\n      await assignCell(cell, \\\"weaken\\\", target);\\n    }\\n    for(var i = 0; i < totalGrow; i++){\\n      var cell = cells[totalWeaken + i];\\n      await assignCell(cell, \\\"grow\\\", target);\\n    }\\n    for(var i = 0; i < totalHack; i++){\\n      var cell = cells[totalWeaken + totalGrow + i];\\n      await assignCell(cell, \\\"hack\\\", target);\\n    }\\n    \\n  }\\n  \\n  return {\\n    assignWork\\n  };\\n  \\n}\\n\\n// A maintainable collection of cells\\nfunction CellPool(){\\n  \\n  var hosts = {};\\n  \\n  function removeHost(hostname){\\n    delete hosts[hostname];\\n  }\\n  \\n  function addHost(hostname, cells){\\n    hosts[hostname] = cells;\\n  }\\n  \\n  function getCells(){\\n    var allCells = [];\\n    for(var hostname in hosts){\\n      var cells = hosts[hostname];\\n      forEach(cells, function(i, e){\\n        allCells.push(e);\\n      });\\n    }\\n    return allCells;\\n  }\\n  \\n  function clear(){\\n    hosts = {};\\n  }\\n  \\n  return {\\n    removeHost,\\n    addHost,\\n    getCells,\\n    clear\\n  };\\n  \\n}\\n\\nfunction Allocator(ns){\\n  \\n  var weakenSchedule = new Schedule(1,0,0);\\n  var growSchedule = new Schedule(1,3,0);\\n  var hackSchedule = new Schedule(1,1,1);\\n  \\n  async function updateCellCommand(cell, command, target){\\n    \\n    async function runUpdate(){\\n      if(await ns.serverExists(cell.hostname)){\\n        await ns.exec(\\n          \\\"cell.js\\\",\\n          cell.hostname,\\n          1,\\n          cell.instanceId,\\n          command,\\n          target);\\n      } else {\\n        ns.tprint(cell.hostname, \\\" does not exist anymore.\\\");\\n      }\\n    }\\n    \\n    async function updateStillRunning(){\\n      return await ns.isRunning(\\n        \\\"cell.js\\\",\\n        cell.hostname,\\n        cell.instanceId,\\n        command,\\n        target)\\n    }\\n    \\n    await runUpdate();\\n    await ns.sleep(10);\\n    while(await updateStillRunning()){\\n      await ns.sleep(10);\\n    }\\n    \\n  }\\n  \\n  async function allocateWork(target, cells){\\n    \\n    var currentSecurity = await ns.getServerSecurityLevel(target);\\n    var targetMaxSecurity = await ns.getServerMinSecurityLevel(target) + 3;\\n    var weakenStage = currentSecurity > targetMaxSecurity;\\n    \\n    var currentMoney = await ns.getServerMoneyAvailable(target);\\n    var targetMinMoney = await ns.getServerMaxMoney(target) * 0.9;\\n    var growStage = currentMoney < targetMinMoney;\\n    \\n    var schedule;\\n    if(weakenStage){\\n      ns.tprint(\\\"Weakening \\\", target, \\\" (\\\", cells.length, \\\")\\\");\\n      schedule = weakenSchedule;\\n    } else if(growStage){\\n      ns.tprint(\\\"Growing \\\", target, \\\" (\\\", cells.length, \\\")\\\");\\n      schedule = growSchedule;\\n    } else {\\n      ns.tprint(\\\"Hacking \\\", target, \\\" (\\\", cells.length, \\\")\\\");\\n      schedule = hackSchedule;\\n    }\\n    \\n    return new Allocation(target, cells, schedule);\\n    \\n  }\\n  \\n  function allocateCells(targets, allCells){\\n    \\n    var totalCells = allCells.length;\\n    var totalTargets = targets.length;\\n    var baseCells = Math.floor(totalCells / totalTargets);\\n    var leftOverCells = totalCells - totalTargets*baseCells;\\n    \\n    var allocations = [];\\n    var nextUnallocatedCell = 0;\\n    forEach(targets, function(i, target){\\n\\n      var cellCount;\\n      if(i < leftOverCells){\\n        cellCount = baseCells + 1;\\n      } else {\\n        cellCount = baseCells;\\n      }\\n\\n      var startCell = nextUnallocatedCell;\\n      nextUnallocatedCell = nextUnallocatedCell + cellCount;\\n      \\n      allocations.push({\\n        target,\\n        cells: allCells.slice(startCell, nextUnallocatedCell)\\n      });\\n      \\n    });\\n    \\n    return allocations;\\n    \\n  }\\n  \\n  async function allocate(targets, cellPool){\\n    var allCells = cellPool.getCells();\\n    var cellAllocation = allocateCells(targets, allCells);\\n    await forEachAsync(cellAllocation, async function(i, e){\\n      var workAllocation = await allocateWork(e.target, e.cells);\\n      await workAllocation.assignWork(updateCellCommand);\\n    });\\n  }\\n  \\n  async function spam(target, cellPool){\\n    var allCells = cellPool.getCells();\\n    var cellAllocation = allocateCells([target], allCells)[0];\\n    var workAllocation = new Allocation(\\n      cellAllocation.target,\\n      cellAllocation.cells,\\n      weakenSchedule);\\n    await workAllocation.assignWork(updateCellCommand);\\n  }\\n  \\n  return {\\n    allocate,\\n    spam\\n  };\\n  \\n}\\n\\nfunction CellManager(ns, options){\\n  \\n  var installer = options.installer;\\n  var crawler = options.crawler;\\n  \\n  var cellPool = getBioticState().cellPool;\\n  \\n  async function uninstallOn(hostname){\\n    await installer.uninstall(hostname);\\n  }\\n  \\n  async function installOn(hostname){\\n    var newCells = await installer.install(hostname);\\n    cellPool.addHost(hostname, newCells);\\n  }\\n  \\n  async function install(hostname){\\n    \\n    // Identify hosts\\n    var allServers = await crawler.crawl();\\n    var hosts = [];\\n    await forEachAsync(allServers, async function(i, hostname){\\n      var isHome = hostname == \\\"home\\\";\\n      var isRooted = await ns.hasRootAccess(hostname);\\n      if(isRooted && !isHome){\\n        hosts.push(hostname);\\n      }\\n    });\\n    \\n    // Install on hosts\\n    cellPool.clear();\\n    await forEachAsync(hosts, async function(i, hostname){\\n      await installOn(hostname);\\n    });\\n    \\n  }\\n  \\n  return {\\n    uninstallOn,\\n    installOn,\\n    install\\n  };\\n  \\n}\\n\\nfunction Biotic (ns, options){\\n  \\n  var trace = options.trace;\\n  var cellManager = options.cellManager;\\n  var crawler = options.crawler;\\n  var allocator = options.allocator;\\n  var targetLimit = options.targetLimit;\\n  var vpsUpgrade = options.vpsUpgrade;\\n  var spam = options.spam;\\n  \\n  var bioticState = getBioticState();\\n  var cellPool = bioticState.cellPool;\\n  \\n  var upgradePeriod = 3*60*1000;\\n  \\n  async function rootServers(){\\n    var allServers = await crawler.crawl();\\n    await forEachAsync(allServers, async function(i, hostname){\\n      var success = await rootServer(ns, hostname);\\n      if (success){\\n        await ns.sleep(100);\\n        await cellManager.installOn(hostname);\\n        await trace(\\\"Rooted server \\\" + hostname);\\n      }\\n    });\\n  }\\n  \\n  async function upgradeVps(){\\n    var vpsHosts = await getVpsNames();\\n    var manager = new VpsManager(ns, {\\n      hostnames: vpsHosts,\\n      decommission: cellManager.uninstallOn,\\n      commission: cellManager.installOn,\\n      trace: trace\\n    });\\n    await manager.upgrade();\\n  }\\n  \\n  async function allocateWork(){\\n    var targets;\\n    if(!spam){\\n      var allServers = await crawler.crawl();\\n      var targetFinder = new ServerFinder(ns, {\\n        hostnames: allServers,\\n        limit: targetLimit,\\n        onlyWithRootAccess: true,\\n        onlyWithMoney: true,\\n        onlyNotMine: true,\\n        onlyNotHome: true\\n      });\\n      var targets = await targetFinder.findBestTargets();\\n      await allocator.allocate(targets, cellPool);\\n    } else {\\n      await allocator.spam(\\\"joesguns\\\", cellPool);\\n    }\\n  }\\n  \\n  async function manage(){\\n    await cellManager.install();\\n    await safeLoop(ns, async function (){\\n      await rootServers();\\n      if(vpsUpgrade){\\n        await upgradeVps();\\n      }\\n      await allocateWork();\\n      await ns.sleep(upgradePeriod);\\n    });\\n  }\\n  \\n  return {\\n    manage\\n  };\\n  \\n}\\n\\nexport async function main(ns) {\\n  \\n  var targetLimit;\\n  if(ns.args.length > 0){\\n    targetLimit = ns.args[0];\\n  } else {\\n    targetLimit = 1;\\n  }\\n  \\n  var vpsUpgrade = ns.args.indexOf(\\\"--no-vps-upgrade\\\") < 0;\\n  var spam = ns.args.indexOf(\\\"--spam\\\") >= 0;\\n  \\n  var crawler = new Crawler(ns, {\\n    resultLimit: 1000,\\n    rootHost: \\\"home\\\"\\n  });\\n  var allocator = new Allocator(ns);\\n  var installer = new InstallCell(ns);\\n  var cellManager = new CellManager(ns, {\\n    installer: installer,\\n    crawler: crawler\\n  });\\n  var biotic = new Biotic(ns, {\\n    trace: ns.tprint,\\n    cellManager: cellManager,\\n    crawler: crawler,\\n    allocator: allocator,\\n    targetLimit: targetLimit,\\n    vpsUpgrade: vpsUpgrade,\\n    spam: spam\\n  });\\n  await biotic.manage();\\n  \\n}\",\"filename\":\"biotic.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cf7f0b31-1b75-44be-8c1b-73845887c743\",\"moduleSequenceNumber\":98},{\"filename\":\"utils.js\",\"url\":\"blob:file:///26a2a722-9ae5-4dd9-9edd-401549cdc668\",\"moduleSequenceNumber\":98},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///c5b2adad-d723-4a0d-a786-7f053a61a5fc\",\"moduleSequenceNumber\":82},{\"filename\":\"vps.js\",\"url\":\"blob:file:///d2be508d-ea4a-44fc-a009-9e5e7a2572fa\",\"moduleSequenceNumber\":86},{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d4d1658-7a8d-49f3-9c1e-26e7ec3e913d\",\"moduleSequenceNumber\":98},{\"filename\":\"utils.js\",\"url\":\"blob:file:///70b47c55-1396-4ec3-ab39-26af5ec8dbe0\",\"moduleSequenceNumber\":98},{\"filename\":\"root-server.js\",\"url\":\"blob:file:///15549c89-8f8e-43c3-b221-cdd60c79a316\",\"moduleSequenceNumber\":85},{\"filename\":\"utils.js\",\"url\":\"blob:file:///e0c012c5-2409-4fb3-88ae-e7758198d3bd\",\"moduleSequenceNumber\":98},{\"filename\":\"install-cell.js\",\"url\":\"blob:file:///3a48dc1f-651b-4b62-b403-2d5290003617\",\"moduleSequenceNumber\":97},{\"filename\":\"utils.js\",\"url\":\"blob:file:///0ee9ab12-e81d-44fd-8323-7513f787dea7\",\"moduleSequenceNumber\":98},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///de803faf-e0da-4749-b2e2-f3ced8fb727d\",\"moduleSequenceNumber\":82},{\"filename\":\"utils.js\",\"url\":\"blob:file:///527d5eef-166c-4f55-8845-f281dca05abe\",\"moduleSequenceNumber\":98},{\"filename\":\"find-server.js\",\"url\":\"blob:file:///169a6014-3f49-49d0-b252-ce742b46e9be\",\"moduleSequenceNumber\":90},{\"filename\":\"utils.js\",\"url\":\"blob:file:///554f8d90-f6c3-4bbc-b264-aed4f9e5091a\",\"moduleSequenceNumber\":98},{\"filename\":\"crawler.js\",\"url\":\"blob:file:///2650587c-f291-4e3d-9b90-f815c6f5193c\",\"moduleSequenceNumber\":82},{\"filename\":\"biotic.js\",\"url\":\"blob:file:///ba0c1314-e1f2-4127-8f08-71b4b280e30d\",\"moduleSequenceNumber\":161}],\"dependents\":[],\"ramUsage\":14.65,\"server\":\"home\",\"moduleSequenceNumber\":161,\"_hash\":\"c9ea713fb97e780fbe3f21c5affa042d072caa4862c652ea1ebb33dd09636069\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nexport async function main(ns){\\n  await ns.run(\\\"database.js\\\", 1, \\\"server\\\");\\n  await ns.run(\\\"bubble-rider.js\\\", 1, \\\"sell\\\");\\n  await ns.run(\\\"bubble-rider.js\\\", 1, \\\"buy\\\");\\n  await ns.run(\\\"reach.js\\\", 1, \\\"manage\\\");\\n  for(var i = 0; i < 60; i++){\\n  await ns.run(\\\"reach.js\\\", 1, \\\"scan\\\");\\n    await ns.sleep(60*1000);\\n  }\\n}\",\"filename\":\"rc.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"rc.js\",\"url\":\"blob:file:///1be087a6-646f-472e-b3d9-112481bb9ddf\"}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":95,\"_hash\":\"c732672dae5d5c382b9bfa7db98c0335964d948b8987044c2797d067ec81c17e\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fda03736-58dd-47b7-b206-88ac52e6981b\",\"moduleSequenceNumber\":105033},{\"filename\":\"cell.js\",\"url\":\"blob:file:///caa43f17-8b90-41eb-9fef-438da82a2ab2\",\"moduleSequenceNumber\":107066}],\"dependents\":[],\"ramUsage\":2,\"server\":\"home\",\"moduleSequenceNumber\":96,\"_hash\":\"ecbbbdcd913f52f35c6e12823727d9e4b543b0545f504dde65c62aaf46513966\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEachAsync } from \\\"utils.js\\\";\\n\\n// A model for an instance of Cell.js running on a server\\nexport function Cell(hostname, index){\\n  \\n  return {\\n    hostname,\\n    index,\\n    instanceId: hostname + \\\"|\\\" + index\\n  };\\n  \\n}\\n\\nexport function InstallCell (ns){\\n  \\n  var mainScript = \\\"cell.js\\\";\\n  var scripts = [\\n    \\\"utils.js\\\",\\n    \\\"cell.js\\\"\\n  ];\\n  \\n  async function install(hostname){\\n    \\n    await forEachAsync(scripts, async function(i,e){\\n      await ns.scriptKill(e, hostname);\\n    });\\n    await forEachAsync(scripts, async function(i,e){\\n      await ns.scp(e, hostname);\\n    });\\n    \\n    var spareInstances = 1; // How many instances-worth of RAM to leave free\\n    var ramRequired = await ns.getScriptRam(mainScript);\\n    var ramMax = await ns.getServerMaxRam(hostname);\\n    var ramUsed = await ns.getServerUsedRam(hostname);\\n    var ramAvailable = ramMax - ramUsed;\\n    var ramDedicated = ramAvailable - spareInstances * ramRequired;\\n    \\n    var instanceCount = Math.floor(ramDedicated / ramRequired);\\n    var instanceSize = 1;\\n    while(instanceCount > 200){\\n      instanceSize *= 2;\\n      instanceCount = Math.floor(\\n        ramDedicated\\n        / ramRequired\\n        / instanceSize);\\n    }\\n    \\n    var newCells = [];\\n    for(var i = 0; i < instanceCount; i++){\\n      var newCell = new Cell(hostname, i);\\n      await ns.sleep(10);\\n      await ns.exec(\\n        mainScript,\\n        hostname,\\n        instanceSize,\\n        newCell.instanceId);\\n      newCells.push(newCell);\\n    }\\n    \\n    return newCells;\\n    \\n  }\\n  \\n  async function uninstall(hostname){\\n    await forEachAsync(scripts, async function(i,e){\\n      await ns.scriptKill(e, hostname);\\n    });\\n    await forEachAsync(scripts, async function(i,e){\\n      await ns.rm(e, hostname);\\n    });\\n  }\\n  \\n  return {\\n    install,\\n    uninstall\\n  };\\n  \\n}\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  install-cell.js install <host>\\\");\\n  ns.tprint(\\\"  install-cell.js uninstall <host>\\\");\\n}\\n\\nexport async function main(ns) {\\n  var installCell = new InstallCell(ns);\\n  if(ns.args.length == 2 && ns.args[0] == \\\"install\\\"){\\n    var newCells = await installCell.install(ns.args[1]);\\n    ns.tprint(\\\"Instances installed: \\\", newCells.length);\\n  } else if(ns.args.length == 2 && ns.args[0] == \\\"uninstall\\\"){\\n    await installCell.uninstall(ns.args[1]);\\n  } else {\\n    printHelp(ns);\\n  }\\n}\",\"filename\":\"install-cell.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///ce0d290c-c3bd-483c-91ff-473eab33be76\",\"moduleSequenceNumber\":347},{\"filename\":\"install-cell.js\",\"url\":\"blob:file:///e1ca2aa3-19a8-4c0f-b7f5-a0f4376addc0\",\"moduleSequenceNumber\":1578}],\"dependents\":[],\"ramUsage\":5.7,\"server\":\"home\",\"moduleSequenceNumber\":97,\"_hash\":\"b47a77fc617405528bba88aab7c0549d10fdc54013a0211e69005a6e6fc04124\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":98,\"_hash\":\"1c34f3662427eccf0a3675d87905e90266fedf0058758e414244fedd1205db58\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nfunction Thief (ns, target) {\\n  \\n  var lastMoney = ns.getServerMoneyAvailable(target);\\n  var maxMoney = ns.getServerMaxMoney(target) * 0.95;\\n  \\n  var lastSecurity = ns.getServerSecurityLevel(target);\\n  var minSecurity = ns.getServerMinSecurityLevel(target) + 1;\\n\\n  async function heuristic(){\\n    \\n    var currentMoney = ns.getServerMoneyAvailable(target);\\n    var targetMoney = Math.min(maxMoney, lastMoney * 1.05 + 1);\\n    \\n    var currentSecurity = ns.getServerSecurityLevel(target);\\n    var targetSecurity = Math.max(minSecurity, lastSecurity * 0.8);\\n    \\n    ns.print(\\\"### Target security: \\\", currentSecurity, \\\" / \\\", targetSecurity);\\n    ns.print(\\\"### Target money: \\\", currentMoney, \\\" / \\\", targetMoney);\\n    \\n    if (currentSecurity > targetSecurity) {\\n      await ns.weaken(target);\\n    } else if (currentMoney < targetMoney) {\\n      await ns.grow(target);\\n    } else {\\n      lastSecurity = currentSecurity;\\n      lastMoney = currentMoney;\\n      await ns.hack(target);\\n    }\\n    \\n    await ns.sleep(Math.floor(1000*Math.random()));\\n    \\n  }\\n\\n  async function start() {\\n    await safeLoop(ns, heuristic);\\n  }\\n\\n  return {\\n    start\\n  };\\n\\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  thief.js <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  var argc = ns.args.length;\\n  if(argc != 1){\\n    printHelp(ns);\\n    return;\\n  }\\n  \\n  var target = ns.args[0];\\n  var thief = new Thief(ns, target);\\n  await thief.start();\\n  \\n}\",\"filename\":\"thief.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bf737481-8468-4b00-a6d5-6956747dc12a\",\"moduleSequenceNumber\":105033},{\"filename\":\"thief.js\",\"url\":\"blob:file:///29ac0081-4607-4bcd-8276-0a1f253e94aa\",\"moduleSequenceNumber\":105744}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":99,\"_hash\":\"1cfefacc6eeafc0c96c815f129aa77665885754031f197b6e798340fc37f2858\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach, forEachAsync } from \\\"./utils.js\\\";\\n\\n// An arithmetic mean, with a default of 0 for empty lists\\nfunction average(array){\\n  if(array.length > 0){\\n    return array.reduce(function (a,b) { return a+b; }) / array.length;\\n  } else {\\n    return 0;\\n  }\\n}\\n\\n// A sliding-window collection of prices for a given stock.\\nexport function StockHistory(options){\\n  \\n  var symbol = options.symbol;\\n  var windowSize = options.windowSize;\\n  \\n  // A window of prices from which statistics can be derived.\\n  var priceHistory = [];\\n  \\n  // Whether the window is primed (fully filled);\\n  function isWindowFull(){\\n    return priceHistory.length >= windowSize;\\n  }\\n  \\n  function logPrice(price){\\n    priceHistory.push(price);\\n    while(priceHistory.length > windowSize){\\n      priceHistory.shift();\\n    }\\n  }\\n  \\n  // The mean average of the step-by-step growth rate\\n  function averageGrowth(){\\n    \\n    if(priceHistory.length <= 1){\\n      return 0;\\n    }\\n    \\n    var growths = [];\\n    for(var i = 1; i < priceHistory.length; i++){\\n      var basePrice = priceHistory[i - 1];\\n      var nextPrice = priceHistory[i];\\n      if (basePrice != 0){\\n        var growth = (nextPrice - basePrice) / basePrice;\\n        growths.push(growth);\\n      }\\n    }\\n    \\n    return average(growths);\\n    \\n  }\\n  \\n  return {\\n    symbol,\\n    isWindowFull,\\n    logPrice,\\n    averageGrowth\\n  };\\n  \\n}\\n\\n// Monitors the stock prices for the given stocks.\\nexport function StockMonitor(ns, options){\\n  \\n  var stockSymbols = options.stockSymbols;\\n  var windowSize = options.windowSize;\\n  \\n  var stepTime = 6*1000;\\n  var stockHistories = stockSymbols.map(function(symbol){\\n    return new StockHistory({\\n      symbol: symbol,\\n      windowSize: windowSize\\n    });\\n  });\\n  \\n  async function logPrice(stockHistory){\\n    var askPrice = await ns.stock.getAskPrice(stockHistory.symbol);\\n    var bidPrice = await ns.stock.getBidPrice(stockHistory.symbol);\\n    var price = average([askPrice, bidPrice]);\\n    stockHistory.logPrice(price);\\n  }\\n  \\n  async function logPrices(){\\n    await forEachAsync(stockHistories, async function(i, e){\\n      await logPrice(e);\\n    });\\n  }\\n  \\n  // Takes a callback that is called whenever some stock histories are\\n  // ready for consumption. The callback is called with the empty array as long\\n  // as the histories are not primed with history yet.\\n  async function monitor(callback){\\n    for(;;){\\n      await logPrices();\\n      var primedHistories = stockHistories.filter(function(e){\\n        return e.isWindowFull();\\n      });\\n      await callback(primedHistories);\\n      await ns.sleep(stepTime);\\n    }\\n  }\\n  \\n  return {\\n    monitor\\n  };\\n  \\n}\\n\\nexport async function main(ns){\\n  \\n  var symbols = await ns.stock.getSymbols();\\n  var stockMonitor = new StockMonitor(ns, {\\n    stockSymbols: symbols,\\n    windowSize: 16\\n  });\\n  await stockMonitor.monitor(async function(stockHistories){\\n    \\n    var bestPerformances = stockHistories\\n      .sort(function(a, b){\\n        return b.averageGrowth() - a.averageGrowth();\\n      })\\n      .slice(0, 10);\\n      \\n    if(bestPerformances.length > 0){\\n      ns.tprint(\\\"===>\\\");\\n      forEach(bestPerformances, function(i, e){\\n        ns.tprint(e.symbol, \\\": \\\", ns.nFormat(e.averageGrowth(), \\\"0.000e+0\\\"));\\n      });\\n    } else {\\n      ns.tprint(\\\"(Analysing market)\\\");\\n    }\\n    \\n  });\\n  \\n}\",\"filename\":\"market-analysis.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///33d0ad9a-6b21-4408-8077-fc550d531771\"},{\"filename\":\"market-analysis.js\",\"url\":\"blob:file:///1cd43eca-36ad-458b-bf3c-cb72632338b0\"}],\"dependents\":[],\"ramUsage\":7.6,\"server\":\"home\",\"moduleSequenceNumber\":100,\"_hash\":\"6ba55774aafbcaeec1f5b1c1c03ea746869663a22d6ad440cf2fecc8a0cf8ebf\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getBidPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"utils.js\\\";\\n\\nexport async function main(ns) {\\n\\tawait safeLoop(ns, async function(){\\n\\t\\tawait ns.share();\\n\\t})\\n}\",\"filename\":\"share.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5bc91218-2d2c-44a2-943c-d634a77575f4\",\"moduleSequenceNumber\":220},{\"filename\":\"share.js\",\"url\":\"blob:file:///1deaf6b2-650c-4748-8d82-ffae33c12af7\",\"moduleSequenceNumber\":407}],\"dependents\":[],\"ramUsage\":4,\"server\":\"home\",\"moduleSequenceNumber\":101,\"_hash\":\"c837022fea4ac5f55667eaae55b2eae71cd99a51a654e1abc015d05c28ed075c\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nexport async function main(ns) {\\n\\tawait safeLoop(ns, async function(){\\n\\t\\tawait ns.weaken(\\\"n00dles\\\");\\n\\t})\\n}\",\"filename\":\"spam.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fca5e722-51e2-4347-9dc8-995f372adb87\",\"moduleSequenceNumber\":1192},{\"filename\":\"spam.js\",\"url\":\"blob:file:///373120c2-922a-4701-be0f-365f4d168cbb\",\"moduleSequenceNumber\":1240}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"moduleSequenceNumber\":102,\"_hash\":\"c8669cc54f4578ac6b979c47fccbd764d0180a5dfc5263a46b99eedfc0f67731\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach } from \\\"utils.js\\\";\\nimport { ProportionalUpgrade } from \\\"corp-upgrades.js\\\";\\nimport { OfficeUpgrade } from \\\"corp-office.js\\\";\\n\\nexport function AgricultureUpgrade (ns, options){\\n  \\n  var divisionName = options.divisionName;\\n  var cities = options.cities;\\n  var proportion = options.proportion;\\n\\n  var officeUpgrades = [];\\n  forEach(cities, function(i, e){\\n    var officeUpgrade = new OfficeUpgrade(ns, {\\n      division: divisionName,\\n      city: e,\\n      proportion: 1\\n    });\\n    officeUpgrades.push(officeUpgrade);\\n  });\\n\\n  return new ProportionalUpgrade(ns, {\\n    subUpgrades: officeUpgrades,\\n    proportion: 1\\n  });\\n  \\n}\",\"filename\":\"corp-strat-ag.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///13919e6d-b106-4069-a5f1-16db0569f319\",\"moduleSequenceNumber\":222},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///ffdccbb7-b776-45a3-8cd3-c4bd345ea8a4\",\"moduleSequenceNumber\":228},{\"filename\":\"corp-office.js\",\"url\":\"blob:file:///519b99e1-d842-4a39-b133-eb91a744f615\",\"moduleSequenceNumber\":229},{\"filename\":\"utils.js\",\"url\":\"blob:file:///9f18b9a2-87d3-402f-ba82-c7b44a5ebc18\",\"moduleSequenceNumber\":222},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///6ab64403-4bec-4e5e-8b64-0c91c231dc5d\",\"moduleSequenceNumber\":228},{\"filename\":\"utils.js\",\"url\":\"blob:file:///1c72b003-0c1f-4d88-beb2-581bbb299b24\",\"moduleSequenceNumber\":222},{\"filename\":\"corp-strat-ag.js\",\"url\":\"blob:file:///aad69df4-94f3-43d2-b90f-6bb6515f16df\",\"moduleSequenceNumber\":412}],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":103,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEachAsync } from \\\"utils.js\\\";\\n\\nfunction Upgradeable(options){\\n  \\n  var getSize = options.getSize;\\n  var getUpgradeCost = options.getUpgradeCost;\\n  var upgrade = options.upgrade;\\n  var proportion = options.proportion;\\n  \\n  return {\\n    getSize,\\n    getUpgradeCost,\\n    upgrade, // returns false if the upgrade failed\\n    proportion\\n  };\\n  \\n}\\n\\nexport function ProportionalUpgrade(ns, options){\\n  \\n  var subUpgrades = options.subUpgrades;\\n  var proportion = options.proportion;\\n\\n  async function getNextUpgrade(){\\n\\n    var totalPoints = 0;\\n    var totalSize = 0;\\n    var scoredUpgrades = [];\\n    await forEachAsync(subUpgrades, async function(i, e){\\n      var points = e.proportion;\\n      var size = await e.getSize();\\n      totalPoints += points;\\n      totalSize += size;\\n      scoredUpgrades.push({\\n        size,\\n        points,\\n        upgrade: e\\n      });\\n    });\\n\\n    var fallingShort = scoredUpgrades\\n      .map(function(u){\\n        var targetProportion = u.points / totalPoints;\\n        var actualProportion = u.size / totalSize;\\n        var priority = targetProportion - actualProportion;\\n        return {\\n          priority,\\n          upgrade: u.upgrade\\n        };\\n      })\\n      .sort(function(a, b){\\n        return b.priority - a.priority;\\n      });\\n\\n    return fallingShort[0].upgrade;\\n\\n  }\\n\\n  async function getSize(){\\n    var totalSize = 0;\\n    await forEachAsync(subUpgrades, async function(i, e){\\n      totalSize += await e.getSize();\\n    });\\n    return totalSize;\\n  }\\n\\n  async function getUpgradeCost(){\\n    var nextUpgrade = await getNextUpgrade();\\n    return await nextUpgrade.getUpgradeCost();\\n  }\\n\\n  async function upgrade(){\\n    var nextUpgrade = await getNextUpgrade();\\n    return await nextUpgrade.upgrade();\\n  }\\n  \\n  return new Upgradeable({\\n    getSize,\\n    getUpgradeCost,\\n    upgrade,\\n    proportion\\n  });\\n  \\n}\\n\\nexport function EmployeeJobUpgrade(ns, options){\\n\\n  var division = options.division;\\n  var city = options.city;\\n  var job = options.job;\\n  var proportion = options.proportion;\\n\\n  async function getSize(){\\n    var office = await ns.corporation.getOffice(division, city);\\n    var employeeNames = office.employees;\\n    var employees = [];\\n    await forEachAsync(employeeNames, async function(i, e){\\n      employees.push(await ns.corporation.getEmployee(division, city, e));\\n    });\\n    var employeesInJob = employees.filter(function(e){\\n      return e.pos == job;\\n    });\\n    return employeesInJob.length;\\n  }\\n\\n  async function getUpgradeCost(){\\n    var office = await ns.corporation.getOffice(division, city);\\n    var capacity = office.size;\\n    var hires = office.employees.length;\\n    if (capacity <= hires){\\n      return await ns.corporation.getOfficeSizeUpgradeCost(division, city, 3);\\n    } else {\\n      return 0;\\n    }\\n  }\\n\\n  async function upgrade(){\\n    var office = await ns.corporation.getOffice(division, city);\\n    var capacity = office.size;\\n    var hires = office.employees.length;\\n    if (capacity <= hires){\\n      await ns.corporation.upgradeOfficeSize(division, city, 3);\\n    }\\n    var newEmployee = await ns.corporation.hireEmployee(division, city);\\n    if(!newEmployee){\\n      return false;\\n    }\\n    await ns.corporation.assignJob(division, city, newEmployee.name, job);\\n    return true;\\n  }\\n\\n  return new Upgradeable({\\n    getSize,\\n    getUpgradeCost,\\n    upgrade,\\n    proportion\\n  });\\n\\n}\",\"filename\":\"corp-upgrades.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":104,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { EmployeeJobUpgrade, ProportionalUpgrade } from \\\"corp-upgrades.js\\\";\\n\\nexport function OfficeUpgrade(ns, options){\\n\\n  var division = options.division;\\n  var city = options.city;\\n  var proportion = options.proportion;\\n\\n  var employeeOperationsUpgrade = new EmployeeJobUpgrade(ns, {\\n    division,\\n    city,\\n    job: \\\"Operations\\\",\\n    proportion: 8\\n  });\\n  var employeeEngineerUpgrade = new EmployeeJobUpgrade(ns, {\\n    division,\\n    city,\\n    job: \\\"Engineer\\\",\\n    proportion: 4\\n  });\\n  var employeeBusinessUpgrade = new EmployeeJobUpgrade(ns, {\\n    division,\\n    city,\\n    job: \\\"Business\\\",\\n    proportion: 2\\n  });\\n  var employeeManagementUpgrade = new EmployeeJobUpgrade(ns, {\\n    division,\\n    city,\\n    job: \\\"Management\\\",\\n    proportion: 1\\n  });\\n\\n  return new ProportionalUpgrade(ns, {\\n    subUpgrades: [\\n      employeeOperationsUpgrade,\\n      employeeEngineerUpgrade,\\n      employeeBusinessUpgrade,\\n      employeeManagementUpgrade],\\n    proportion\\n  });\\n\\n}\",\"filename\":\"corp-office.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":105,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach } from \\\"utils.js\\\";\\nimport { ProportionalUpgrade } from \\\"corp-upgrades.js\\\";\\nimport { OfficeUpgrade } from \\\"corp-office.js\\\";\\n\\nexport function SoftwareUpgrade (ns, options){\\n  \\n  var divisionName = options.divisionName;\\n  var cities = options.cities;\\n  var proportion = options.proportion;\\n\\n  var officeUpgrades = [];\\n  forEach(cities, function(i, e){\\n    var officeUpgrade = new OfficeUpgrade(ns, {\\n      division: divisionName,\\n      city: e,\\n      proportion: 1\\n    });\\n    officeUpgrades.push(officeUpgrade);\\n  });\\n\\n  return new ProportionalUpgrade(ns, {\\n    subUpgrades: officeUpgrades,\\n    proportion: 1\\n  });\\n  \\n}\",\"filename\":\"corp-strat-soft.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bd686c29-4879-44d9-9932-c80b92e6afed\",\"moduleSequenceNumber\":222},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///f0deb79a-ff0e-451d-87eb-64687334e64f\",\"moduleSequenceNumber\":228},{\"filename\":\"corp-office.js\",\"url\":\"blob:file:///f9b02fcf-0ecd-4678-a3dc-83ad106f277d\",\"moduleSequenceNumber\":229},{\"filename\":\"utils.js\",\"url\":\"blob:file:///6060dd51-17d9-47f5-a83e-66dc7297ff25\",\"moduleSequenceNumber\":222},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///a56f7d98-dd10-4d9f-84b0-dd9302006226\",\"moduleSequenceNumber\":228},{\"filename\":\"utils.js\",\"url\":\"blob:file:///172b0933-2019-4376-b76f-8b49c66b0a71\",\"moduleSequenceNumber\":222},{\"filename\":\"corp-strat-soft.js\",\"url\":\"blob:file:///511b7be1-59bc-4072-8a7e-bbd17c4539fb\",\"moduleSequenceNumber\":413}],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":106,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"utils.js\\\";\\nimport { ProportionalUpgrade } from \\\"corp-upgrades.js\\\";\\nimport { AgricultureUpgrade } from \\\"corp-strat-ag.js\\\";\\nimport { SoftwareUpgrade } from \\\"corp-strat-soft.js\\\";\\nimport { ChemicalUpgrade } from \\\"corp-strat-chem.js\\\";\\n\\nexport function CorporateStrategy(ns){\\n  \\n  var cities = [\\n    \\\"Aevum\\\",\\n    \\\"Sector-12\\\",\\n    \\\"Chongqing\\\",\\n    \\\"New Tokyo\\\",\\n    \\\"Ishima\\\",\\n    \\\"Volhaven\\\"\\n    ];\\n  \\n  var agriculture = new AgricultureUpgrade(ns, {\\n    divisionName: \\\"BimGronomy\\\",\\n    cities\\n  });\\n  var software = new SoftwareUpgrade(ns, {\\n    divisionName: \\\"BimTech\\\",\\n    cities\\n  });\\n  var chemical = new ChemicalUpgrade(ns, {\\n    divisionName: \\\"BimIcal\\\",\\n    cities\\n  });\\n  \\n  var strategy = new ProportionalUpgrade(ns, {\\n    subUpgrades: [\\n      agriculture,\\n      software,\\n      chemical\\n    ],\\n    proportion: 1\\n  });\\n  \\n  async function employ() {\\n    var corporation = await ns.corporation.getCorporation();\\n    var cost = await strategy.getUpgradeCost();\\n    var funds = corporation.funds;\\n    if (cost <= funds){\\n      return await strategy.upgrade();\\n    } else {\\n      return false;\\n    }\\n  }\\n  \\n  return {\\n    employ\\n  };\\n  \\n}\\n\\nexport async function main(ns){\\n  \\n  var strategy = CorporateStrategy(ns);\\n  await safeLoop(ns, async function(){\\n    while(await strategy.employ()){\\n      await ns.sleep(100);\\n    }\\n    await ns.sleep(6000);\\n  });\\n  \\n}\",\"filename\":\"corp-strat.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///3fd5b2ab-3533-4863-ae96-27b7bd576608\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///f7c955ff-2a1a-4766-9427-d6475f205c6b\",\"moduleSequenceNumber\":232},{\"filename\":\"corp-office.js\",\"url\":\"blob:file:///d92b959d-db76-4f44-ac74-5ac5e611ccd5\",\"moduleSequenceNumber\":233},{\"filename\":\"utils.js\",\"url\":\"blob:file:///adb87e1f-3457-4926-805b-01d78aa00432\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///94b504b2-6d6e-46ae-8292-b9bee7f4bc85\",\"moduleSequenceNumber\":232},{\"filename\":\"utils.js\",\"url\":\"blob:file:///8859a2a4-112b-4979-b6be-8a284998409b\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-strat-chem.js\",\"url\":\"blob:file:///331e89ef-725b-41e7-95b6-18962d869fd2\",\"moduleSequenceNumber\":236},{\"filename\":\"utils.js\",\"url\":\"blob:file:///eaf4124b-4beb-4ea9-aa39-9cbe69485ebe\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///94216953-dbb1-4d14-8a47-6332c8e03976\",\"moduleSequenceNumber\":232},{\"filename\":\"corp-office.js\",\"url\":\"blob:file:///ab96e42a-9eb2-4762-95dc-d821099c1f58\",\"moduleSequenceNumber\":233},{\"filename\":\"utils.js\",\"url\":\"blob:file:///3741e612-75b4-4acd-bf17-d01c2d6025a5\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///98a4412a-dc43-4877-ba7b-6077569d6a11\",\"moduleSequenceNumber\":232},{\"filename\":\"utils.js\",\"url\":\"blob:file:///8dedee94-fa53-46b2-9971-4668febb7e3f\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-strat-soft.js\",\"url\":\"blob:file:///7c5e1301-cccf-4a8d-b68f-c33b64437c79\",\"moduleSequenceNumber\":234},{\"filename\":\"utils.js\",\"url\":\"blob:file:///1e72fbb5-8cfa-41e0-b830-0725dc657ee1\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///c391555e-1610-4fe5-b75c-47b1aeb47070\",\"moduleSequenceNumber\":232},{\"filename\":\"corp-office.js\",\"url\":\"blob:file:///685b848c-7e6d-4d72-9f00-aabf61724fb0\",\"moduleSequenceNumber\":233},{\"filename\":\"utils.js\",\"url\":\"blob:file:///7074c0cf-9942-4eef-928d-3571a26f212d\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///e7957548-4f4d-4576-ab91-bbe3f3cc9cc1\",\"moduleSequenceNumber\":232},{\"filename\":\"utils.js\",\"url\":\"blob:file:///d18657bd-f56a-4283-87d7-3025f1b66885\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-strat-ag.js\",\"url\":\"blob:file:///133f71e4-32e9-43c9-87c1-c45637d0bddd\",\"moduleSequenceNumber\":231},{\"filename\":\"utils.js\",\"url\":\"blob:file:///4c921e71-8100-48d0-891c-a81cdc88fc22\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-upgrades.js\",\"url\":\"blob:file:///e2963037-5394-4fd3-b331-171787d4e636\",\"moduleSequenceNumber\":232},{\"filename\":\"utils.js\",\"url\":\"blob:file:///75e234ea-72c7-4abe-bb2f-9ba8f79f3716\",\"moduleSequenceNumber\":226},{\"filename\":\"corp-strat.js\",\"url\":\"blob:file:///058ffa23-d26a-4243-86e7-c1f8f04f4521\",\"moduleSequenceNumber\":79735}],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":107,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { forEach } from \\\"utils.js\\\";\\nimport { ProportionalUpgrade } from \\\"corp-upgrades.js\\\";\\nimport { OfficeUpgrade } from \\\"corp-office.js\\\";\\n\\nexport function ChemicalUpgrade (ns, options){\\n  \\n  var divisionName = options.divisionName;\\n  var cities = options.cities;\\n  var proportion = options.proportion;\\n\\n  var officeUpgrades = [];\\n  forEach(cities, function(i, e){\\n    var officeUpgrade = new OfficeUpgrade(ns, {\\n      division: divisionName,\\n      city: e,\\n      proportion: 1\\n    });\\n    officeUpgrades.push(officeUpgrade);\\n  });\\n\\n  return new ProportionalUpgrade(ns, {\\n    subUpgrades: officeUpgrades,\\n    proportion: 1\\n  });\\n  \\n}\",\"filename\":\"corp-strat-chem.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":108,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"vps-absol\",\"vps-arbok\",\"vps-arcanine\",\"vps-bonsly\",\"vps-buneary\",\"vps-charmander\",\"vps-clefairy\",\"vps-cubone\",\"vps-dartrix\",\"vps-diglet\",\"vps-dragonite\",\"vps-eevee\",\"vps-ekans\",\"vps-gengar\",\"vps-marowak\",\"vps-meowth\",\"vps-pikachu\",\"vps-rattata\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"75.4.8.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":64728406265,\"moneyMax\":1618210156625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1362,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"28.8.0.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":45881980305,\"moneyMax\":1147049507625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1179,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"24.5.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":28716073160,\"moneyMax\":717901829000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":927,\"serverGrowth\":60}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"60.6.1.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":38402211899,\"moneyMax\":960055297475,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1119,\"serverGrowth\":57}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"8.3.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\",\"ecorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":33823030118,\"moneyMax\":845575752950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1152,\"serverGrowth\":91}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"57.1.5.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\",\"megacorp\",\"fulcrumassets\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":54,\"hackDifficulty\":54,\"minDifficulty\":18,\"moneyAvailable\":21017935365,\"moneyMax\":525448384125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1140,\"serverGrowth\":46}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-936041-Joe'sGuns.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[5,-5,9,1,-8,-7,-9,10,3,-7,-7,10,3,0,6,-9,8,-5,-10,-4,10,-3,1,4,6,-9,-5,-6,9,1,-4,-6,1,-2,10],\"reward\":{\"name\":\"Joe's Guns\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"29.5.1.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":14353335875,\"moneyMax\":358833396875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1098,\"serverGrowth\":99}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"31.6.9.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"b-and-a\",\"nwo\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":23789126074,\"moneyMax\":594728151850,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":909,\"serverGrowth\":93}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-644578-Joe'sGuns.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"7113300642\",-37],\"reward\":{\"name\":\"Joe's Guns\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"74.8.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\",\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":27430342568,\"moneyMax\":685758564200,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1265,\"serverGrowth\":91}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"83.8.7.0\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":1711088228,\"moneyMax\":42777205700,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1152,\"serverGrowth\":97}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"1.3.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1207,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"26.4.6.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":1023137085,\"moneyMax\":25578427125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":892,\"serverGrowth\":74}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"30.4.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":827467891,\"moneyMax\":20686697275,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":879,\"serverGrowth\":59}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-327921.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[37,24,11,40,41,18,28,23,35],[5,29,40,49,27,39,21,14,47]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"53.8.7.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\",\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":732171522,\"moneyMax\":18304288050,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":934,\"serverGrowth\":60}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"54.1.5.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":730871541,\"moneyMax\":18271788525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":883,\"serverGrowth\":74}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"64.3.0.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"omnitek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":768538578,\"moneyMax\":19213464450,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":782,\"serverGrowth\":75}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"61.3.2.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":996566159,\"moneyMax\":24914153975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":892,\"serverGrowth\":85}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"univ-energy\",\"httpPortOpen\":false,\"ip\":\"60.8.2.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":1111483715,\"moneyMax\":27787092875,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":881,\"serverGrowth\":82}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"50.6.6.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":856577166,\"moneyMax\":21414429150,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":805,\"serverGrowth\":79}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"94.1.7.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":627463906,\"moneyMax\":15686597650,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":870,\"serverGrowth\":74}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"1.3.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"solaris\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":831172453,\"moneyMax\":20779311325,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":918,\"serverGrowth\":72}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"70.3.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"lexo-corp\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":849024805,\"moneyMax\":21225620125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":835,\"serverGrowth\":89}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"40.9.7.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aevum-police\",\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1011057470,\"moneyMax\":25276436750,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":860,\"serverGrowth\":57}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"56.8.9.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":908851799,\"moneyMax\":22721294975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":870,\"serverGrowth\":65}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"87.5.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":59,\"hackDifficulty\":59,\"minDifficulty\":20,\"moneyAvailable\":1092662173,\"moneyMax\":27316554325,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":789,\"serverGrowth\":73}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"53.1.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nova-med\",\"fulcrumtech\",\"stormtech\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":869333776,\"moneyMax\":21733344400,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":796,\"serverGrowth\":70}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"77.3.1.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":745683466,\"moneyMax\":18642086650,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":836,\"serverGrowth\":71}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"29.9.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"icarus\",\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1648497292,\"moneyMax\":41212432300,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":807,\"serverGrowth\":58}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"global-pharm\",\"httpPortOpen\":false,\"ip\":\"98.5.9.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":1717354651,\"moneyMax\":42933866275,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":829,\"serverGrowth\":84}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"29.4.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":1200910646,\"moneyMax\":30022766150,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":786,\"serverGrowth\":69}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"97.8.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":1497186120,\"moneyMax\":37429653000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":828,\"serverGrowth\":80}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"unitalife\",\"httpPortOpen\":false,\"ip\":\"51.8.3.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"solaris\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":1084464670,\"moneyMax\":27111616750,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":776,\"serverGrowth\":71}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"62.5.6.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"syscore\",\"galactic-cyber\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":753998420,\"moneyMax\":18849960500,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":715,\"serverGrowth\":57}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"10.9.8.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"catalyst\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":624504780,\"moneyMax\":15612619500,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":515,\"serverGrowth\":53}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"alpha-ent\",\"httpPortOpen\":false,\"ip\":\"50.2.8.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":53,\"minDifficulty\":18,\"moneyAvailable\":724844888,\"moneyMax\":18121122200,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":522,\"serverGrowth\":50}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aevum-police\",\"httpPortOpen\":false,\"ip\":\"69.1.3.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rothman-uni\",\"aerocorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":386374571,\"moneyMax\":9659364275,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":445,\"serverGrowth\":42}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"98.7.7.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\",\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":233580460,\"moneyMax\":5839511500,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":396,\"serverGrowth\":37}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"84.0.8.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":1031768627,\"moneyMax\":25794215675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":756,\"serverGrowth\":77}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"69.6.4.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"johnson-ortho\",\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":54,\"hackDifficulty\":54,\"minDifficulty\":18,\"moneyAvailable\":282041403,\"moneyMax\":7051035075,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":425,\"serverGrowth\":43}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"syscore\",\"httpPortOpen\":false,\"ip\":\"53.9.0.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":504285004,\"moneyMax\":12607125100,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":591,\"serverGrowth\":60}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"60.9.1.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"johnson-ortho\",\"rho-construction\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":467918158,\"moneyMax\":11697953950,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":426,\"serverGrowth\":32}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"56.1.5.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"rothman-uni\",\"syscore\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":197914921,\"moneyMax\":4947873025,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":313,\"serverGrowth\":46}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"comptek\",\"httpPortOpen\":false,\"ip\":\"6.5.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\",\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":240454860,\"moneyMax\":6011371500,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":364,\"serverGrowth\":47}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"36.5.7.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":382,\"serverGrowth\":73}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"10.8.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\",\"summit-uni\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":70936076,\"moneyMax\":1773401900,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":289,\"serverGrowth\":52}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"88.2.4.6\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.00999999999317,\"pid\":353,\"ramUsage\":2,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7c2b7e57-58d0-49f0-ae17-7dc7de214cb1\",\"moduleSequenceNumber\":109},{\"filename\":\"cell.js\",\"url\":\"blob:file:///9fdba6f7-35d9-4709-8a60-ed9507b1dfa5\",\"moduleSequenceNumber\":162}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"n00dles\",\"moduleSequenceNumber\":109,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7c2b7e57-58d0-49f0-ae17-7dc7de214cb1\",\"moduleSequenceNumber\":109},{\"filename\":\"cell.js\",\"url\":\"blob:file:///9fdba6f7-35d9-4709-8a60-ed9507b1dfa5\",\"moduleSequenceNumber\":162}],\"dependents\":[],\"ramUsage\":2,\"server\":\"n00dles\",\"moduleSequenceNumber\":162,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1.016,\"minDifficulty\":1,\"moneyAvailable\":1750000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"47.0.4.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":286,\"ramUsage\":2,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d2bb331-77ca-459c-9d7f-594cb2a6802c\",\"moduleSequenceNumber\":111},{\"filename\":\"cell.js\",\"url\":\"blob:file:///338c8c36-1cee-472f-86ea-25bf11702f06\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":287,\"ramUsage\":2,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d2bb331-77ca-459c-9d7f-594cb2a6802c\",\"moduleSequenceNumber\":111},{\"filename\":\"cell.js\",\"url\":\"blob:file:///338c8c36-1cee-472f-86ea-25bf11702f06\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":288,\"ramUsage\":2,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d2bb331-77ca-459c-9d7f-594cb2a6802c\",\"moduleSequenceNumber\":111},{\"filename\":\"cell.js\",\"url\":\"blob:file:///338c8c36-1cee-472f-86ea-25bf11702f06\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":289,\"ramUsage\":2,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d2bb331-77ca-459c-9d7f-594cb2a6802c\",\"moduleSequenceNumber\":111},{\"filename\":\"cell.js\",\"url\":\"blob:file:///338c8c36-1cee-472f-86ea-25bf11702f06\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":290,\"ramUsage\":2,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d2bb331-77ca-459c-9d7f-594cb2a6802c\",\"moduleSequenceNumber\":111},{\"filename\":\"cell.js\",\"url\":\"blob:file:///338c8c36-1cee-472f-86ea-25bf11702f06\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":291,\"ramUsage\":2,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d2bb331-77ca-459c-9d7f-594cb2a6802c\",\"moduleSequenceNumber\":111},{\"filename\":\"cell.js\",\"url\":\"blob:file:///338c8c36-1cee-472f-86ea-25bf11702f06\",\"moduleSequenceNumber\":169}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":292,\"ramUsage\":2,\"server\":\"foodnstuff\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d2bb331-77ca-459c-9d7f-594cb2a6802c\",\"moduleSequenceNumber\":111},{\"filename\":\"cell.js\",\"url\":\"blob:file:///338c8c36-1cee-472f-86ea-25bf11702f06\",\"moduleSequenceNumber\":169}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":111,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///7d2bb331-77ca-459c-9d7f-594cb2a6802c\",\"moduleSequenceNumber\":111},{\"filename\":\"cell.js\",\"url\":\"blob:file:///338c8c36-1cee-472f-86ea-25bf11702f06\",\"moduleSequenceNumber\":169}],\"dependents\":[],\"ramUsage\":2,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":169,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"zer0\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":2000000,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"88.4.2.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":279,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5648fa61-c841-49b9-a2c5-8d7d1323f79f\",\"moduleSequenceNumber\":113},{\"filename\":\"cell.js\",\"url\":\"blob:file:///c81471fd-06a4-4ada-92c4-f7483d365285\",\"moduleSequenceNumber\":176}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":280,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5648fa61-c841-49b9-a2c5-8d7d1323f79f\",\"moduleSequenceNumber\":113},{\"filename\":\"cell.js\",\"url\":\"blob:file:///c81471fd-06a4-4ada-92c4-f7483d365285\",\"moduleSequenceNumber\":176}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":281,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5648fa61-c841-49b9-a2c5-8d7d1323f79f\",\"moduleSequenceNumber\":113},{\"filename\":\"cell.js\",\"url\":\"blob:file:///c81471fd-06a4-4ada-92c4-f7483d365285\",\"moduleSequenceNumber\":176}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":282,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5648fa61-c841-49b9-a2c5-8d7d1323f79f\",\"moduleSequenceNumber\":113},{\"filename\":\"cell.js\",\"url\":\"blob:file:///c81471fd-06a4-4ada-92c4-f7483d365285\",\"moduleSequenceNumber\":176}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":283,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5648fa61-c841-49b9-a2c5-8d7d1323f79f\",\"moduleSequenceNumber\":113},{\"filename\":\"cell.js\",\"url\":\"blob:file:///c81471fd-06a4-4ada-92c4-f7483d365285\",\"moduleSequenceNumber\":176}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":284,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5648fa61-c841-49b9-a2c5-8d7d1323f79f\",\"moduleSequenceNumber\":113},{\"filename\":\"cell.js\",\"url\":\"blob:file:///c81471fd-06a4-4ada-92c4-f7483d365285\",\"moduleSequenceNumber\":176}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":285,\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5648fa61-c841-49b9-a2c5-8d7d1323f79f\",\"moduleSequenceNumber\":113},{\"filename\":\"cell.js\",\"url\":\"blob:file:///c81471fd-06a4-4ada-92c4-f7483d365285\",\"moduleSequenceNumber\":176}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":113,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///5648fa61-c841-49b9-a2c5-8d7d1323f79f\",\"moduleSequenceNumber\":113},{\"filename\":\"cell.js\",\"url\":\"blob:file:///c81471fd-06a4-4ada-92c4-f7483d365285\",\"moduleSequenceNumber\":176}],\"dependents\":[],\"ramUsage\":2,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":176,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":11.830000000000004,\"minDifficulty\":3,\"moneyAvailable\":16563465.314918006,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"40.0.6.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":269,\"ramUsage\":2,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fff4f997-7862-40cd-b085-08d580a56809\",\"moduleSequenceNumber\":115},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a8aae4d-5df4-4675-abb7-10e32ce311f5\",\"moduleSequenceNumber\":183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":270,\"ramUsage\":2,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fff4f997-7862-40cd-b085-08d580a56809\",\"moduleSequenceNumber\":115},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a8aae4d-5df4-4675-abb7-10e32ce311f5\",\"moduleSequenceNumber\":183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":271,\"ramUsage\":2,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fff4f997-7862-40cd-b085-08d580a56809\",\"moduleSequenceNumber\":115},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a8aae4d-5df4-4675-abb7-10e32ce311f5\",\"moduleSequenceNumber\":183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":272,\"ramUsage\":2,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fff4f997-7862-40cd-b085-08d580a56809\",\"moduleSequenceNumber\":115},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a8aae4d-5df4-4675-abb7-10e32ce311f5\",\"moduleSequenceNumber\":183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":273,\"ramUsage\":2,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fff4f997-7862-40cd-b085-08d580a56809\",\"moduleSequenceNumber\":115},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a8aae4d-5df4-4675-abb7-10e32ce311f5\",\"moduleSequenceNumber\":183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":274,\"ramUsage\":2,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fff4f997-7862-40cd-b085-08d580a56809\",\"moduleSequenceNumber\":115},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a8aae4d-5df4-4675-abb7-10e32ce311f5\",\"moduleSequenceNumber\":183}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":275,\"ramUsage\":2,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fff4f997-7862-40cd-b085-08d580a56809\",\"moduleSequenceNumber\":115},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a8aae4d-5df4-4675-abb7-10e32ce311f5\",\"moduleSequenceNumber\":183}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"joesguns\",\"moduleSequenceNumber\":115,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fff4f997-7862-40cd-b085-08d580a56809\",\"moduleSequenceNumber\":115},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a8aae4d-5df4-4675-abb7-10e32ce311f5\",\"moduleSequenceNumber\":183}],\"dependents\":[],\"ramUsage\":2,\"server\":\"joesguns\",\"moduleSequenceNumber\":183,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2500000,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"33.4.8.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":323,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":324,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":325,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":326,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":327,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":328,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":329,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":330,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":331,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":332,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":333,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":334,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":335,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":336,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":337,\"ramUsage\":2,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"zer0\",\"moduleSequenceNumber\":117,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///d93441ac-b9e8-458b-a610-a0a780a3fb7a\",\"moduleSequenceNumber\":117},{\"filename\":\"cell.js\",\"url\":\"blob:file:///daf6b5e1-bef6-465f-a5c8-69dee40e7c24\",\"moduleSequenceNumber\":198}],\"dependents\":[],\"ramUsage\":2,\"server\":\"zer0\",\"moduleSequenceNumber\":198,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"foodnstuff\",\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":7500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"20.1.7.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":224,\"ramUsage\":2,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///025ba163-f09e-41ab-9849-0482d9d5222e\",\"moduleSequenceNumber\":119},{\"filename\":\"cell.js\",\"url\":\"blob:file:///85c067ca-89a1-4f25-b841-f09a35611929\",\"moduleSequenceNumber\":205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":225,\"ramUsage\":2,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///025ba163-f09e-41ab-9849-0482d9d5222e\",\"moduleSequenceNumber\":119},{\"filename\":\"cell.js\",\"url\":\"blob:file:///85c067ca-89a1-4f25-b841-f09a35611929\",\"moduleSequenceNumber\":205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":226,\"ramUsage\":2,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///025ba163-f09e-41ab-9849-0482d9d5222e\",\"moduleSequenceNumber\":119},{\"filename\":\"cell.js\",\"url\":\"blob:file:///85c067ca-89a1-4f25-b841-f09a35611929\",\"moduleSequenceNumber\":205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":227,\"ramUsage\":2,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///025ba163-f09e-41ab-9849-0482d9d5222e\",\"moduleSequenceNumber\":119},{\"filename\":\"cell.js\",\"url\":\"blob:file:///85c067ca-89a1-4f25-b841-f09a35611929\",\"moduleSequenceNumber\":205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":228,\"ramUsage\":2,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///025ba163-f09e-41ab-9849-0482d9d5222e\",\"moduleSequenceNumber\":119},{\"filename\":\"cell.js\",\"url\":\"blob:file:///85c067ca-89a1-4f25-b841-f09a35611929\",\"moduleSequenceNumber\":205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":229,\"ramUsage\":2,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///025ba163-f09e-41ab-9849-0482d9d5222e\",\"moduleSequenceNumber\":119},{\"filename\":\"cell.js\",\"url\":\"blob:file:///85c067ca-89a1-4f25-b841-f09a35611929\",\"moduleSequenceNumber\":205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":230,\"ramUsage\":2,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///025ba163-f09e-41ab-9849-0482d9d5222e\",\"moduleSequenceNumber\":119},{\"filename\":\"cell.js\",\"url\":\"blob:file:///85c067ca-89a1-4f25-b841-f09a35611929\",\"moduleSequenceNumber\":205}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"nectar-net\",\"moduleSequenceNumber\":119,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///025ba163-f09e-41ab-9849-0482d9d5222e\",\"moduleSequenceNumber\":119},{\"filename\":\"cell.js\",\"url\":\"blob:file:///85c067ca-89a1-4f25-b841-f09a35611929\",\"moduleSequenceNumber\":205}],\"dependents\":[],\"ramUsage\":2,\"server\":\"nectar-net\",\"moduleSequenceNumber\":205,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"harakiri-sushi\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"61.2.5.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":338,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":339,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":340,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":341,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":342,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":343,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":344,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.20999999999316,\"pid\":345,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.00999999999317,\"pid\":346,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.00999999999317,\"pid\":347,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.00999999999317,\"pid\":348,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.00999999999317,\"pid\":349,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.00999999999317,\"pid\":350,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.00999999999317,\"pid\":351,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.00999999999317,\"pid\":352,\"ramUsage\":2,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"neo-net\",\"moduleSequenceNumber\":121,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///a06d53fd-a0e0-4ee4-8d52-c38da8fe9b66\",\"moduleSequenceNumber\":121},{\"filename\":\"cell.js\",\"url\":\"blob:file:///66215cf9-092c-4b58-ab05-db9e2092913d\",\"moduleSequenceNumber\":220}],\"dependents\":[],\"ramUsage\":2,\"server\":\"neo-net\",\"moduleSequenceNumber\":220,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zer0\",\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-724707-Joe'sGuns.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[56,180,88,143,174,134,145,187,83,45,7,112,22,143,171,129,59,161,94,68,59,85,173,148,140,179,5,67,124,137,107,156,70,74,95,171,76,196,115,123,53],\"reward\":{\"name\":\"Joe's Guns\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"27.5.7.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":62,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":231,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":232,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":233,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":234,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":235,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":236,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":237,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":238,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":239,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":240,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":241,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":242,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":243,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":244,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":245,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|15\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":246,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|16\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":247,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|17\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":248,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|18\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":249,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|19\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":250,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|20\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":251,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|21\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":252,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|22\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":253,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|23\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.4099999999931,\"pid\":254,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|24\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":255,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|25\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":256,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|26\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":257,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|27\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":258,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|28\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":259,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|29\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":260,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix|30\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":261,\"ramUsage\":2,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"silver-helix\",\"moduleSequenceNumber\":123,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c66afdca-ff36-4014-b334-374a9921ef83\",\"moduleSequenceNumber\":123},{\"filename\":\"cell.js\",\"url\":\"blob:file:///814360b5-9602-49d5-9cce-0e2532d0bfc1\",\"moduleSequenceNumber\":251}],\"dependents\":[],\"ramUsage\":2,\"server\":\"silver-helix\",\"moduleSequenceNumber\":251,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"nectar-net\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":45000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"74.0.1.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":262,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///e1374bfd-a808-4723-bac2-c3b49b9c430f\",\"moduleSequenceNumber\":125},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f7d7c42c-f88f-4423-a8e4-1ac6ac5fc765\",\"moduleSequenceNumber\":258}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":263,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///e1374bfd-a808-4723-bac2-c3b49b9c430f\",\"moduleSequenceNumber\":125},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f7d7c42c-f88f-4423-a8e4-1ac6ac5fc765\",\"moduleSequenceNumber\":258}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":264,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///e1374bfd-a808-4723-bac2-c3b49b9c430f\",\"moduleSequenceNumber\":125},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f7d7c42c-f88f-4423-a8e4-1ac6ac5fc765\",\"moduleSequenceNumber\":258}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":265,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///e1374bfd-a808-4723-bac2-c3b49b9c430f\",\"moduleSequenceNumber\":125},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f7d7c42c-f88f-4423-a8e4-1ac6ac5fc765\",\"moduleSequenceNumber\":258}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":266,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///e1374bfd-a808-4723-bac2-c3b49b9c430f\",\"moduleSequenceNumber\":125},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f7d7c42c-f88f-4423-a8e4-1ac6ac5fc765\",\"moduleSequenceNumber\":258}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":267,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///e1374bfd-a808-4723-bac2-c3b49b9c430f\",\"moduleSequenceNumber\":125},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f7d7c42c-f88f-4423-a8e4-1ac6ac5fc765\",\"moduleSequenceNumber\":258}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.2099999999931,\"pid\":268,\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///e1374bfd-a808-4723-bac2-c3b49b9c430f\",\"moduleSequenceNumber\":125},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f7d7c42c-f88f-4423-a8e4-1ac6ac5fc765\",\"moduleSequenceNumber\":258}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":125,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///e1374bfd-a808-4723-bac2-c3b49b9c430f\",\"moduleSequenceNumber\":125},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f7d7c42c-f88f-4423-a8e4-1ac6ac5fc765\",\"moduleSequenceNumber\":258}],\"dependents\":[],\"ramUsage\":2,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":258,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":3000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"11.3.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":217,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///03d74217-6012-43e2-a071-67fbb6082f9b\",\"moduleSequenceNumber\":127},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e5ad3f5d-66fa-4cbb-9154-f8e0c05a38e5\",\"moduleSequenceNumber\":265}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":218,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///03d74217-6012-43e2-a071-67fbb6082f9b\",\"moduleSequenceNumber\":127},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e5ad3f5d-66fa-4cbb-9154-f8e0c05a38e5\",\"moduleSequenceNumber\":265}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":219,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///03d74217-6012-43e2-a071-67fbb6082f9b\",\"moduleSequenceNumber\":127},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e5ad3f5d-66fa-4cbb-9154-f8e0c05a38e5\",\"moduleSequenceNumber\":265}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":220,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///03d74217-6012-43e2-a071-67fbb6082f9b\",\"moduleSequenceNumber\":127},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e5ad3f5d-66fa-4cbb-9154-f8e0c05a38e5\",\"moduleSequenceNumber\":265}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":221,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///03d74217-6012-43e2-a071-67fbb6082f9b\",\"moduleSequenceNumber\":127},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e5ad3f5d-66fa-4cbb-9154-f8e0c05a38e5\",\"moduleSequenceNumber\":265}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":222,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///03d74217-6012-43e2-a071-67fbb6082f9b\",\"moduleSequenceNumber\":127},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e5ad3f5d-66fa-4cbb-9154-f8e0c05a38e5\",\"moduleSequenceNumber\":265}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.6099999999931,\"pid\":223,\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///03d74217-6012-43e2-a071-67fbb6082f9b\",\"moduleSequenceNumber\":127},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e5ad3f5d-66fa-4cbb-9154-f8e0c05a38e5\",\"moduleSequenceNumber\":265}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":127,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///03d74217-6012-43e2-a071-67fbb6082f9b\",\"moduleSequenceNumber\":127},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e5ad3f5d-66fa-4cbb-9154-f8e0c05a38e5\",\"moduleSequenceNumber\":265}],\"dependents\":[],\"ramUsage\":2,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":265,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":25732507.593641225,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"82.3.5.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":308,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":309,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":310,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":311,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":312,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":313,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":314,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":315,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":316,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":317,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":318,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":319,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":320,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":321,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.40999999999315,\"pid\":322,\"ramUsage\":2,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"phantasy\",\"moduleSequenceNumber\":129,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///375f8a22-483f-4137-a693-a53fe654ea24\",\"moduleSequenceNumber\":129},{\"filename\":\"cell.js\",\"url\":\"blob:file:///d8553e85-7366-4c1f-8666-3139be18f5c4\",\"moduleSequenceNumber\":280}],\"dependents\":[],\"ramUsage\":2,\"server\":\"phantasy\",\"moduleSequenceNumber\":280,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"max-hardware\",\"comptek\",\"johnson-ortho\",\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"50.8.6.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":293,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":294,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":295,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":296,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":297,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":298,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":299,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":300,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":301,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.8099999999931,\"pid\":302,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":303,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":304,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":305,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":306,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":271.60999999999314,\"pid\":307,\"ramUsage\":2,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"max-hardware\",\"moduleSequenceNumber\":131,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c44d83b9-c257-4c38-8b22-159a5214869a\",\"moduleSequenceNumber\":131},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1e49a246-b92f-4a24-8eff-46f177fff3ad\",\"moduleSequenceNumber\":295}],\"dependents\":[],\"ramUsage\":2,\"server\":\"max-hardware\",\"moduleSequenceNumber\":295,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"foodnstuff\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":250000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"69.1.3.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":354,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":355,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":356,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":357,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":358,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":359,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":360,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":361,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":362,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":363,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":364,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.8099999999932,\"pid\":365,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"pid\":366,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"pid\":367,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"pid\":368,\"ramUsage\":2,\"server\":\"omega-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"omega-net\",\"moduleSequenceNumber\":339,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f722b35d-2008-4832-be09-1979d0264ffb\",\"moduleSequenceNumber\":339},{\"filename\":\"cell.js\",\"url\":\"blob:file:///e48fb040-cbbe-41e9-95c8-6b40013d9136\",\"moduleSequenceNumber\":342}],\"dependents\":[],\"ramUsage\":2,\"server\":\"omega-net\",\"moduleSequenceNumber\":342,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"nectar-net\",\"netlink\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":67454823,\"moneyMax\":1686370575,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":191,\"serverGrowth\":33}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"74.2.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":35,\"hackDifficulty\":35,\"minDifficulty\":12,\"moneyAvailable\":43535759,\"moneyMax\":1088393975,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":260,\"serverGrowth\":30}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"89.2.8.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":30,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":202,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":203,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":204,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":205,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":206,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":207,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":208,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":209,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":210,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":211,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":212,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":213,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":214,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":215,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.80999999999307,\"pid\":216,\"ramUsage\":2,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"iron-gym\",\"moduleSequenceNumber\":133,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///349687d8-1393-4e01-bc81-e768701a6a26\",\"moduleSequenceNumber\":133},{\"filename\":\"cell.js\",\"url\":\"blob:file:///517c3ee8-7a89-4525-86df-55872b99c191\",\"moduleSequenceNumber\":310}],\"dependents\":[],\"ramUsage\":2,\"server\":\"iron-gym\",\"moduleSequenceNumber\":310,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10,\"minDifficulty\":10,\"moneyAvailable\":20000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"52.7.5.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rothman-uni\",\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":512,\"serverGrowth\":33}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"8.5.9.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":972,\"serverGrowth\":59}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"71.2.6.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":703,\"serverGrowth\":56}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"46.4.0.9\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":509,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"19.5.6.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"crush-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":340,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"42.4.4.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"pid\":369,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"pid\":370,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fd40aa61-b94f-4a78-8651-1cd1fb4377f8\",\"moduleSequenceNumber\":344},{\"filename\":\"cell.js\",\"url\":\"blob:file:///07e6b802-ab15-4967-8127-f16714a132ac\",\"moduleSequenceNumber\":347}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"pid\":371,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fd40aa61-b94f-4a78-8651-1cd1fb4377f8\",\"moduleSequenceNumber\":344},{\"filename\":\"cell.js\",\"url\":\"blob:file:///07e6b802-ab15-4967-8127-f16714a132ac\",\"moduleSequenceNumber\":347}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"pid\":372,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fd40aa61-b94f-4a78-8651-1cd1fb4377f8\",\"moduleSequenceNumber\":344},{\"filename\":\"cell.js\",\"url\":\"blob:file:///07e6b802-ab15-4967-8127-f16714a132ac\",\"moduleSequenceNumber\":347}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.6099999999932,\"pid\":373,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fd40aa61-b94f-4a78-8651-1cd1fb4377f8\",\"moduleSequenceNumber\":344},{\"filename\":\"cell.js\",\"url\":\"blob:file:///07e6b802-ab15-4967-8127-f16714a132ac\",\"moduleSequenceNumber\":347}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.4099999999932,\"pid\":374,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fd40aa61-b94f-4a78-8651-1cd1fb4377f8\",\"moduleSequenceNumber\":344},{\"filename\":\"cell.js\",\"url\":\"blob:file:///07e6b802-ab15-4967-8127-f16714a132ac\",\"moduleSequenceNumber\":347}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.4099999999932,\"pid\":375,\"ramUsage\":2,\"server\":\"avmnite-02h\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fd40aa61-b94f-4a78-8651-1cd1fb4377f8\",\"moduleSequenceNumber\":344},{\"filename\":\"cell.js\",\"url\":\"blob:file:///07e6b802-ab15-4967-8127-f16714a132ac\",\"moduleSequenceNumber\":347}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":344,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///fd40aa61-b94f-4a78-8651-1cd1fb4377f8\",\"moduleSequenceNumber\":344},{\"filename\":\"cell.js\",\"url\":\"blob:file:///07e6b802-ab15-4967-8127-f16714a132ac\",\"moduleSequenceNumber\":347}],\"dependents\":[],\"ramUsage\":2,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":347,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":2,\"requiredHackingSkill\":220,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"37.4.0.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"stormtech\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":516,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"81.7.7.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":276,\"ramUsage\":2,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///9a93202d-b600-4a40-9a1c-db2f83753953\",\"moduleSequenceNumber\":135},{\"filename\":\"cell.js\",\"url\":\"blob:file:///41c071b3-e78b-44ad-bbbc-e3acdd889274\",\"moduleSequenceNumber\":313}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":277,\"ramUsage\":2,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///9a93202d-b600-4a40-9a1c-db2f83753953\",\"moduleSequenceNumber\":135},{\"filename\":\"cell.js\",\"url\":\"blob:file:///41c071b3-e78b-44ad-bbbc-e3acdd889274\",\"moduleSequenceNumber\":313}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":272.0099999999931,\"pid\":278,\"ramUsage\":2,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///9a93202d-b600-4a40-9a1c-db2f83753953\",\"moduleSequenceNumber\":135},{\"filename\":\"cell.js\",\"url\":\"blob:file:///41c071b3-e78b-44ad-bbbc-e3acdd889274\",\"moduleSequenceNumber\":313}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"CSEC\",\"moduleSequenceNumber\":135,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///9a93202d-b600-4a40-9a1c-db2f83753953\",\"moduleSequenceNumber\":135},{\"filename\":\"cell.js\",\"url\":\"blob:file:///41c071b3-e78b-44ad-bbbc-e3acdd889274\",\"moduleSequenceNumber\":313}],\"dependents\":[],\"ramUsage\":2,\"server\":\"CSEC\",\"moduleSequenceNumber\":313,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"joesguns\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":1,\"requiredHackingSkill\":59,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"82.8.9.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"91.6.8.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"vps-absol\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-absol\",\"httpPortOpen\":false,\"ip\":\"64.0.6.1\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":199,\"ramUsage\":2,\"server\":\"vps-absol\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///3c24eed3-1c5a-49a8-9f92-cb78aaeab4d9\",\"moduleSequenceNumber\":137},{\"filename\":\"cell.js\",\"url\":\"blob:file:///8a7b169b-d97f-4758-b848-7160c59dc3b9\",\"moduleSequenceNumber\":316}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":200,\"ramUsage\":2,\"server\":\"vps-absol\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///3c24eed3-1c5a-49a8-9f92-cb78aaeab4d9\",\"moduleSequenceNumber\":137},{\"filename\":\"cell.js\",\"url\":\"blob:file:///8a7b169b-d97f-4758-b848-7160c59dc3b9\",\"moduleSequenceNumber\":316}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-absol|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":201,\"ramUsage\":2,\"server\":\"vps-absol\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///3c24eed3-1c5a-49a8-9f92-cb78aaeab4d9\",\"moduleSequenceNumber\":137},{\"filename\":\"cell.js\",\"url\":\"blob:file:///8a7b169b-d97f-4758-b848-7160c59dc3b9\",\"moduleSequenceNumber\":316}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-absol\",\"moduleSequenceNumber\":137,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///3c24eed3-1c5a-49a8-9f92-cb78aaeab4d9\",\"moduleSequenceNumber\":137},{\"filename\":\"cell.js\",\"url\":\"blob:file:///8a7b169b-d97f-4758-b848-7160c59dc3b9\",\"moduleSequenceNumber\":316}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-absol\",\"moduleSequenceNumber\":316,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-arbok\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-arbok\",\"httpPortOpen\":false,\"ip\":\"63.2.9.0\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arbok|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":198,\"ramUsage\":2,\"server\":\"vps-arbok\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c8c043fa-e48a-4e73-954e-5e29eab40149\",\"moduleSequenceNumber\":139},{\"filename\":\"cell.js\",\"url\":\"blob:file:///38942bf5-18da-40de-b3ab-609a4ac34733\",\"moduleSequenceNumber\":317}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-arbok\",\"moduleSequenceNumber\":139,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c8c043fa-e48a-4e73-954e-5e29eab40149\",\"moduleSequenceNumber\":139},{\"filename\":\"cell.js\",\"url\":\"blob:file:///38942bf5-18da-40de-b3ab-609a4ac34733\",\"moduleSequenceNumber\":317}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-arbok\",\"moduleSequenceNumber\":317,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-arcanine\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-arcanine\",\"httpPortOpen\":false,\"ip\":\"78.0.9.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arcanine|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":195,\"ramUsage\":2,\"server\":\"vps-arcanine\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6826fb8f-8d97-4fae-bce5-1ce281ac6fbf\",\"moduleSequenceNumber\":141},{\"filename\":\"cell.js\",\"url\":\"blob:file:///2577522a-f681-4cb5-8e99-c9e95914ade1\",\"moduleSequenceNumber\":320}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arcanine|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":196,\"ramUsage\":2,\"server\":\"vps-arcanine\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6826fb8f-8d97-4fae-bce5-1ce281ac6fbf\",\"moduleSequenceNumber\":141},{\"filename\":\"cell.js\",\"url\":\"blob:file:///2577522a-f681-4cb5-8e99-c9e95914ade1\",\"moduleSequenceNumber\":320}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-arcanine|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":197,\"ramUsage\":2,\"server\":\"vps-arcanine\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6826fb8f-8d97-4fae-bce5-1ce281ac6fbf\",\"moduleSequenceNumber\":141},{\"filename\":\"cell.js\",\"url\":\"blob:file:///2577522a-f681-4cb5-8e99-c9e95914ade1\",\"moduleSequenceNumber\":320}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-arcanine\",\"moduleSequenceNumber\":141,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6826fb8f-8d97-4fae-bce5-1ce281ac6fbf\",\"moduleSequenceNumber\":141},{\"filename\":\"cell.js\",\"url\":\"blob:file:///2577522a-f681-4cb5-8e99-c9e95914ade1\",\"moduleSequenceNumber\":320}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-arcanine\",\"moduleSequenceNumber\":320,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-bonsly\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-bonsly\",\"httpPortOpen\":false,\"ip\":\"52.9.1.0\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-bonsly|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":194,\"ramUsage\":2,\"server\":\"vps-bonsly\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///2846a791-1d9f-4fb4-b999-13f8b9c06973\",\"moduleSequenceNumber\":143},{\"filename\":\"cell.js\",\"url\":\"blob:file:///8d93ec0a-de47-43a8-9d2b-20715d9f3c8d\",\"moduleSequenceNumber\":321}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-bonsly\",\"moduleSequenceNumber\":143,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///2846a791-1d9f-4fb4-b999-13f8b9c06973\",\"moduleSequenceNumber\":143},{\"filename\":\"cell.js\",\"url\":\"blob:file:///8d93ec0a-de47-43a8-9d2b-20715d9f3c8d\",\"moduleSequenceNumber\":321}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-bonsly\",\"moduleSequenceNumber\":321,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-buneary\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-buneary\",\"httpPortOpen\":false,\"ip\":\"55.5.4.2\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":191,\"ramUsage\":2,\"server\":\"vps-buneary\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///94741126-0f06-4cbc-9e3e-9d48b01675d5\",\"moduleSequenceNumber\":145},{\"filename\":\"cell.js\",\"url\":\"blob:file:///39a9f718-be71-4c2e-ab6a-136470f3f303\",\"moduleSequenceNumber\":324}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":192,\"ramUsage\":2,\"server\":\"vps-buneary\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///94741126-0f06-4cbc-9e3e-9d48b01675d5\",\"moduleSequenceNumber\":145},{\"filename\":\"cell.js\",\"url\":\"blob:file:///39a9f718-be71-4c2e-ab6a-136470f3f303\",\"moduleSequenceNumber\":324}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-buneary|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":193,\"ramUsage\":2,\"server\":\"vps-buneary\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///94741126-0f06-4cbc-9e3e-9d48b01675d5\",\"moduleSequenceNumber\":145},{\"filename\":\"cell.js\",\"url\":\"blob:file:///39a9f718-be71-4c2e-ab6a-136470f3f303\",\"moduleSequenceNumber\":324}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-buneary\",\"moduleSequenceNumber\":145,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///94741126-0f06-4cbc-9e3e-9d48b01675d5\",\"moduleSequenceNumber\":145},{\"filename\":\"cell.js\",\"url\":\"blob:file:///39a9f718-be71-4c2e-ab6a-136470f3f303\",\"moduleSequenceNumber\":324}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-buneary\",\"moduleSequenceNumber\":324,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-charmander\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-charmander\",\"httpPortOpen\":false,\"ip\":\"0.3.9.5\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-charmander|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":190,\"ramUsage\":2,\"server\":\"vps-charmander\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f5852f95-faef-46e6-aebb-c23264ac9423\",\"moduleSequenceNumber\":147},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a431e35-4be6-47e0-9d42-7eda8739dd99\",\"moduleSequenceNumber\":325}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-charmander\",\"moduleSequenceNumber\":147,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///f5852f95-faef-46e6-aebb-c23264ac9423\",\"moduleSequenceNumber\":147},{\"filename\":\"cell.js\",\"url\":\"blob:file:///0a431e35-4be6-47e0-9d42-7eda8739dd99\",\"moduleSequenceNumber\":325}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-charmander\",\"moduleSequenceNumber\":325,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-clefairy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-clefairy\",\"httpPortOpen\":false,\"ip\":\"94.3.5.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":187,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///8b8515f5-73ce-4541-8606-1b60ffbcbbec\",\"moduleSequenceNumber\":149},{\"filename\":\"cell.js\",\"url\":\"blob:file:///22312169-02f1-419e-9a9f-778860eb62fe\",\"moduleSequenceNumber\":328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":188,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///8b8515f5-73ce-4541-8606-1b60ffbcbbec\",\"moduleSequenceNumber\":149},{\"filename\":\"cell.js\",\"url\":\"blob:file:///22312169-02f1-419e-9a9f-778860eb62fe\",\"moduleSequenceNumber\":328}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-clefairy|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.00999999999306,\"pid\":189,\"ramUsage\":2,\"server\":\"vps-clefairy\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///8b8515f5-73ce-4541-8606-1b60ffbcbbec\",\"moduleSequenceNumber\":149},{\"filename\":\"cell.js\",\"url\":\"blob:file:///22312169-02f1-419e-9a9f-778860eb62fe\",\"moduleSequenceNumber\":328}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-clefairy\",\"moduleSequenceNumber\":149,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///8b8515f5-73ce-4541-8606-1b60ffbcbbec\",\"moduleSequenceNumber\":149},{\"filename\":\"cell.js\",\"url\":\"blob:file:///22312169-02f1-419e-9a9f-778860eb62fe\",\"moduleSequenceNumber\":328}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-clefairy\",\"moduleSequenceNumber\":328,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-cubone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-cubone\",\"httpPortOpen\":false,\"ip\":\"68.1.3.0\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-cubone|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":186,\"ramUsage\":2,\"server\":\"vps-cubone\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///927aa9d5-a00c-48a0-b221-cfc73c125e78\",\"moduleSequenceNumber\":151},{\"filename\":\"cell.js\",\"url\":\"blob:file:///a19bb19a-98d9-483f-89be-a22c340fbac3\",\"moduleSequenceNumber\":329}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-cubone\",\"moduleSequenceNumber\":151,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///927aa9d5-a00c-48a0-b221-cfc73c125e78\",\"moduleSequenceNumber\":151},{\"filename\":\"cell.js\",\"url\":\"blob:file:///a19bb19a-98d9-483f-89be-a22c340fbac3\",\"moduleSequenceNumber\":329}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-cubone\",\"moduleSequenceNumber\":329,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-dartrix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-dartrix\",\"httpPortOpen\":false,\"ip\":\"9.1.8.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dartrix|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":183,\"ramUsage\":2,\"server\":\"vps-dartrix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///b3c821c1-6b05-491c-9d7f-73fbfa103e9c\",\"moduleSequenceNumber\":153},{\"filename\":\"cell.js\",\"url\":\"blob:file:///a2f2284e-3b4a-41d6-9b34-f791e530c120\",\"moduleSequenceNumber\":332}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dartrix|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":184,\"ramUsage\":2,\"server\":\"vps-dartrix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///b3c821c1-6b05-491c-9d7f-73fbfa103e9c\",\"moduleSequenceNumber\":153},{\"filename\":\"cell.js\",\"url\":\"blob:file:///a2f2284e-3b4a-41d6-9b34-f791e530c120\",\"moduleSequenceNumber\":332}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dartrix|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":185,\"ramUsage\":2,\"server\":\"vps-dartrix\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///b3c821c1-6b05-491c-9d7f-73fbfa103e9c\",\"moduleSequenceNumber\":153},{\"filename\":\"cell.js\",\"url\":\"blob:file:///a2f2284e-3b4a-41d6-9b34-f791e530c120\",\"moduleSequenceNumber\":332}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-dartrix\",\"moduleSequenceNumber\":153,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///b3c821c1-6b05-491c-9d7f-73fbfa103e9c\",\"moduleSequenceNumber\":153},{\"filename\":\"cell.js\",\"url\":\"blob:file:///a2f2284e-3b4a-41d6-9b34-f791e530c120\",\"moduleSequenceNumber\":332}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-dartrix\",\"moduleSequenceNumber\":332,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-diglet\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-diglet\",\"httpPortOpen\":false,\"ip\":\"67.5.5.3\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-diglet|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":182,\"ramUsage\":2,\"server\":\"vps-diglet\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///ff0346c2-25d6-473c-9841-cd3ed9dff2d3\",\"moduleSequenceNumber\":155},{\"filename\":\"cell.js\",\"url\":\"blob:file:///182c9463-b8d7-44b3-8fc6-78777b39a723\",\"moduleSequenceNumber\":333}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-diglet\",\"moduleSequenceNumber\":155,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///ff0346c2-25d6-473c-9841-cd3ed9dff2d3\",\"moduleSequenceNumber\":155},{\"filename\":\"cell.js\",\"url\":\"blob:file:///182c9463-b8d7-44b3-8fc6-78777b39a723\",\"moduleSequenceNumber\":333}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-diglet\",\"moduleSequenceNumber\":333,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-dragonite\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-dragonite\",\"httpPortOpen\":false,\"ip\":\"30.9.5.3\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-dragonite|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":181,\"ramUsage\":2,\"server\":\"vps-dragonite\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///b1b946db-1d45-4c9d-9d06-794792b85f43\",\"moduleSequenceNumber\":157},{\"filename\":\"cell.js\",\"url\":\"blob:file:///fb527d18-9cd2-4559-ab1e-9b70e32b3a92\",\"moduleSequenceNumber\":334}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-dragonite\",\"moduleSequenceNumber\":157,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///b1b946db-1d45-4c9d-9d06-794792b85f43\",\"moduleSequenceNumber\":157},{\"filename\":\"cell.js\",\"url\":\"blob:file:///fb527d18-9cd2-4559-ab1e-9b70e32b3a92\",\"moduleSequenceNumber\":334}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-dragonite\",\"moduleSequenceNumber\":334,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-eevee\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-eevee\",\"httpPortOpen\":false,\"ip\":\"99.6.9.6\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":6,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":178,\"ramUsage\":2,\"server\":\"vps-eevee\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c5be5710-8358-42c8-9d8c-c95023f5721b\",\"moduleSequenceNumber\":159},{\"filename\":\"cell.js\",\"url\":\"blob:file:///b41ab274-f7a4-4b73-8724-1b6d874ea681\",\"moduleSequenceNumber\":337}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":179,\"ramUsage\":2,\"server\":\"vps-eevee\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c5be5710-8358-42c8-9d8c-c95023f5721b\",\"moduleSequenceNumber\":159},{\"filename\":\"cell.js\",\"url\":\"blob:file:///b41ab274-f7a4-4b73-8724-1b6d874ea681\",\"moduleSequenceNumber\":337}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-eevee|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":273.20999999999304,\"pid\":180,\"ramUsage\":2,\"server\":\"vps-eevee\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c5be5710-8358-42c8-9d8c-c95023f5721b\",\"moduleSequenceNumber\":159},{\"filename\":\"cell.js\",\"url\":\"blob:file:///b41ab274-f7a4-4b73-8724-1b6d874ea681\",\"moduleSequenceNumber\":337}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-eevee\",\"moduleSequenceNumber\":159,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///c5be5710-8358-42c8-9d8c-c95023f5721b\",\"moduleSequenceNumber\":159},{\"filename\":\"cell.js\",\"url\":\"blob:file:///b41ab274-f7a4-4b73-8724-1b6d874ea681\",\"moduleSequenceNumber\":337}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-eevee\",\"moduleSequenceNumber\":337,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-ekans\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-ekans\",\"httpPortOpen\":false,\"ip\":\"8.6.4.2\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1016,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.4099999999932,\"pid\":376,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.4099999999932,\"pid\":377,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.4099999999932,\"pid\":378,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.4099999999932,\"pid\":379,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":380,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":381,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":382,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":383,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":384,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":385,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":386,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":387,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":388,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":389,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":390,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|15\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":391,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|16\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":392,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|17\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":393,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|18\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":394,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|19\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.2099999999932,\"pid\":395,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|20\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":396,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|21\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":397,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|22\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":398,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|23\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":399,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|24\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":400,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|25\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":401,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|26\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":402,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|27\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":403,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|28\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":404,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|29\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":405,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|30\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":406,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|31\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":407,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|32\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":408,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|33\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":409,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|34\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":410,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|35\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":411,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|36\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":270.0099999999932,\"pid\":412,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|37\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":413,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|38\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":414,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|39\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":415,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|40\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":416,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|41\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":417,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|42\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":418,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|43\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":419,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|44\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":420,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|45\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":421,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|46\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":422,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|47\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":423,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|48\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":424,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|49\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":425,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|50\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":426,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|51\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":427,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|52\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":428,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|53\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.80999999999324,\"pid\":429,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|54\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":430,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|55\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":431,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|56\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":432,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|57\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":433,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|58\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":434,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|59\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":435,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|60\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":436,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|61\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":437,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|62\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":438,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|63\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":439,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|64\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":440,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|65\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":441,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|66\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":442,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|67\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":443,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|68\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":444,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|69\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":445,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|70\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":446,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|71\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.60999999999325,\"pid\":447,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|72\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":448,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|73\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":449,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|74\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":450,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|75\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":451,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|76\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":452,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|77\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":453,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|78\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":454,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|79\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":455,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|80\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":456,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|81\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":457,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|82\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":458,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|83\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":459,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|84\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":460,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|85\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":461,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|86\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":462,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|87\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":463,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|88\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.40999999999326,\"pid\":464,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|89\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":465,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|90\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":466,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|91\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":467,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|92\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":468,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|93\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":469,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|94\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":470,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|95\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":471,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|96\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":472,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|97\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":473,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|98\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":474,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|99\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":475,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|100\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":476,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|101\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":477,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|102\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":478,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|103\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.2099999999933,\"pid\":479,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|104\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":480,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|105\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":481,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|106\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":482,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|107\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":483,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|108\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":484,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|109\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":485,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|110\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":486,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|111\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":487,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|112\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":488,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|113\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":489,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|114\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":490,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|115\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":491,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|116\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":492,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|117\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":269.0099999999933,\"pid\":493,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|118\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":494,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|119\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":495,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|120\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":496,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|121\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":497,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|122\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":498,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|123\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":499,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|124\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":500,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|125\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":501,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-ekans|126\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.8099999999933,\"pid\":502,\"ramUsage\":2,\"server\":\"vps-ekans\",\"threads\":4,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-ekans\",\"moduleSequenceNumber\":349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///11e4c54a-2cba-4a1a-a70f-0730baf6acac\",\"moduleSequenceNumber\":349},{\"filename\":\"cell.js\",\"url\":\"blob:file:///1d1bf0e7-851d-4edc-b761-8a289361ada0\",\"moduleSequenceNumber\":352}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-ekans\",\"moduleSequenceNumber\":352,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-gengar\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-gengar\",\"httpPortOpen\":false,\"ip\":\"64.0.0.7\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":508,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":503,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":504,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":505,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":506,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":507,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":508,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":509,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":510,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":511,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.6099999999933,\"pid\":512,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":513,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":514,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":515,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":516,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":517,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|15\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":518,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|16\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":519,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|17\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":520,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|18\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":521,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|19\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":522,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|20\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":523,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|21\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":524,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|22\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":525,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|23\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":526,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|24\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":527,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|25\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.4099999999933,\"pid\":528,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|26\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":529,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|27\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":530,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|28\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":531,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|29\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":532,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|30\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":533,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|31\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":534,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|32\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":535,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|33\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":536,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|34\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":537,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|35\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":538,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|36\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":539,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|37\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":540,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|38\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":541,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|39\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":542,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|40\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":543,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|41\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":544,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|42\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.20999999999333,\"pid\":545,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|43\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":546,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|44\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":547,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|45\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":548,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|46\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":549,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|47\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":550,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|48\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":551,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|49\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":552,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|50\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":553,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|51\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":554,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|52\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":555,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|53\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":556,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|54\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":557,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|55\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":558,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|56\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":559,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|57\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":560,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|58\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":561,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|59\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":268.00999999999334,\"pid\":562,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|60\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":563,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|61\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":564,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|62\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":565,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|63\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":566,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|64\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":567,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|65\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":568,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|66\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":569,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|67\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":570,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|68\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":571,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|69\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":572,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|70\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":573,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|71\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":574,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|72\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":575,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|73\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":576,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|74\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.80999999999335,\"pid\":577,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|75\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":578,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|76\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":579,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|77\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":580,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|78\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":581,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|79\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":582,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|80\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":583,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|81\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":584,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|82\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":585,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|83\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":586,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|84\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":587,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|85\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":588,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|86\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":589,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|87\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":590,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|88\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":591,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|89\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":592,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|90\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.60999999999336,\"pid\":593,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|91\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":594,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|92\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":595,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|93\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":596,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|94\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":597,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|95\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":598,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|96\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":599,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|97\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":600,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|98\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":601,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|99\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":602,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|100\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":603,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|101\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":604,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|102\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":605,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|103\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":606,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|104\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":607,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|105\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":608,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|106\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":609,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|107\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.4099999999934,\"pid\":610,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|108\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":611,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|109\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":612,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|110\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":613,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|111\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":614,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|112\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":615,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|113\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":616,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|114\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":617,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|115\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":618,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|116\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":619,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|117\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":620,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|118\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":621,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|119\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":622,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|120\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":623,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|121\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":624,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|122\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":625,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|123\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":626,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|124\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.2099999999934,\"pid\":627,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|125\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.0099999999934,\"pid\":628,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-gengar|126\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.0099999999934,\"pid\":629,\"ramUsage\":2,\"server\":\"vps-gengar\",\"threads\":2,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-gengar\",\"moduleSequenceNumber\":354,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///6f89a23e-6982-4ceb-aa4b-4d0095ad99de\",\"moduleSequenceNumber\":354},{\"filename\":\"cell.js\",\"url\":\"blob:file:///68ef48bc-b70e-4aba-b44f-0601f32cc439\",\"moduleSequenceNumber\":357}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-gengar\",\"moduleSequenceNumber\":357,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-marowak\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-marowak\",\"httpPortOpen\":false,\"ip\":\"93.5.4.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":126,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.0099999999934,\"pid\":630,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.0099999999934,\"pid\":631,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.0099999999934,\"pid\":632,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":267.0099999999934,\"pid\":633,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":634,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":635,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":636,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":637,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":638,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":639,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":640,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":641,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":642,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":643,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":644,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|15\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":645,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|16\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":646,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|17\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":647,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|18\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":648,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|19\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":649,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|20\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.8099999999934,\"pid\":650,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|21\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":651,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|22\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":652,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|23\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":653,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|24\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":654,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|25\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":655,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|26\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":656,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|27\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":657,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|28\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":658,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|29\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":659,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|30\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":660,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|31\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":661,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|32\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":662,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|33\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":663,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|34\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":664,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|35\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":665,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|36\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.6099999999934,\"pid\":666,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|37\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":667,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|38\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":668,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|39\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":669,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|40\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":670,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|41\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":671,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|42\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":672,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|43\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":673,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|44\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":674,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|45\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":675,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|46\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":676,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|47\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":677,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|48\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":678,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|49\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":679,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|50\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":680,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|51\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":681,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|52\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":682,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|53\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.40999999999343,\"pid\":683,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|54\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":684,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|55\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":685,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|56\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":686,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|57\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":687,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|58\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":688,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|59\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":689,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|60\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":690,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|61\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":691,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-marowak|62\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.20999999999344,\"pid\":692,\"ramUsage\":2,\"server\":\"vps-marowak\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-marowak\",\"moduleSequenceNumber\":359,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///bfdc7442-fd11-47f5-b061-2518696f0dc5\",\"moduleSequenceNumber\":359},{\"filename\":\"cell.js\",\"url\":\"blob:file:///89307a8c-f0a5-4aab-89b2-09b0c5980b28\",\"moduleSequenceNumber\":362}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-marowak\",\"moduleSequenceNumber\":362,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-meowth\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-meowth\",\"httpPortOpen\":false,\"ip\":\"74.1.0.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":62,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":693,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|1\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":694,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|2\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":695,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|3\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":696,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|4\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":697,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|5\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":698,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|6\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":699,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|7\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":700,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|8\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":701,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|9\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":702,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|10\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":266.00999999999345,\"pid\":703,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|11\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":704,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|12\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":705,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|13\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":706,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|14\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":707,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|15\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":708,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|16\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":709,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|17\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":710,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|18\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":711,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|19\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":712,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|20\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":713,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|21\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":714,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|22\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":715,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|23\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":716,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|24\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":717,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|25\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":718,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|26\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":719,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|27\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.80999999999347,\"pid\":720,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|28\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.6099999999935,\"pid\":721,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|29\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.6099999999935,\"pid\":722,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-meowth|30\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.6099999999935,\"pid\":723,\"ramUsage\":2,\"server\":\"vps-meowth\",\"threads\":1,\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-meowth\",\"moduleSequenceNumber\":364,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cdb79cfb-ef29-437b-8b7f-c75a6d202976\",\"moduleSequenceNumber\":364},{\"filename\":\"cell.js\",\"url\":\"blob:file:///f0cb2f0f-356e-42d1-bf08-84e4faa86761\",\"moduleSequenceNumber\":367}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-meowth\",\"moduleSequenceNumber\":367,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-pikachu\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-pikachu\",\"httpPortOpen\":false,\"ip\":\"49.0.5.6\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-pikachu|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":265.6099999999935,\"pid\":724,\"ramUsage\":2,\"server\":\"vps-pikachu\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-pikachu\",\"moduleSequenceNumber\":369,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///01a11462-1da9-4afb-a54d-dacf1256d4e2\",\"moduleSequenceNumber\":369},{\"filename\":\"cell.js\",\"url\":\"blob:file:///39a19c46-cfd8-4075-843e-002f194e2f42\",\"moduleSequenceNumber\":372}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-pikachu\",\"moduleSequenceNumber\":372,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"vps-rattata\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"vps-rattata\",\"httpPortOpen\":false,\"ip\":\"10.0.5.8\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vps-rattata|0\"],\"dataMap\":{},\"filename\":\"cell.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":76.41000000000055,\"pid\":1274,\"ramUsage\":2,\"server\":\"vps-rattata\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nvar portNames = {\\n  \\\"telemetry\\\" : 1,\\n  \\\"db\\\" : 2,\\n  \\\"test\\\" : 20\\n}\\n\\nexport async function safeLoop(ns, f){\\n\\tfor(;;){\\n\\t\\tawait f();\\n\\t\\tawait ns.sleep(100);\\n\\t}\\n}\\n\\nexport function forEach(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    f(i, arr[i]);\\n  }\\n}\\n\\nexport async function forEachAsync(arr, f){\\n  for(var i = 0; i < arr.length; i++){\\n    await f(i, arr[i]);\\n  }\\n}\\n\\nexport function pushAll(destination, newElements){\\n  forEach(newElements, function(i, e){\\n    destination.push(e);\\n  });\\n}\\n\\nexport async function portSend(ns, portName, message){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  await port.write(message);\\n}\\n\\nexport async function portReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  while(await port.empty()){\\n    await ns.sleep(100);\\n  }\\n  return await port.read();\\n}\\n\\nexport async function portTryReceive(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.read();\\n}\\n\\nexport async function portPeek(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.peek();\\n}\\n\\nexport async function portClear(ns, portName){\\n  var portNumber = portNames[portName];\\n  var port = await ns.getPortHandle(portNumber);\\n  return await port.clear();\\n}\",\"filename\":\"utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"vps-rattata\",\"moduleSequenceNumber\":657,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nimport { safeLoop } from \\\"./utils.js\\\";\\n\\nvar _cellStates;\\n\\nfunction getLocalCellState(instanceId){\\n  if(typeof(_cellStates) === \\\"undefined\\\"){\\n    _cellStates = [];\\n  }\\n  if(typeof(_cellStates[instanceId]) === \\\"undefined\\\"){\\n    _cellStates[instanceId] = {\\n      command: \\\"idle\\\",\\n      target: null\\n    };\\n  }\\n  return _cellStates[instanceId];\\n}\\n\\nfunction Cell (ns, options) {\\n  \\n  var instanceId = options.instanceId;\\n  \\n  var cellState = getLocalCellState(instanceId);\\n  \\n  async function execute(){\\n    cellState.command = \\\"idle\\\";\\n    await safeLoop(ns, async function(){\\n      switch(cellState.command){\\n        case \\\"hack\\\":\\n          await ns.hack(cellState.target);\\n          break;\\n        case \\\"weaken\\\":\\n          await ns.weaken(cellState.target);\\n          break;\\n        case \\\"grow\\\":\\n          await ns.grow(cellState.target);\\n          break;\\n        default:\\n          await ns.sleep(6*1000);\\n          break;\\n      }\\n    });\\n  }\\n  \\n  return {\\n\\t  execute\\n  }\\n  \\n};\\n\\nfunction printHelp(ns){\\n  ns.tprint(\\\"Usage:\\\");\\n  ns.tprint(\\\"  cell.js <instance number>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> status\\\");\\n  ns.tprint(\\\"  cell.js <instance number> hack <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> weaken <target>\\\");\\n  ns.tprint(\\\"  cell.js <instance number> grow <target>\\\");\\n}\\n\\nexport async function main(ns) {\\n  \\n  if(ns.args.length == 1){\\n    var instanceId = ns.args[0];\\n    var newCell = new Cell(ns, { instanceId });\\n    await newCell.execute();\\n  } else if(ns.args.length == 2 && ns.args[1] == \\\"status\\\"){\\n    var instanceId = ns.args[0];\\n    var cellState = getLocalCellState(instanceId);\\n    ns.tprint(\\n      \\\"Cell \\\",\\n      instanceId,\\n      \\\": \\\",\\n      cellState.command,\\n      \\\" \\\",\\n      cellState.target);\\n  } else if(ns.args.length == 3){\\n    var instanceId = ns.args[0];\\n    var command = ns.args[1];\\n    var target = ns.args[2];\\n    var cellState = getLocalCellState(instanceId);\\n    cellState.command = command;\\n    cellState.target = target;\\n  } else {\\n    printHelp(ns);\\n  }\\n  \\n}\",\"filename\":\"cell.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"utils.js\",\"url\":\"blob:file:///cf310a0d-9aef-4106-af80-c69beabd0a5d\",\"moduleSequenceNumber\":657},{\"filename\":\"cell.js\",\"url\":\"blob:file:///02c65758-a173-43a1-9639-8529050a8d52\",\"moduleSequenceNumber\":660}],\"dependents\":[],\"ramUsage\":2,\"server\":\"vps-rattata\",\"moduleSequenceNumber\":660,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":146.31004446932994,\"favor\":0,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":0.7757749999999998}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":73781.37137345795}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{\"scana\":\"scan-analyze\",\"traceroute\":\"run traceroute.js\",\"contracts\":\"run file-recon.js cct\",\"vps\":\"run vps.js\",\"dbserver\":\"run database.js server\",\"rc\":\"run rc.js\",\"analyse\":\"analyze\",\"biotic\":\"run biotic.js\"}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":false}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":false}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":false}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"lastUpdate\":0,\"Orders\":{},\"storedCycles\":0,\"ticksUntilCycle\":0}","SettingsSave":"{\"ActiveScriptsServerPageSize\":15,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":300,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":0,\"y\":0,\"opened\":true}}","VersionSave":"10","AllGangsSave":"","LastExportBonus":"1643766798767","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1643766798785"}}